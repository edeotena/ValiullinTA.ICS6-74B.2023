
SchulteTable.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004520  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000a24  0800462c  0800462c  0001462c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005050  08005050  000200b4  2**0
                  CONTENTS
  4 .ARM          00000000  08005050  08005050  000200b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005050  08005050  000200b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005050  08005050  00015050  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005054  08005054  00015054  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b4  20000000  08005058  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001b4  200000b4  0800510c  000200b4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000268  0800510c  00020268  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200b4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c380  00000000  00000000  000200dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002262  00000000  00000000  0002c45d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b68  00000000  00000000  0002e6c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000a70  00000000  00000000  0002f228  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001910a  00000000  00000000  0002fc98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000db7e  00000000  00000000  00048da2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000885ed  00000000  00000000  00056920  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000def0d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003850  00000000  00000000  000def60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000b4 	.word	0x200000b4
 8000128:	00000000 	.word	0x00000000
 800012c:	08004614 	.word	0x08004614

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000b8 	.word	0x200000b8
 8000148:	08004614 	.word	0x08004614

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <ST7735_Init>:
static void ST7735_DrawPixel(uint16_t x, uint16_t y, uint16_t color);

/* Main functions */

void ST7735_Init()
{
 800015c:	b580      	push	{r7, lr}
 800015e:	af00      	add	r7, sp, #0
	TFT_CS_L();
 8000160:	2200      	movs	r2, #0
 8000162:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000166:	4808      	ldr	r0, [pc, #32]	; (8000188 <ST7735_Init+0x2c>)
 8000168:	f001 fcf3 	bl	8001b52 <HAL_GPIO_WritePin>
    ST7735_Reset();
 800016c:	f000 f8c6 	bl	80002fc <ST7735_Reset>
    ST7735_ExecuteCommandList(init_cmds1);
 8000170:	4806      	ldr	r0, [pc, #24]	; (800018c <ST7735_Init+0x30>)
 8000172:	f000 f90f 	bl	8000394 <ST7735_ExecuteCommandList>
    TFT_CS_H();
 8000176:	2201      	movs	r2, #1
 8000178:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800017c:	4802      	ldr	r0, [pc, #8]	; (8000188 <ST7735_Init+0x2c>)
 800017e:	f001 fce8 	bl	8001b52 <HAL_GPIO_WritePin>
}
 8000182:	bf00      	nop
 8000184:	bd80      	pop	{r7, pc}
 8000186:	bf00      	nop
 8000188:	40010c00 	.word	0x40010c00
 800018c:	08004720 	.word	0x08004720

08000190 <ST7735_DrawString>:

void ST7735_DrawString(uint16_t x, uint16_t y, const char* str, FontDef font, uint16_t color, uint16_t bgcolor)
{
 8000190:	b082      	sub	sp, #8
 8000192:	b580      	push	{r7, lr}
 8000194:	b086      	sub	sp, #24
 8000196:	af04      	add	r7, sp, #16
 8000198:	603a      	str	r2, [r7, #0]
 800019a:	617b      	str	r3, [r7, #20]
 800019c:	4603      	mov	r3, r0
 800019e:	80fb      	strh	r3, [r7, #6]
 80001a0:	460b      	mov	r3, r1
 80001a2:	80bb      	strh	r3, [r7, #4]
	TFT_CS_L();
 80001a4:	2200      	movs	r2, #0
 80001a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80001aa:	4814      	ldr	r0, [pc, #80]	; (80001fc <ST7735_DrawString+0x6c>)
 80001ac:	f001 fcd1 	bl	8001b52 <HAL_GPIO_WritePin>

    while(*str)
 80001b0:	e013      	b.n	80001da <ST7735_DrawString+0x4a>
    {
        ST7735_WriteChar(x, y, *str++, font, color, bgcolor);
 80001b2:	683b      	ldr	r3, [r7, #0]
 80001b4:	1c5a      	adds	r2, r3, #1
 80001b6:	603a      	str	r2, [r7, #0]
 80001b8:	781a      	ldrb	r2, [r3, #0]
 80001ba:	88b9      	ldrh	r1, [r7, #4]
 80001bc:	88f8      	ldrh	r0, [r7, #6]
 80001be:	8c3b      	ldrh	r3, [r7, #32]
 80001c0:	9302      	str	r3, [sp, #8]
 80001c2:	8bbb      	ldrh	r3, [r7, #28]
 80001c4:	9301      	str	r3, [sp, #4]
 80001c6:	69bb      	ldr	r3, [r7, #24]
 80001c8:	9300      	str	r3, [sp, #0]
 80001ca:	697b      	ldr	r3, [r7, #20]
 80001cc:	f000 f967 	bl	800049e <ST7735_WriteChar>
        x += font.width;
 80001d0:	7d3b      	ldrb	r3, [r7, #20]
 80001d2:	b29a      	uxth	r2, r3
 80001d4:	88fb      	ldrh	r3, [r7, #6]
 80001d6:	4413      	add	r3, r2
 80001d8:	80fb      	strh	r3, [r7, #6]
    while(*str)
 80001da:	683b      	ldr	r3, [r7, #0]
 80001dc:	781b      	ldrb	r3, [r3, #0]
 80001de:	2b00      	cmp	r3, #0
 80001e0:	d1e7      	bne.n	80001b2 <ST7735_DrawString+0x22>
    }

    TFT_CS_H();
 80001e2:	2201      	movs	r2, #1
 80001e4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80001e8:	4804      	ldr	r0, [pc, #16]	; (80001fc <ST7735_DrawString+0x6c>)
 80001ea:	f001 fcb2 	bl	8001b52 <HAL_GPIO_WritePin>
}
 80001ee:	bf00      	nop
 80001f0:	3708      	adds	r7, #8
 80001f2:	46bd      	mov	sp, r7
 80001f4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80001f8:	b002      	add	sp, #8
 80001fa:	4770      	bx	lr
 80001fc:	40010c00 	.word	0x40010c00

08000200 <ST7735_FillScreen>:

void ST7735_FillScreen(uint16_t color)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b086      	sub	sp, #24
 8000204:	af00      	add	r7, sp, #0
 8000206:	4603      	mov	r3, r0
 8000208:	80fb      	strh	r3, [r7, #6]
	TFT_CS_L();
 800020a:	2200      	movs	r2, #0
 800020c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000210:	481c      	ldr	r0, [pc, #112]	; (8000284 <ST7735_FillScreen+0x84>)
 8000212:	f001 fc9e 	bl	8001b52 <HAL_GPIO_WritePin>
	ST7735_SetAddressWindow(0, 0, ST7735_WIDTH - 1, ST7735_HEIGHT - 1);
 8000216:	239f      	movs	r3, #159	; 0x9f
 8000218:	227f      	movs	r2, #127	; 0x7f
 800021a:	2100      	movs	r1, #0
 800021c:	2000      	movs	r0, #0
 800021e:	f000 f902 	bl	8000426 <ST7735_SetAddressWindow>

	uint8_t data[] = { color >> 8, color & 0xFF };
 8000222:	88fb      	ldrh	r3, [r7, #6]
 8000224:	0a1b      	lsrs	r3, r3, #8
 8000226:	b29b      	uxth	r3, r3
 8000228:	b2db      	uxtb	r3, r3
 800022a:	733b      	strb	r3, [r7, #12]
 800022c:	88fb      	ldrh	r3, [r7, #6]
 800022e:	b2db      	uxtb	r3, r3
 8000230:	737b      	strb	r3, [r7, #13]
	TFT_DC_D();
 8000232:	2201      	movs	r2, #1
 8000234:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000238:	4812      	ldr	r0, [pc, #72]	; (8000284 <ST7735_FillScreen+0x84>)
 800023a:	f001 fc8a 	bl	8001b52 <HAL_GPIO_WritePin>
	for (int y = ST7735_HEIGHT; y >= 0; y--) {
 800023e:	23a0      	movs	r3, #160	; 0xa0
 8000240:	617b      	str	r3, [r7, #20]
 8000242:	e011      	b.n	8000268 <ST7735_FillScreen+0x68>
		for (int x = ST7735_WIDTH; x >= 0; x--) {
 8000244:	2380      	movs	r3, #128	; 0x80
 8000246:	613b      	str	r3, [r7, #16]
 8000248:	e008      	b.n	800025c <ST7735_FillScreen+0x5c>
			ST7735_WriteData(data, sizeof(data));
 800024a:	f107 030c 	add.w	r3, r7, #12
 800024e:	2102      	movs	r1, #2
 8000250:	4618      	mov	r0, r3
 8000252:	f000 f883 	bl	800035c <ST7735_WriteData>
		for (int x = ST7735_WIDTH; x >= 0; x--) {
 8000256:	693b      	ldr	r3, [r7, #16]
 8000258:	3b01      	subs	r3, #1
 800025a:	613b      	str	r3, [r7, #16]
 800025c:	693b      	ldr	r3, [r7, #16]
 800025e:	2b00      	cmp	r3, #0
 8000260:	daf3      	bge.n	800024a <ST7735_FillScreen+0x4a>
	for (int y = ST7735_HEIGHT; y >= 0; y--) {
 8000262:	697b      	ldr	r3, [r7, #20]
 8000264:	3b01      	subs	r3, #1
 8000266:	617b      	str	r3, [r7, #20]
 8000268:	697b      	ldr	r3, [r7, #20]
 800026a:	2b00      	cmp	r3, #0
 800026c:	daea      	bge.n	8000244 <ST7735_FillScreen+0x44>
		}
	}
	TFT_CS_H();
 800026e:	2201      	movs	r2, #1
 8000270:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000274:	4803      	ldr	r0, [pc, #12]	; (8000284 <ST7735_FillScreen+0x84>)
 8000276:	f001 fc6c 	bl	8001b52 <HAL_GPIO_WritePin>
}
 800027a:	bf00      	nop
 800027c:	3718      	adds	r7, #24
 800027e:	46bd      	mov	sp, r7
 8000280:	bd80      	pop	{r7, pc}
 8000282:	bf00      	nop
 8000284:	40010c00 	.word	0x40010c00

08000288 <ST7735_DrawLine>:


void ST7735_DrawLine(int16_t x0, int16_t y0, int16_t x1, int16_t y1, uint16_t color)
{
 8000288:	b590      	push	{r4, r7, lr}
 800028a:	b085      	sub	sp, #20
 800028c:	af00      	add	r7, sp, #0
 800028e:	4604      	mov	r4, r0
 8000290:	4608      	mov	r0, r1
 8000292:	4611      	mov	r1, r2
 8000294:	461a      	mov	r2, r3
 8000296:	4623      	mov	r3, r4
 8000298:	80fb      	strh	r3, [r7, #6]
 800029a:	4603      	mov	r3, r0
 800029c:	80bb      	strh	r3, [r7, #4]
 800029e:	460b      	mov	r3, r1
 80002a0:	807b      	strh	r3, [r7, #2]
 80002a2:	4613      	mov	r3, r2
 80002a4:	803b      	strh	r3, [r7, #0]
	for (int i = x0; i < x1; ++i) {
 80002a6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80002aa:	60fb      	str	r3, [r7, #12]
 80002ac:	e009      	b.n	80002c2 <ST7735_DrawLine+0x3a>
		ST7735_DrawPixel(i, y0, color);
 80002ae:	68fb      	ldr	r3, [r7, #12]
 80002b0:	b29b      	uxth	r3, r3
 80002b2:	88b9      	ldrh	r1, [r7, #4]
 80002b4:	8c3a      	ldrh	r2, [r7, #32]
 80002b6:	4618      	mov	r0, r3
 80002b8:	f000 f968 	bl	800058c <ST7735_DrawPixel>
	for (int i = x0; i < x1; ++i) {
 80002bc:	68fb      	ldr	r3, [r7, #12]
 80002be:	3301      	adds	r3, #1
 80002c0:	60fb      	str	r3, [r7, #12]
 80002c2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80002c6:	68fa      	ldr	r2, [r7, #12]
 80002c8:	429a      	cmp	r2, r3
 80002ca:	dbf0      	blt.n	80002ae <ST7735_DrawLine+0x26>
	}

	for (int i = y0; i < y1; ++i) {
 80002cc:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80002d0:	60bb      	str	r3, [r7, #8]
 80002d2:	e009      	b.n	80002e8 <ST7735_DrawLine+0x60>
		ST7735_DrawPixel(x0, i, color);
 80002d4:	88fb      	ldrh	r3, [r7, #6]
 80002d6:	68ba      	ldr	r2, [r7, #8]
 80002d8:	b291      	uxth	r1, r2
 80002da:	8c3a      	ldrh	r2, [r7, #32]
 80002dc:	4618      	mov	r0, r3
 80002de:	f000 f955 	bl	800058c <ST7735_DrawPixel>
	for (int i = y0; i < y1; ++i) {
 80002e2:	68bb      	ldr	r3, [r7, #8]
 80002e4:	3301      	adds	r3, #1
 80002e6:	60bb      	str	r3, [r7, #8]
 80002e8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80002ec:	68ba      	ldr	r2, [r7, #8]
 80002ee:	429a      	cmp	r2, r3
 80002f0:	dbf0      	blt.n	80002d4 <ST7735_DrawLine+0x4c>
	}
}
 80002f2:	bf00      	nop
 80002f4:	bf00      	nop
 80002f6:	3714      	adds	r7, #20
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bd90      	pop	{r4, r7, pc}

080002fc <ST7735_Reset>:

/* Helpers */

static void ST7735_Reset()
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	af00      	add	r7, sp, #0
  TFT_RES_L();
 8000300:	2200      	movs	r2, #0
 8000302:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000306:	4807      	ldr	r0, [pc, #28]	; (8000324 <ST7735_Reset+0x28>)
 8000308:	f001 fc23 	bl	8001b52 <HAL_GPIO_WritePin>
  HAL_Delay(20);
 800030c:	2014      	movs	r0, #20
 800030e:	f001 f97d 	bl	800160c <HAL_Delay>
  TFT_RES_H();
 8000312:	2201      	movs	r2, #1
 8000314:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000318:	4802      	ldr	r0, [pc, #8]	; (8000324 <ST7735_Reset+0x28>)
 800031a:	f001 fc1a 	bl	8001b52 <HAL_GPIO_WritePin>
}
 800031e:	bf00      	nop
 8000320:	bd80      	pop	{r7, pc}
 8000322:	bf00      	nop
 8000324:	40010c00 	.word	0x40010c00

08000328 <ST7735_WriteCommand>:

static void ST7735_WriteCommand(uint8_t cmd)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	b082      	sub	sp, #8
 800032c:	af00      	add	r7, sp, #0
 800032e:	4603      	mov	r3, r0
 8000330:	71fb      	strb	r3, [r7, #7]
  TFT_DC_C();
 8000332:	2200      	movs	r2, #0
 8000334:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000338:	4806      	ldr	r0, [pc, #24]	; (8000354 <ST7735_WriteCommand+0x2c>)
 800033a:	f001 fc0a 	bl	8001b52 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&ST7735_SPI_PORT, &cmd, sizeof(cmd), HAL_MAX_DELAY);
 800033e:	1df9      	adds	r1, r7, #7
 8000340:	f04f 33ff 	mov.w	r3, #4294967295
 8000344:	2201      	movs	r2, #1
 8000346:	4804      	ldr	r0, [pc, #16]	; (8000358 <ST7735_WriteCommand+0x30>)
 8000348:	f002 fb31 	bl	80029ae <HAL_SPI_Transmit>
}
 800034c:	bf00      	nop
 800034e:	3708      	adds	r7, #8
 8000350:	46bd      	mov	sp, r7
 8000352:	bd80      	pop	{r7, pc}
 8000354:	40010c00 	.word	0x40010c00
 8000358:	200000e8 	.word	0x200000e8

0800035c <ST7735_WriteData>:

static void ST7735_WriteData(uint8_t* buff, size_t buff_size)
{
 800035c:	b580      	push	{r7, lr}
 800035e:	b082      	sub	sp, #8
 8000360:	af00      	add	r7, sp, #0
 8000362:	6078      	str	r0, [r7, #4]
 8000364:	6039      	str	r1, [r7, #0]
  TFT_DC_D();
 8000366:	2201      	movs	r2, #1
 8000368:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800036c:	4807      	ldr	r0, [pc, #28]	; (800038c <ST7735_WriteData+0x30>)
 800036e:	f001 fbf0 	bl	8001b52 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&ST7735_SPI_PORT, buff, buff_size, HAL_MAX_DELAY);
 8000372:	683b      	ldr	r3, [r7, #0]
 8000374:	b29a      	uxth	r2, r3
 8000376:	f04f 33ff 	mov.w	r3, #4294967295
 800037a:	6879      	ldr	r1, [r7, #4]
 800037c:	4804      	ldr	r0, [pc, #16]	; (8000390 <ST7735_WriteData+0x34>)
 800037e:	f002 fb16 	bl	80029ae <HAL_SPI_Transmit>
}
 8000382:	bf00      	nop
 8000384:	3708      	adds	r7, #8
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}
 800038a:	bf00      	nop
 800038c:	40010c00 	.word	0x40010c00
 8000390:	200000e8 	.word	0x200000e8

08000394 <ST7735_ExecuteCommandList>:

static void ST7735_ExecuteCommandList(const uint8_t *addr)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b084      	sub	sp, #16
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
    uint8_t numCommands, numArgs;
    uint16_t ms;

    numCommands = *addr++;
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	1c5a      	adds	r2, r3, #1
 80003a0:	607a      	str	r2, [r7, #4]
 80003a2:	781b      	ldrb	r3, [r3, #0]
 80003a4:	73fb      	strb	r3, [r7, #15]
    while(numCommands--)
 80003a6:	e034      	b.n	8000412 <ST7735_ExecuteCommandList+0x7e>
    {
      uint8_t cmd = *addr++;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	1c5a      	adds	r2, r3, #1
 80003ac:	607a      	str	r2, [r7, #4]
 80003ae:	781b      	ldrb	r3, [r3, #0]
 80003b0:	72fb      	strb	r3, [r7, #11]
        ST7735_WriteCommand(cmd);
 80003b2:	7afb      	ldrb	r3, [r7, #11]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f7ff ffb7 	bl	8000328 <ST7735_WriteCommand>

        numArgs = *addr++;
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	1c5a      	adds	r2, r3, #1
 80003be:	607a      	str	r2, [r7, #4]
 80003c0:	781b      	ldrb	r3, [r3, #0]
 80003c2:	72bb      	strb	r3, [r7, #10]
        // If high bit set, delay follows args
        ms = numArgs & DELAY;
 80003c4:	7abb      	ldrb	r3, [r7, #10]
 80003c6:	b29b      	uxth	r3, r3
 80003c8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003cc:	81bb      	strh	r3, [r7, #12]
        numArgs &= ~DELAY;
 80003ce:	7abb      	ldrb	r3, [r7, #10]
 80003d0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80003d4:	72bb      	strb	r3, [r7, #10]
        if(numArgs)
 80003d6:	7abb      	ldrb	r3, [r7, #10]
 80003d8:	2b00      	cmp	r3, #0
 80003da:	d008      	beq.n	80003ee <ST7735_ExecuteCommandList+0x5a>
        {
            ST7735_WriteData((uint8_t*)addr, numArgs);
 80003dc:	7abb      	ldrb	r3, [r7, #10]
 80003de:	4619      	mov	r1, r3
 80003e0:	6878      	ldr	r0, [r7, #4]
 80003e2:	f7ff ffbb 	bl	800035c <ST7735_WriteData>
            addr += numArgs;
 80003e6:	7abb      	ldrb	r3, [r7, #10]
 80003e8:	687a      	ldr	r2, [r7, #4]
 80003ea:	4413      	add	r3, r2
 80003ec:	607b      	str	r3, [r7, #4]
        }

        if(ms)
 80003ee:	89bb      	ldrh	r3, [r7, #12]
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d00e      	beq.n	8000412 <ST7735_ExecuteCommandList+0x7e>
        {
            ms = *addr++;
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	1c5a      	adds	r2, r3, #1
 80003f8:	607a      	str	r2, [r7, #4]
 80003fa:	781b      	ldrb	r3, [r3, #0]
 80003fc:	81bb      	strh	r3, [r7, #12]
            if(ms == 255) ms = 500;
 80003fe:	89bb      	ldrh	r3, [r7, #12]
 8000400:	2bff      	cmp	r3, #255	; 0xff
 8000402:	d102      	bne.n	800040a <ST7735_ExecuteCommandList+0x76>
 8000404:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000408:	81bb      	strh	r3, [r7, #12]
            HAL_Delay(ms);
 800040a:	89bb      	ldrh	r3, [r7, #12]
 800040c:	4618      	mov	r0, r3
 800040e:	f001 f8fd 	bl	800160c <HAL_Delay>
    while(numCommands--)
 8000412:	7bfb      	ldrb	r3, [r7, #15]
 8000414:	1e5a      	subs	r2, r3, #1
 8000416:	73fa      	strb	r2, [r7, #15]
 8000418:	2b00      	cmp	r3, #0
 800041a:	d1c5      	bne.n	80003a8 <ST7735_ExecuteCommandList+0x14>
        }
    }
}
 800041c:	bf00      	nop
 800041e:	bf00      	nop
 8000420:	3710      	adds	r7, #16
 8000422:	46bd      	mov	sp, r7
 8000424:	bd80      	pop	{r7, pc}

08000426 <ST7735_SetAddressWindow>:

static void ST7735_SetAddressWindow(uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1)
{
 8000426:	b590      	push	{r4, r7, lr}
 8000428:	b085      	sub	sp, #20
 800042a:	af00      	add	r7, sp, #0
 800042c:	4604      	mov	r4, r0
 800042e:	4608      	mov	r0, r1
 8000430:	4611      	mov	r1, r2
 8000432:	461a      	mov	r2, r3
 8000434:	4623      	mov	r3, r4
 8000436:	71fb      	strb	r3, [r7, #7]
 8000438:	4603      	mov	r3, r0
 800043a:	71bb      	strb	r3, [r7, #6]
 800043c:	460b      	mov	r3, r1
 800043e:	717b      	strb	r3, [r7, #5]
 8000440:	4613      	mov	r3, r2
 8000442:	713b      	strb	r3, [r7, #4]
    // column address set
    ST7735_WriteCommand(ST7735_CASET);
 8000444:	202a      	movs	r0, #42	; 0x2a
 8000446:	f7ff ff6f 	bl	8000328 <ST7735_WriteCommand>
    uint8_t data[] = { 0x00, x0 + ST7735_XSTART, 0x00, x1 + ST7735_XSTART };
 800044a:	2300      	movs	r3, #0
 800044c:	733b      	strb	r3, [r7, #12]
 800044e:	79fb      	ldrb	r3, [r7, #7]
 8000450:	3302      	adds	r3, #2
 8000452:	b2db      	uxtb	r3, r3
 8000454:	737b      	strb	r3, [r7, #13]
 8000456:	2300      	movs	r3, #0
 8000458:	73bb      	strb	r3, [r7, #14]
 800045a:	797b      	ldrb	r3, [r7, #5]
 800045c:	3302      	adds	r3, #2
 800045e:	b2db      	uxtb	r3, r3
 8000460:	73fb      	strb	r3, [r7, #15]
    ST7735_WriteData(data, sizeof(data));
 8000462:	f107 030c 	add.w	r3, r7, #12
 8000466:	2104      	movs	r1, #4
 8000468:	4618      	mov	r0, r3
 800046a:	f7ff ff77 	bl	800035c <ST7735_WriteData>

    // row address set
    ST7735_WriteCommand(ST7735_RASET);
 800046e:	202b      	movs	r0, #43	; 0x2b
 8000470:	f7ff ff5a 	bl	8000328 <ST7735_WriteCommand>
    data[1] = y0 + ST7735_YSTART;
 8000474:	79bb      	ldrb	r3, [r7, #6]
 8000476:	3301      	adds	r3, #1
 8000478:	b2db      	uxtb	r3, r3
 800047a:	737b      	strb	r3, [r7, #13]
    data[3] = y1 + ST7735_YSTART;
 800047c:	793b      	ldrb	r3, [r7, #4]
 800047e:	3301      	adds	r3, #1
 8000480:	b2db      	uxtb	r3, r3
 8000482:	73fb      	strb	r3, [r7, #15]
    ST7735_WriteData(data, sizeof(data));
 8000484:	f107 030c 	add.w	r3, r7, #12
 8000488:	2104      	movs	r1, #4
 800048a:	4618      	mov	r0, r3
 800048c:	f7ff ff66 	bl	800035c <ST7735_WriteData>

    // write to RAM
    ST7735_WriteCommand(ST7735_RAMWR);
 8000490:	202c      	movs	r0, #44	; 0x2c
 8000492:	f7ff ff49 	bl	8000328 <ST7735_WriteCommand>
}
 8000496:	bf00      	nop
 8000498:	3714      	adds	r7, #20
 800049a:	46bd      	mov	sp, r7
 800049c:	bd90      	pop	{r4, r7, pc}

0800049e <ST7735_WriteChar>:

static void ST7735_WriteChar(uint16_t x, uint16_t y, char ch, FontDef font, uint16_t color, uint16_t bgcolor)
{
 800049e:	b082      	sub	sp, #8
 80004a0:	b590      	push	{r4, r7, lr}
 80004a2:	b089      	sub	sp, #36	; 0x24
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	637b      	str	r3, [r7, #52]	; 0x34
 80004a8:	4603      	mov	r3, r0
 80004aa:	80fb      	strh	r3, [r7, #6]
 80004ac:	460b      	mov	r3, r1
 80004ae:	80bb      	strh	r3, [r7, #4]
 80004b0:	4613      	mov	r3, r2
 80004b2:	70fb      	strb	r3, [r7, #3]
    uint32_t i, b, j;

    ST7735_SetAddressWindow(x, y, x+font.width-1, y+font.height-1);
 80004b4:	88fb      	ldrh	r3, [r7, #6]
 80004b6:	b2d8      	uxtb	r0, r3
 80004b8:	88bb      	ldrh	r3, [r7, #4]
 80004ba:	b2d9      	uxtb	r1, r3
 80004bc:	88fb      	ldrh	r3, [r7, #6]
 80004be:	b2da      	uxtb	r2, r3
 80004c0:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 80004c4:	4413      	add	r3, r2
 80004c6:	b2db      	uxtb	r3, r3
 80004c8:	3b01      	subs	r3, #1
 80004ca:	b2dc      	uxtb	r4, r3
 80004cc:	88bb      	ldrh	r3, [r7, #4]
 80004ce:	b2da      	uxtb	r2, r3
 80004d0:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 80004d4:	4413      	add	r3, r2
 80004d6:	b2db      	uxtb	r3, r3
 80004d8:	3b01      	subs	r3, #1
 80004da:	b2db      	uxtb	r3, r3
 80004dc:	4622      	mov	r2, r4
 80004de:	f7ff ffa2 	bl	8000426 <ST7735_SetAddressWindow>

    for(i = 0; i < font.height; i++)
 80004e2:	2300      	movs	r3, #0
 80004e4:	61fb      	str	r3, [r7, #28]
 80004e6:	e043      	b.n	8000570 <ST7735_WriteChar+0xd2>
    {
        b = font.data[(ch - 32) * font.height + i];
 80004e8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80004ea:	78fb      	ldrb	r3, [r7, #3]
 80004ec:	3b20      	subs	r3, #32
 80004ee:	f897 1035 	ldrb.w	r1, [r7, #53]	; 0x35
 80004f2:	fb01 f303 	mul.w	r3, r1, r3
 80004f6:	4619      	mov	r1, r3
 80004f8:	69fb      	ldr	r3, [r7, #28]
 80004fa:	440b      	add	r3, r1
 80004fc:	005b      	lsls	r3, r3, #1
 80004fe:	4413      	add	r3, r2
 8000500:	881b      	ldrh	r3, [r3, #0]
 8000502:	617b      	str	r3, [r7, #20]
        for(j = 0; j < font.width; j++)
 8000504:	2300      	movs	r3, #0
 8000506:	61bb      	str	r3, [r7, #24]
 8000508:	e029      	b.n	800055e <ST7735_WriteChar+0xc0>
        {
            if((b << j) & 0x8000)
 800050a:	697a      	ldr	r2, [r7, #20]
 800050c:	69bb      	ldr	r3, [r7, #24]
 800050e:	fa02 f303 	lsl.w	r3, r2, r3
 8000512:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000516:	2b00      	cmp	r3, #0
 8000518:	d00e      	beq.n	8000538 <ST7735_WriteChar+0x9a>
            {
                uint8_t data[] = { color >> 8, color & 0xFF };
 800051a:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800051c:	0a1b      	lsrs	r3, r3, #8
 800051e:	b29b      	uxth	r3, r3
 8000520:	b2db      	uxtb	r3, r3
 8000522:	743b      	strb	r3, [r7, #16]
 8000524:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 8000526:	b2db      	uxtb	r3, r3
 8000528:	747b      	strb	r3, [r7, #17]
                ST7735_WriteData(data, sizeof(data));
 800052a:	f107 0310 	add.w	r3, r7, #16
 800052e:	2102      	movs	r1, #2
 8000530:	4618      	mov	r0, r3
 8000532:	f7ff ff13 	bl	800035c <ST7735_WriteData>
 8000536:	e00f      	b.n	8000558 <ST7735_WriteChar+0xba>
            }
            else
            {
                uint8_t data[] = { bgcolor >> 8, bgcolor & 0xFF };
 8000538:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800053c:	0a1b      	lsrs	r3, r3, #8
 800053e:	b29b      	uxth	r3, r3
 8000540:	b2db      	uxtb	r3, r3
 8000542:	733b      	strb	r3, [r7, #12]
 8000544:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 8000548:	b2db      	uxtb	r3, r3
 800054a:	737b      	strb	r3, [r7, #13]
                ST7735_WriteData(data, sizeof(data));
 800054c:	f107 030c 	add.w	r3, r7, #12
 8000550:	2102      	movs	r1, #2
 8000552:	4618      	mov	r0, r3
 8000554:	f7ff ff02 	bl	800035c <ST7735_WriteData>
        for(j = 0; j < font.width; j++)
 8000558:	69bb      	ldr	r3, [r7, #24]
 800055a:	3301      	adds	r3, #1
 800055c:	61bb      	str	r3, [r7, #24]
 800055e:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8000562:	461a      	mov	r2, r3
 8000564:	69bb      	ldr	r3, [r7, #24]
 8000566:	4293      	cmp	r3, r2
 8000568:	d3cf      	bcc.n	800050a <ST7735_WriteChar+0x6c>
    for(i = 0; i < font.height; i++)
 800056a:	69fb      	ldr	r3, [r7, #28]
 800056c:	3301      	adds	r3, #1
 800056e:	61fb      	str	r3, [r7, #28]
 8000570:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8000574:	461a      	mov	r2, r3
 8000576:	69fb      	ldr	r3, [r7, #28]
 8000578:	4293      	cmp	r3, r2
 800057a:	d3b5      	bcc.n	80004e8 <ST7735_WriteChar+0x4a>
            }
        }
    }
}
 800057c:	bf00      	nop
 800057e:	bf00      	nop
 8000580:	3724      	adds	r7, #36	; 0x24
 8000582:	46bd      	mov	sp, r7
 8000584:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 8000588:	b002      	add	sp, #8
 800058a:	4770      	bx	lr

0800058c <ST7735_DrawPixel>:

void ST7735_DrawPixel(uint16_t x, uint16_t y, uint16_t color)
{
 800058c:	b580      	push	{r7, lr}
 800058e:	b084      	sub	sp, #16
 8000590:	af00      	add	r7, sp, #0
 8000592:	4603      	mov	r3, r0
 8000594:	80fb      	strh	r3, [r7, #6]
 8000596:	460b      	mov	r3, r1
 8000598:	80bb      	strh	r3, [r7, #4]
 800059a:	4613      	mov	r3, r2
 800059c:	807b      	strh	r3, [r7, #2]
    TFT_CS_L();
 800059e:	2200      	movs	r2, #0
 80005a0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80005a4:	4814      	ldr	r0, [pc, #80]	; (80005f8 <ST7735_DrawPixel+0x6c>)
 80005a6:	f001 fad4 	bl	8001b52 <HAL_GPIO_WritePin>

    ST7735_SetAddressWindow(x, y, x+1, y+1);
 80005aa:	88fb      	ldrh	r3, [r7, #6]
 80005ac:	b2d8      	uxtb	r0, r3
 80005ae:	88bb      	ldrh	r3, [r7, #4]
 80005b0:	b2d9      	uxtb	r1, r3
 80005b2:	88fb      	ldrh	r3, [r7, #6]
 80005b4:	b2db      	uxtb	r3, r3
 80005b6:	3301      	adds	r3, #1
 80005b8:	b2da      	uxtb	r2, r3
 80005ba:	88bb      	ldrh	r3, [r7, #4]
 80005bc:	b2db      	uxtb	r3, r3
 80005be:	3301      	adds	r3, #1
 80005c0:	b2db      	uxtb	r3, r3
 80005c2:	f7ff ff30 	bl	8000426 <ST7735_SetAddressWindow>
    uint8_t data[] = { color >> 8, color & 0xFF };
 80005c6:	887b      	ldrh	r3, [r7, #2]
 80005c8:	0a1b      	lsrs	r3, r3, #8
 80005ca:	b29b      	uxth	r3, r3
 80005cc:	b2db      	uxtb	r3, r3
 80005ce:	733b      	strb	r3, [r7, #12]
 80005d0:	887b      	ldrh	r3, [r7, #2]
 80005d2:	b2db      	uxtb	r3, r3
 80005d4:	737b      	strb	r3, [r7, #13]
    ST7735_WriteData(data, sizeof(data));
 80005d6:	f107 030c 	add.w	r3, r7, #12
 80005da:	2102      	movs	r1, #2
 80005dc:	4618      	mov	r0, r3
 80005de:	f7ff febd 	bl	800035c <ST7735_WriteData>

    TFT_CS_H();
 80005e2:	2201      	movs	r2, #1
 80005e4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80005e8:	4803      	ldr	r0, [pc, #12]	; (80005f8 <ST7735_DrawPixel+0x6c>)
 80005ea:	f001 fab2 	bl	8001b52 <HAL_GPIO_WritePin>
}
 80005ee:	bf00      	nop
 80005f0:	3710      	adds	r7, #16
 80005f2:	46bd      	mov	sp, r7
 80005f4:	bd80      	pop	{r7, pc}
 80005f6:	bf00      	nop
 80005f8:	40010c00 	.word	0x40010c00

080005fc <ShowTable>:
static void IsBestTime(int time);

/* Main functions */

void ShowTable(int bcolor, int fcolor)
{
 80005fc:	b590      	push	{r4, r7, lr}
 80005fe:	b093      	sub	sp, #76	; 0x4c
 8000600:	af04      	add	r7, sp, #16
 8000602:	6078      	str	r0, [r7, #4]
 8000604:	6039      	str	r1, [r7, #0]
	state = TABLE_SHOWING;
 8000606:	4b83      	ldr	r3, [pc, #524]	; (8000814 <ShowTable+0x218>)
 8000608:	2202      	movs	r2, #2
 800060a:	701a      	strb	r2, [r3, #0]
	ST7735_FillScreen(bcolor);
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	b29b      	uxth	r3, r3
 8000610:	4618      	mov	r0, r3
 8000612:	f7ff fdf5 	bl	8000200 <ST7735_FillScreen>

	for (int i = 0; i < schulte_table.size; ++i) {
 8000616:	2300      	movs	r3, #0
 8000618:	637b      	str	r3, [r7, #52]	; 0x34
 800061a:	e079      	b.n	8000710 <ShowTable+0x114>
		char format_string[20];
		for (int j = 0; j < schulte_table.size; ++j) {
 800061c:	2300      	movs	r3, #0
 800061e:	633b      	str	r3, [r7, #48]	; 0x30
 8000620:	e04a      	b.n	80006b8 <ShowTable+0xbc>
			format_string[j * 3] = schulte_table.data[i][j] / 10 + '0';
 8000622:	497d      	ldr	r1, [pc, #500]	; (8000818 <ShowTable+0x21c>)
 8000624:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8000626:	4613      	mov	r3, r2
 8000628:	00db      	lsls	r3, r3, #3
 800062a:	1a9b      	subs	r3, r3, r2
 800062c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800062e:	4413      	add	r3, r2
 8000630:	009b      	lsls	r3, r3, #2
 8000632:	440b      	add	r3, r1
 8000634:	685b      	ldr	r3, [r3, #4]
 8000636:	4a79      	ldr	r2, [pc, #484]	; (800081c <ShowTable+0x220>)
 8000638:	fb82 1203 	smull	r1, r2, r2, r3
 800063c:	1092      	asrs	r2, r2, #2
 800063e:	17db      	asrs	r3, r3, #31
 8000640:	1ad3      	subs	r3, r2, r3
 8000642:	b2d9      	uxtb	r1, r3
 8000644:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8000646:	4613      	mov	r3, r2
 8000648:	005b      	lsls	r3, r3, #1
 800064a:	4413      	add	r3, r2
 800064c:	f101 0230 	add.w	r2, r1, #48	; 0x30
 8000650:	b2d2      	uxtb	r2, r2
 8000652:	3338      	adds	r3, #56	; 0x38
 8000654:	443b      	add	r3, r7
 8000656:	f803 2c2c 	strb.w	r2, [r3, #-44]
			format_string[j * 3 + 1] = schulte_table.data[i][j] % 10 + '0';
 800065a:	496f      	ldr	r1, [pc, #444]	; (8000818 <ShowTable+0x21c>)
 800065c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800065e:	4613      	mov	r3, r2
 8000660:	00db      	lsls	r3, r3, #3
 8000662:	1a9b      	subs	r3, r3, r2
 8000664:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8000666:	4413      	add	r3, r2
 8000668:	009b      	lsls	r3, r3, #2
 800066a:	440b      	add	r3, r1
 800066c:	685a      	ldr	r2, [r3, #4]
 800066e:	4b6b      	ldr	r3, [pc, #428]	; (800081c <ShowTable+0x220>)
 8000670:	fb83 1302 	smull	r1, r3, r3, r2
 8000674:	1099      	asrs	r1, r3, #2
 8000676:	17d3      	asrs	r3, r2, #31
 8000678:	1ac9      	subs	r1, r1, r3
 800067a:	460b      	mov	r3, r1
 800067c:	009b      	lsls	r3, r3, #2
 800067e:	440b      	add	r3, r1
 8000680:	005b      	lsls	r3, r3, #1
 8000682:	1ad1      	subs	r1, r2, r3
 8000684:	b2c9      	uxtb	r1, r1
 8000686:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8000688:	4613      	mov	r3, r2
 800068a:	005b      	lsls	r3, r3, #1
 800068c:	4413      	add	r3, r2
 800068e:	3301      	adds	r3, #1
 8000690:	f101 0230 	add.w	r2, r1, #48	; 0x30
 8000694:	b2d2      	uxtb	r2, r2
 8000696:	3338      	adds	r3, #56	; 0x38
 8000698:	443b      	add	r3, r7
 800069a:	f803 2c2c 	strb.w	r2, [r3, #-44]
			format_string[j * 3 + 2] = ' ';
 800069e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80006a0:	4613      	mov	r3, r2
 80006a2:	005b      	lsls	r3, r3, #1
 80006a4:	4413      	add	r3, r2
 80006a6:	3302      	adds	r3, #2
 80006a8:	3338      	adds	r3, #56	; 0x38
 80006aa:	443b      	add	r3, r7
 80006ac:	2220      	movs	r2, #32
 80006ae:	f803 2c2c 	strb.w	r2, [r3, #-44]
		for (int j = 0; j < schulte_table.size; ++j) {
 80006b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80006b4:	3301      	adds	r3, #1
 80006b6:	633b      	str	r3, [r7, #48]	; 0x30
 80006b8:	4b57      	ldr	r3, [pc, #348]	; (8000818 <ShowTable+0x21c>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80006be:	429a      	cmp	r2, r3
 80006c0:	dbaf      	blt.n	8000622 <ShowTable+0x26>
		}
		format_string[schulte_table.size * 3 - 1] = '\0';
 80006c2:	4b55      	ldr	r3, [pc, #340]	; (8000818 <ShowTable+0x21c>)
 80006c4:	681a      	ldr	r2, [r3, #0]
 80006c6:	4613      	mov	r3, r2
 80006c8:	005b      	lsls	r3, r3, #1
 80006ca:	4413      	add	r3, r2
 80006cc:	3b01      	subs	r3, #1
 80006ce:	3338      	adds	r3, #56	; 0x38
 80006d0:	443b      	add	r3, r7
 80006d2:	2200      	movs	r2, #0
 80006d4:	f803 2c2c 	strb.w	r2, [r3, #-44]
		ST7735_DrawString(3, 3 + i * 15, format_string, Font_7x10, fcolor, bcolor);
 80006d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80006da:	b29b      	uxth	r3, r3
 80006dc:	461a      	mov	r2, r3
 80006de:	0112      	lsls	r2, r2, #4
 80006e0:	1ad3      	subs	r3, r2, r3
 80006e2:	b29b      	uxth	r3, r3
 80006e4:	3303      	adds	r3, #3
 80006e6:	b298      	uxth	r0, r3
 80006e8:	683b      	ldr	r3, [r7, #0]
 80006ea:	b29a      	uxth	r2, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	b299      	uxth	r1, r3
 80006f0:	4b4b      	ldr	r3, [pc, #300]	; (8000820 <ShowTable+0x224>)
 80006f2:	f107 040c 	add.w	r4, r7, #12
 80006f6:	9102      	str	r1, [sp, #8]
 80006f8:	9201      	str	r2, [sp, #4]
 80006fa:	685a      	ldr	r2, [r3, #4]
 80006fc:	9200      	str	r2, [sp, #0]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	4622      	mov	r2, r4
 8000702:	4601      	mov	r1, r0
 8000704:	2003      	movs	r0, #3
 8000706:	f7ff fd43 	bl	8000190 <ST7735_DrawString>
	for (int i = 0; i < schulte_table.size; ++i) {
 800070a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800070c:	3301      	adds	r3, #1
 800070e:	637b      	str	r3, [r7, #52]	; 0x34
 8000710:	4b41      	ldr	r3, [pc, #260]	; (8000818 <ShowTable+0x21c>)
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8000716:	429a      	cmp	r2, r3
 8000718:	db80      	blt.n	800061c <ShowTable+0x20>
	}

	for(int i = 1; i < schulte_table.size; ++i) {
 800071a:	2301      	movs	r3, #1
 800071c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800071e:	e044      	b.n	80007aa <ShowTable+0x1ae>
		ST7735_DrawLine(i * 18, 0, i * 18, schulte_table.size * 14 + 4, fcolor);
 8000720:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000722:	b29b      	uxth	r3, r3
 8000724:	461a      	mov	r2, r3
 8000726:	00d2      	lsls	r2, r2, #3
 8000728:	4413      	add	r3, r2
 800072a:	005b      	lsls	r3, r3, #1
 800072c:	b29b      	uxth	r3, r3
 800072e:	b218      	sxth	r0, r3
 8000730:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000732:	b29b      	uxth	r3, r3
 8000734:	461a      	mov	r2, r3
 8000736:	00d2      	lsls	r2, r2, #3
 8000738:	4413      	add	r3, r2
 800073a:	005b      	lsls	r3, r3, #1
 800073c:	b29b      	uxth	r3, r3
 800073e:	b21a      	sxth	r2, r3
 8000740:	4b35      	ldr	r3, [pc, #212]	; (8000818 <ShowTable+0x21c>)
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	b29b      	uxth	r3, r3
 8000746:	4619      	mov	r1, r3
 8000748:	00c9      	lsls	r1, r1, #3
 800074a:	1acb      	subs	r3, r1, r3
 800074c:	005b      	lsls	r3, r3, #1
 800074e:	b29b      	uxth	r3, r3
 8000750:	3304      	adds	r3, #4
 8000752:	b29b      	uxth	r3, r3
 8000754:	b219      	sxth	r1, r3
 8000756:	683b      	ldr	r3, [r7, #0]
 8000758:	b29b      	uxth	r3, r3
 800075a:	9300      	str	r3, [sp, #0]
 800075c:	460b      	mov	r3, r1
 800075e:	2100      	movs	r1, #0
 8000760:	f7ff fd92 	bl	8000288 <ST7735_DrawLine>
		ST7735_DrawLine(0, i * 15, 18 * schulte_table.size + 2, i * 15, fcolor);
 8000764:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000766:	b29b      	uxth	r3, r3
 8000768:	461a      	mov	r2, r3
 800076a:	0112      	lsls	r2, r2, #4
 800076c:	1ad3      	subs	r3, r2, r3
 800076e:	b29b      	uxth	r3, r3
 8000770:	b219      	sxth	r1, r3
 8000772:	4b29      	ldr	r3, [pc, #164]	; (8000818 <ShowTable+0x21c>)
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	b29b      	uxth	r3, r3
 8000778:	461a      	mov	r2, r3
 800077a:	00d2      	lsls	r2, r2, #3
 800077c:	4413      	add	r3, r2
 800077e:	005b      	lsls	r3, r3, #1
 8000780:	b29b      	uxth	r3, r3
 8000782:	3302      	adds	r3, #2
 8000784:	b29b      	uxth	r3, r3
 8000786:	b21a      	sxth	r2, r3
 8000788:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800078a:	b29b      	uxth	r3, r3
 800078c:	4618      	mov	r0, r3
 800078e:	0100      	lsls	r0, r0, #4
 8000790:	1ac3      	subs	r3, r0, r3
 8000792:	b29b      	uxth	r3, r3
 8000794:	b218      	sxth	r0, r3
 8000796:	683b      	ldr	r3, [r7, #0]
 8000798:	b29b      	uxth	r3, r3
 800079a:	9300      	str	r3, [sp, #0]
 800079c:	4603      	mov	r3, r0
 800079e:	2000      	movs	r0, #0
 80007a0:	f7ff fd72 	bl	8000288 <ST7735_DrawLine>
	for(int i = 1; i < schulte_table.size; ++i) {
 80007a4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80007a6:	3301      	adds	r3, #1
 80007a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80007aa:	4b1b      	ldr	r3, [pc, #108]	; (8000818 <ShowTable+0x21c>)
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80007b0:	429a      	cmp	r2, r3
 80007b2:	dbb5      	blt.n	8000720 <ShowTable+0x124>
	}

	char format_string[] = "Size: _x_";
 80007b4:	4a1b      	ldr	r2, [pc, #108]	; (8000824 <ShowTable+0x228>)
 80007b6:	f107 0320 	add.w	r3, r7, #32
 80007ba:	ca07      	ldmia	r2, {r0, r1, r2}
 80007bc:	c303      	stmia	r3!, {r0, r1}
 80007be:	801a      	strh	r2, [r3, #0]
	format_string[6] = format_string[8] =  schulte_table.size + '0';
 80007c0:	4b15      	ldr	r3, [pc, #84]	; (8000818 <ShowTable+0x21c>)
 80007c2:	681b      	ldr	r3, [r3, #0]
 80007c4:	b2db      	uxtb	r3, r3
 80007c6:	3330      	adds	r3, #48	; 0x30
 80007c8:	b2db      	uxtb	r3, r3
 80007ca:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80007ce:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80007d2:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	ST7735_DrawString(3, 3 + (schulte_table.size + 1) * 15, format_string, Font_7x10, fcolor, bcolor);
 80007d6:	4b10      	ldr	r3, [pc, #64]	; (8000818 <ShowTable+0x21c>)
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	3301      	adds	r3, #1
 80007dc:	b29b      	uxth	r3, r3
 80007de:	461a      	mov	r2, r3
 80007e0:	0112      	lsls	r2, r2, #4
 80007e2:	1ad3      	subs	r3, r2, r3
 80007e4:	b29b      	uxth	r3, r3
 80007e6:	3303      	adds	r3, #3
 80007e8:	b298      	uxth	r0, r3
 80007ea:	683b      	ldr	r3, [r7, #0]
 80007ec:	b29a      	uxth	r2, r3
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	b299      	uxth	r1, r3
 80007f2:	4b0b      	ldr	r3, [pc, #44]	; (8000820 <ShowTable+0x224>)
 80007f4:	f107 0420 	add.w	r4, r7, #32
 80007f8:	9102      	str	r1, [sp, #8]
 80007fa:	9201      	str	r2, [sp, #4]
 80007fc:	685a      	ldr	r2, [r3, #4]
 80007fe:	9200      	str	r2, [sp, #0]
 8000800:	681b      	ldr	r3, [r3, #0]
 8000802:	4622      	mov	r2, r4
 8000804:	4601      	mov	r1, r0
 8000806:	2003      	movs	r0, #3
 8000808:	f7ff fcc2 	bl	8000190 <ST7735_DrawString>
}
 800080c:	bf00      	nop
 800080e:	373c      	adds	r7, #60	; 0x3c
 8000810:	46bd      	mov	sp, r7
 8000812:	bd90      	pop	{r4, r7, pc}
 8000814:	200000d0 	.word	0x200000d0
 8000818:	2000018c 	.word	0x2000018c
 800081c:	66666667 	.word	0x66666667
 8000820:	20000000 	.word	0x20000000
 8000824:	0800462c 	.word	0x0800462c

08000828 <ResetScreen>:

void ResetScreen(int bcolor, int fcolor) {
 8000828:	b580      	push	{r7, lr}
 800082a:	b086      	sub	sp, #24
 800082c:	af04      	add	r7, sp, #16
 800082e:	6078      	str	r0, [r7, #4]
 8000830:	6039      	str	r1, [r7, #0]
	  ST7735_FillScreen(bcolor);
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	b29b      	uxth	r3, r3
 8000836:	4618      	mov	r0, r3
 8000838:	f7ff fce2 	bl	8000200 <ST7735_FillScreen>
	  ST7735_DrawString(3, 3, "Choose size from", Font_7x10, fcolor, bcolor);
 800083c:	683b      	ldr	r3, [r7, #0]
 800083e:	b29a      	uxth	r2, r3
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	b299      	uxth	r1, r3
 8000844:	4b1f      	ldr	r3, [pc, #124]	; (80008c4 <ResetScreen+0x9c>)
 8000846:	9102      	str	r1, [sp, #8]
 8000848:	9201      	str	r2, [sp, #4]
 800084a:	685a      	ldr	r2, [r3, #4]
 800084c:	9200      	str	r2, [sp, #0]
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	4a1d      	ldr	r2, [pc, #116]	; (80008c8 <ResetScreen+0xa0>)
 8000852:	2103      	movs	r1, #3
 8000854:	2003      	movs	r0, #3
 8000856:	f7ff fc9b 	bl	8000190 <ST7735_DrawString>
	  ST7735_DrawString(3, 18, "[3;7] by pressing", Font_7x10, fcolor, bcolor);
 800085a:	683b      	ldr	r3, [r7, #0]
 800085c:	b29a      	uxth	r2, r3
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	b299      	uxth	r1, r3
 8000862:	4b18      	ldr	r3, [pc, #96]	; (80008c4 <ResetScreen+0x9c>)
 8000864:	9102      	str	r1, [sp, #8]
 8000866:	9201      	str	r2, [sp, #4]
 8000868:	685a      	ldr	r2, [r3, #4]
 800086a:	9200      	str	r2, [sp, #0]
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	4a17      	ldr	r2, [pc, #92]	; (80008cc <ResetScreen+0xa4>)
 8000870:	2112      	movs	r1, #18
 8000872:	2003      	movs	r0, #3
 8000874:	f7ff fc8c 	bl	8000190 <ST7735_DrawString>
	  ST7735_DrawString(3, 33, "corresponding button", Font_7x10, fcolor, bcolor);
 8000878:	683b      	ldr	r3, [r7, #0]
 800087a:	b29a      	uxth	r2, r3
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	b299      	uxth	r1, r3
 8000880:	4b10      	ldr	r3, [pc, #64]	; (80008c4 <ResetScreen+0x9c>)
 8000882:	9102      	str	r1, [sp, #8]
 8000884:	9201      	str	r2, [sp, #4]
 8000886:	685a      	ldr	r2, [r3, #4]
 8000888:	9200      	str	r2, [sp, #0]
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	4a10      	ldr	r2, [pc, #64]	; (80008d0 <ResetScreen+0xa8>)
 800088e:	2121      	movs	r1, #33	; 0x21
 8000890:	2003      	movs	r0, #3
 8000892:	f7ff fc7d 	bl	8000190 <ST7735_DrawString>
	  ST7735_DrawString(3, 63, "Chosen size:", Font_7x10, fcolor, bcolor);
 8000896:	683b      	ldr	r3, [r7, #0]
 8000898:	b29a      	uxth	r2, r3
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	b299      	uxth	r1, r3
 800089e:	4b09      	ldr	r3, [pc, #36]	; (80008c4 <ResetScreen+0x9c>)
 80008a0:	9102      	str	r1, [sp, #8]
 80008a2:	9201      	str	r2, [sp, #4]
 80008a4:	685a      	ldr	r2, [r3, #4]
 80008a6:	9200      	str	r2, [sp, #0]
 80008a8:	681b      	ldr	r3, [r3, #0]
 80008aa:	4a0a      	ldr	r2, [pc, #40]	; (80008d4 <ResetScreen+0xac>)
 80008ac:	213f      	movs	r1, #63	; 0x3f
 80008ae:	2003      	movs	r0, #3
 80008b0:	f7ff fc6e 	bl	8000190 <ST7735_DrawString>
	  WriteSize(bcolor, fcolor);
 80008b4:	6839      	ldr	r1, [r7, #0]
 80008b6:	6878      	ldr	r0, [r7, #4]
 80008b8:	f000 f924 	bl	8000b04 <WriteSize>
}
 80008bc:	bf00      	nop
 80008be:	3708      	adds	r7, #8
 80008c0:	46bd      	mov	sp, r7
 80008c2:	bd80      	pop	{r7, pc}
 80008c4:	20000000 	.word	0x20000000
 80008c8:	08004638 	.word	0x08004638
 80008cc:	0800464c 	.word	0x0800464c
 80008d0:	08004660 	.word	0x08004660
 80008d4:	08004678 	.word	0x08004678

080008d8 <SizeChosed>:

void SizeChosed(int size, int entropy, int bcolor, int fcolor) {
 80008d8:	b580      	push	{r7, lr}
 80008da:	b084      	sub	sp, #16
 80008dc:	af00      	add	r7, sp, #0
 80008de:	60f8      	str	r0, [r7, #12]
 80008e0:	60b9      	str	r1, [r7, #8]
 80008e2:	607a      	str	r2, [r7, #4]
 80008e4:	603b      	str	r3, [r7, #0]
	schulte_table.size = size;
 80008e6:	4a0a      	ldr	r2, [pc, #40]	; (8000910 <SizeChosed+0x38>)
 80008e8:	68fb      	ldr	r3, [r7, #12]
 80008ea:	6013      	str	r3, [r2, #0]
	WriteSize(bcolor, fcolor);
 80008ec:	6839      	ldr	r1, [r7, #0]
 80008ee:	6878      	ldr	r0, [r7, #4]
 80008f0:	f000 f908 	bl	8000b04 <WriteSize>
	FillTable(entropy, HAL_GetTick());
 80008f4:	f000 fe80 	bl	80015f8 <HAL_GetTick>
 80008f8:	4603      	mov	r3, r0
 80008fa:	4619      	mov	r1, r3
 80008fc:	68b8      	ldr	r0, [r7, #8]
 80008fe:	f000 fd67 	bl	80013d0 <FillTable>
	state = CHOSED_SIZE;
 8000902:	4b04      	ldr	r3, [pc, #16]	; (8000914 <SizeChosed+0x3c>)
 8000904:	2201      	movs	r2, #1
 8000906:	701a      	strb	r2, [r3, #0]
}
 8000908:	bf00      	nop
 800090a:	3710      	adds	r7, #16
 800090c:	46bd      	mov	sp, r7
 800090e:	bd80      	pop	{r7, pc}
 8000910:	2000018c 	.word	0x2000018c
 8000914:	200000d0 	.word	0x200000d0

08000918 <OnStopPressed>:

void OnStopPressed(int time) {
 8000918:	b5f0      	push	{r4, r5, r6, r7, lr}
 800091a:	b0bb      	sub	sp, #236	; 0xec
 800091c:	af04      	add	r7, sp, #16
 800091e:	6078      	str	r0, [r7, #4]
	time = HAL_GetTick() - time;
 8000920:	f000 fe6a 	bl	80015f8 <HAL_GetTick>
 8000924:	4602      	mov	r2, r0
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	1ad3      	subs	r3, r2, r3
 800092a:	607b      	str	r3, [r7, #4]
	results[schulte_table.size - 3].time_sum += time;
 800092c:	4b6c      	ldr	r3, [pc, #432]	; (8000ae0 <OnStopPressed+0x1c8>)
 800092e:	681b      	ldr	r3, [r3, #0]
 8000930:	1eda      	subs	r2, r3, #3
 8000932:	496c      	ldr	r1, [pc, #432]	; (8000ae4 <OnStopPressed+0x1cc>)
 8000934:	4613      	mov	r3, r2
 8000936:	005b      	lsls	r3, r3, #1
 8000938:	4413      	add	r3, r2
 800093a:	009b      	lsls	r3, r3, #2
 800093c:	440b      	add	r3, r1
 800093e:	6819      	ldr	r1, [r3, #0]
 8000940:	4b67      	ldr	r3, [pc, #412]	; (8000ae0 <OnStopPressed+0x1c8>)
 8000942:	681b      	ldr	r3, [r3, #0]
 8000944:	1eda      	subs	r2, r3, #3
 8000946:	687b      	ldr	r3, [r7, #4]
 8000948:	4419      	add	r1, r3
 800094a:	4866      	ldr	r0, [pc, #408]	; (8000ae4 <OnStopPressed+0x1cc>)
 800094c:	4613      	mov	r3, r2
 800094e:	005b      	lsls	r3, r3, #1
 8000950:	4413      	add	r3, r2
 8000952:	009b      	lsls	r3, r3, #2
 8000954:	4403      	add	r3, r0
 8000956:	6019      	str	r1, [r3, #0]
	++results[schulte_table.size - 3].count;
 8000958:	4b61      	ldr	r3, [pc, #388]	; (8000ae0 <OnStopPressed+0x1c8>)
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	1eda      	subs	r2, r3, #3
 800095e:	4961      	ldr	r1, [pc, #388]	; (8000ae4 <OnStopPressed+0x1cc>)
 8000960:	4613      	mov	r3, r2
 8000962:	005b      	lsls	r3, r3, #1
 8000964:	4413      	add	r3, r2
 8000966:	009b      	lsls	r3, r3, #2
 8000968:	440b      	add	r3, r1
 800096a:	3304      	adds	r3, #4
 800096c:	681b      	ldr	r3, [r3, #0]
 800096e:	1c59      	adds	r1, r3, #1
 8000970:	485c      	ldr	r0, [pc, #368]	; (8000ae4 <OnStopPressed+0x1cc>)
 8000972:	4613      	mov	r3, r2
 8000974:	005b      	lsls	r3, r3, #1
 8000976:	4413      	add	r3, r2
 8000978:	009b      	lsls	r3, r3, #2
 800097a:	4403      	add	r3, r0
 800097c:	3304      	adds	r3, #4
 800097e:	6019      	str	r1, [r3, #0]

	IsBestTime(time);
 8000980:	6878      	ldr	r0, [r7, #4]
 8000982:	f000 f939 	bl	8000bf8 <IsBestTime>

	char new_record[100], mean_record[100];
	sprintf(new_record, "New result for %dx%d table:  %02d:%02d:%03d\r\n", schulte_table.size, schulte_table.size, time / 60000, (time / 1000) % 60, time % 1000);
 8000986:	4b56      	ldr	r3, [pc, #344]	; (8000ae0 <OnStopPressed+0x1c8>)
 8000988:	681d      	ldr	r5, [r3, #0]
 800098a:	4b55      	ldr	r3, [pc, #340]	; (8000ae0 <OnStopPressed+0x1c8>)
 800098c:	681e      	ldr	r6, [r3, #0]
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	4a55      	ldr	r2, [pc, #340]	; (8000ae8 <OnStopPressed+0x1d0>)
 8000992:	fb82 1203 	smull	r1, r2, r2, r3
 8000996:	1392      	asrs	r2, r2, #14
 8000998:	17db      	asrs	r3, r3, #31
 800099a:	1ad0      	subs	r0, r2, r3
 800099c:	687b      	ldr	r3, [r7, #4]
 800099e:	4a53      	ldr	r2, [pc, #332]	; (8000aec <OnStopPressed+0x1d4>)
 80009a0:	fb82 1203 	smull	r1, r2, r2, r3
 80009a4:	1192      	asrs	r2, r2, #6
 80009a6:	17db      	asrs	r3, r3, #31
 80009a8:	1ad2      	subs	r2, r2, r3
 80009aa:	4b51      	ldr	r3, [pc, #324]	; (8000af0 <OnStopPressed+0x1d8>)
 80009ac:	fb83 1302 	smull	r1, r3, r3, r2
 80009b0:	4413      	add	r3, r2
 80009b2:	1159      	asrs	r1, r3, #5
 80009b4:	17d3      	asrs	r3, r2, #31
 80009b6:	1ac9      	subs	r1, r1, r3
 80009b8:	460b      	mov	r3, r1
 80009ba:	011b      	lsls	r3, r3, #4
 80009bc:	1a5b      	subs	r3, r3, r1
 80009be:	009b      	lsls	r3, r3, #2
 80009c0:	1ad1      	subs	r1, r2, r3
 80009c2:	687a      	ldr	r2, [r7, #4]
 80009c4:	4b49      	ldr	r3, [pc, #292]	; (8000aec <OnStopPressed+0x1d4>)
 80009c6:	fb83 4302 	smull	r4, r3, r3, r2
 80009ca:	119c      	asrs	r4, r3, #6
 80009cc:	17d3      	asrs	r3, r2, #31
 80009ce:	1ae3      	subs	r3, r4, r3
 80009d0:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80009d4:	fb04 f303 	mul.w	r3, r4, r3
 80009d8:	1ad3      	subs	r3, r2, r3
 80009da:	f107 0470 	add.w	r4, r7, #112	; 0x70
 80009de:	9302      	str	r3, [sp, #8]
 80009e0:	9101      	str	r1, [sp, #4]
 80009e2:	9000      	str	r0, [sp, #0]
 80009e4:	4633      	mov	r3, r6
 80009e6:	462a      	mov	r2, r5
 80009e8:	4942      	ldr	r1, [pc, #264]	; (8000af4 <OnStopPressed+0x1dc>)
 80009ea:	4620      	mov	r0, r4
 80009ec:	f002 fc36 	bl	800325c <siprintf>
	int sum_time = results[schulte_table.size - 3].time_sum / results[schulte_table.size - 3].count;
 80009f0:	4b3b      	ldr	r3, [pc, #236]	; (8000ae0 <OnStopPressed+0x1c8>)
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	1eda      	subs	r2, r3, #3
 80009f6:	493b      	ldr	r1, [pc, #236]	; (8000ae4 <OnStopPressed+0x1cc>)
 80009f8:	4613      	mov	r3, r2
 80009fa:	005b      	lsls	r3, r3, #1
 80009fc:	4413      	add	r3, r2
 80009fe:	009b      	lsls	r3, r3, #2
 8000a00:	440b      	add	r3, r1
 8000a02:	6819      	ldr	r1, [r3, #0]
 8000a04:	4b36      	ldr	r3, [pc, #216]	; (8000ae0 <OnStopPressed+0x1c8>)
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	1eda      	subs	r2, r3, #3
 8000a0a:	4836      	ldr	r0, [pc, #216]	; (8000ae4 <OnStopPressed+0x1cc>)
 8000a0c:	4613      	mov	r3, r2
 8000a0e:	005b      	lsls	r3, r3, #1
 8000a10:	4413      	add	r3, r2
 8000a12:	009b      	lsls	r3, r3, #2
 8000a14:	4403      	add	r3, r0
 8000a16:	3304      	adds	r3, #4
 8000a18:	681b      	ldr	r3, [r3, #0]
 8000a1a:	fb91 f3f3 	sdiv	r3, r1, r3
 8000a1e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
	sprintf(mean_record, "Mean result for %dx%d table: %02d:%02d:%03d\r\n", schulte_table.size, schulte_table.size, sum_time / 60000, (sum_time / 1000) % 60, sum_time % 1000);
 8000a22:	4b2f      	ldr	r3, [pc, #188]	; (8000ae0 <OnStopPressed+0x1c8>)
 8000a24:	681d      	ldr	r5, [r3, #0]
 8000a26:	4b2e      	ldr	r3, [pc, #184]	; (8000ae0 <OnStopPressed+0x1c8>)
 8000a28:	681e      	ldr	r6, [r3, #0]
 8000a2a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8000a2e:	4a2e      	ldr	r2, [pc, #184]	; (8000ae8 <OnStopPressed+0x1d0>)
 8000a30:	fb82 1203 	smull	r1, r2, r2, r3
 8000a34:	1392      	asrs	r2, r2, #14
 8000a36:	17db      	asrs	r3, r3, #31
 8000a38:	1ad0      	subs	r0, r2, r3
 8000a3a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8000a3e:	4a2b      	ldr	r2, [pc, #172]	; (8000aec <OnStopPressed+0x1d4>)
 8000a40:	fb82 1203 	smull	r1, r2, r2, r3
 8000a44:	1192      	asrs	r2, r2, #6
 8000a46:	17db      	asrs	r3, r3, #31
 8000a48:	1ad2      	subs	r2, r2, r3
 8000a4a:	4b29      	ldr	r3, [pc, #164]	; (8000af0 <OnStopPressed+0x1d8>)
 8000a4c:	fb83 1302 	smull	r1, r3, r3, r2
 8000a50:	4413      	add	r3, r2
 8000a52:	1159      	asrs	r1, r3, #5
 8000a54:	17d3      	asrs	r3, r2, #31
 8000a56:	1ac9      	subs	r1, r1, r3
 8000a58:	460b      	mov	r3, r1
 8000a5a:	011b      	lsls	r3, r3, #4
 8000a5c:	1a5b      	subs	r3, r3, r1
 8000a5e:	009b      	lsls	r3, r3, #2
 8000a60:	1ad1      	subs	r1, r2, r3
 8000a62:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 8000a66:	4b21      	ldr	r3, [pc, #132]	; (8000aec <OnStopPressed+0x1d4>)
 8000a68:	fb83 4302 	smull	r4, r3, r3, r2
 8000a6c:	119c      	asrs	r4, r3, #6
 8000a6e:	17d3      	asrs	r3, r2, #31
 8000a70:	1ae3      	subs	r3, r4, r3
 8000a72:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8000a76:	fb04 f303 	mul.w	r3, r4, r3
 8000a7a:	1ad3      	subs	r3, r2, r3
 8000a7c:	f107 040c 	add.w	r4, r7, #12
 8000a80:	9302      	str	r3, [sp, #8]
 8000a82:	9101      	str	r1, [sp, #4]
 8000a84:	9000      	str	r0, [sp, #0]
 8000a86:	4633      	mov	r3, r6
 8000a88:	462a      	mov	r2, r5
 8000a8a:	491b      	ldr	r1, [pc, #108]	; (8000af8 <OnStopPressed+0x1e0>)
 8000a8c:	4620      	mov	r0, r4
 8000a8e:	f002 fbe5 	bl	800325c <siprintf>

	HAL_UART_Transmit(&huart1, (uint8_t *)new_record, strlen(new_record), 100);
 8000a92:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8000a96:	4618      	mov	r0, r3
 8000a98:	f7ff fb58 	bl	800014c <strlen>
 8000a9c:	4603      	mov	r3, r0
 8000a9e:	b29a      	uxth	r2, r3
 8000aa0:	f107 0170 	add.w	r1, r7, #112	; 0x70
 8000aa4:	2364      	movs	r3, #100	; 0x64
 8000aa6:	4815      	ldr	r0, [pc, #84]	; (8000afc <OnStopPressed+0x1e4>)
 8000aa8:	f002 f9ba 	bl	8002e20 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart1, (uint8_t *)mean_record, strlen(mean_record), 100);
 8000aac:	f107 030c 	add.w	r3, r7, #12
 8000ab0:	4618      	mov	r0, r3
 8000ab2:	f7ff fb4b 	bl	800014c <strlen>
 8000ab6:	4603      	mov	r3, r0
 8000ab8:	b29a      	uxth	r2, r3
 8000aba:	f107 010c 	add.w	r1, r7, #12
 8000abe:	2364      	movs	r3, #100	; 0x64
 8000ac0:	480e      	ldr	r0, [pc, #56]	; (8000afc <OnStopPressed+0x1e4>)
 8000ac2:	f002 f9ad 	bl	8002e20 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart1, (uint8_t *)"\r\n", strlen("\r\n"), 100);
 8000ac6:	2364      	movs	r3, #100	; 0x64
 8000ac8:	2202      	movs	r2, #2
 8000aca:	490d      	ldr	r1, [pc, #52]	; (8000b00 <OnStopPressed+0x1e8>)
 8000acc:	480b      	ldr	r0, [pc, #44]	; (8000afc <OnStopPressed+0x1e4>)
 8000ace:	f002 f9a7 	bl	8002e20 <HAL_UART_Transmit>

	schulte_table.size = 0;
 8000ad2:	4b03      	ldr	r3, [pc, #12]	; (8000ae0 <OnStopPressed+0x1c8>)
 8000ad4:	2200      	movs	r2, #0
 8000ad6:	601a      	str	r2, [r3, #0]
}
 8000ad8:	bf00      	nop
 8000ada:	37dc      	adds	r7, #220	; 0xdc
 8000adc:	46bd      	mov	sp, r7
 8000ade:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ae0:	2000018c 	.word	0x2000018c
 8000ae4:	20000008 	.word	0x20000008
 8000ae8:	45e7b273 	.word	0x45e7b273
 8000aec:	10624dd3 	.word	0x10624dd3
 8000af0:	88888889 	.word	0x88888889
 8000af4:	08004688 	.word	0x08004688
 8000af8:	080046b8 	.word	0x080046b8
 8000afc:	20000140 	.word	0x20000140
 8000b00:	080046e8 	.word	0x080046e8

08000b04 <WriteSize>:

/* Helpers */

void WriteSize(int bcolor, int fcolor) {
 8000b04:	b580      	push	{r7, lr}
 8000b06:	b088      	sub	sp, #32
 8000b08:	af04      	add	r7, sp, #16
 8000b0a:	6078      	str	r0, [r7, #4]
 8000b0c:	6039      	str	r1, [r7, #0]
	if (schulte_table.size == 0) {
 8000b0e:	4b1e      	ldr	r3, [pc, #120]	; (8000b88 <WriteSize+0x84>)
 8000b10:	681b      	ldr	r3, [r3, #0]
 8000b12:	2b00      	cmp	r3, #0
 8000b14:	d112      	bne.n	8000b3c <WriteSize+0x38>
		ST7735_DrawString(3, 78, "None", Font_7x10, fcolor, bcolor);
 8000b16:	683b      	ldr	r3, [r7, #0]
 8000b18:	b29a      	uxth	r2, r3
 8000b1a:	687b      	ldr	r3, [r7, #4]
 8000b1c:	b299      	uxth	r1, r3
 8000b1e:	4b1b      	ldr	r3, [pc, #108]	; (8000b8c <WriteSize+0x88>)
 8000b20:	9102      	str	r1, [sp, #8]
 8000b22:	9201      	str	r2, [sp, #4]
 8000b24:	685a      	ldr	r2, [r3, #4]
 8000b26:	9200      	str	r2, [sp, #0]
 8000b28:	681b      	ldr	r3, [r3, #0]
 8000b2a:	4a19      	ldr	r2, [pc, #100]	; (8000b90 <WriteSize+0x8c>)
 8000b2c:	214e      	movs	r1, #78	; 0x4e
 8000b2e:	2003      	movs	r0, #3
 8000b30:	f7ff fb2e 	bl	8000190 <ST7735_DrawString>
		state = CHOOSING_SIZE;
 8000b34:	4b17      	ldr	r3, [pc, #92]	; (8000b94 <WriteSize+0x90>)
 8000b36:	2200      	movs	r2, #0
 8000b38:	701a      	strb	r2, [r3, #0]
		char format_str[5] = "    \0";
		format_str[0] = schulte_table.size + '0';
		ST7735_DrawString(3, 78, format_str, Font_7x10, fcolor, bcolor);
		state = CHOSED_SIZE;
	}
}
 8000b3a:	e021      	b.n	8000b80 <WriteSize+0x7c>
		char format_str[5] = "    \0";
 8000b3c:	4a16      	ldr	r2, [pc, #88]	; (8000b98 <WriteSize+0x94>)
 8000b3e:	f107 0308 	add.w	r3, r7, #8
 8000b42:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000b46:	6018      	str	r0, [r3, #0]
 8000b48:	3304      	adds	r3, #4
 8000b4a:	7019      	strb	r1, [r3, #0]
		format_str[0] = schulte_table.size + '0';
 8000b4c:	4b0e      	ldr	r3, [pc, #56]	; (8000b88 <WriteSize+0x84>)
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	b2db      	uxtb	r3, r3
 8000b52:	3330      	adds	r3, #48	; 0x30
 8000b54:	b2db      	uxtb	r3, r3
 8000b56:	723b      	strb	r3, [r7, #8]
		ST7735_DrawString(3, 78, format_str, Font_7x10, fcolor, bcolor);
 8000b58:	683b      	ldr	r3, [r7, #0]
 8000b5a:	b29a      	uxth	r2, r3
 8000b5c:	687b      	ldr	r3, [r7, #4]
 8000b5e:	b299      	uxth	r1, r3
 8000b60:	4b0a      	ldr	r3, [pc, #40]	; (8000b8c <WriteSize+0x88>)
 8000b62:	f107 0008 	add.w	r0, r7, #8
 8000b66:	9102      	str	r1, [sp, #8]
 8000b68:	9201      	str	r2, [sp, #4]
 8000b6a:	685a      	ldr	r2, [r3, #4]
 8000b6c:	9200      	str	r2, [sp, #0]
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	4602      	mov	r2, r0
 8000b72:	214e      	movs	r1, #78	; 0x4e
 8000b74:	2003      	movs	r0, #3
 8000b76:	f7ff fb0b 	bl	8000190 <ST7735_DrawString>
		state = CHOSED_SIZE;
 8000b7a:	4b06      	ldr	r3, [pc, #24]	; (8000b94 <WriteSize+0x90>)
 8000b7c:	2201      	movs	r2, #1
 8000b7e:	701a      	strb	r2, [r3, #0]
}
 8000b80:	bf00      	nop
 8000b82:	3710      	adds	r7, #16
 8000b84:	46bd      	mov	sp, r7
 8000b86:	bd80      	pop	{r7, pc}
 8000b88:	2000018c 	.word	0x2000018c
 8000b8c:	20000000 	.word	0x20000000
 8000b90:	080046ec 	.word	0x080046ec
 8000b94:	200000d0 	.word	0x200000d0
 8000b98:	080046f4 	.word	0x080046f4

08000b9c <PlaySound>:

void PlaySound(int duration1, int duration2, int time) {
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	b086      	sub	sp, #24
 8000ba0:	af00      	add	r7, sp, #0
 8000ba2:	60f8      	str	r0, [r7, #12]
 8000ba4:	60b9      	str	r1, [r7, #8]
 8000ba6:	607a      	str	r2, [r7, #4]
	for (int i = 0; i < time / (duration1 + duration2); ++i) {
 8000ba8:	2300      	movs	r3, #0
 8000baa:	617b      	str	r3, [r7, #20]
 8000bac:	e014      	b.n	8000bd8 <PlaySound+0x3c>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, 0);
 8000bae:	2200      	movs	r2, #0
 8000bb0:	2180      	movs	r1, #128	; 0x80
 8000bb2:	4810      	ldr	r0, [pc, #64]	; (8000bf4 <PlaySound+0x58>)
 8000bb4:	f000 ffcd 	bl	8001b52 <HAL_GPIO_WritePin>
		HAL_Delay(duration1);
 8000bb8:	68fb      	ldr	r3, [r7, #12]
 8000bba:	4618      	mov	r0, r3
 8000bbc:	f000 fd26 	bl	800160c <HAL_Delay>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, 1);
 8000bc0:	2201      	movs	r2, #1
 8000bc2:	2180      	movs	r1, #128	; 0x80
 8000bc4:	480b      	ldr	r0, [pc, #44]	; (8000bf4 <PlaySound+0x58>)
 8000bc6:	f000 ffc4 	bl	8001b52 <HAL_GPIO_WritePin>
		HAL_Delay(duration2);
 8000bca:	68bb      	ldr	r3, [r7, #8]
 8000bcc:	4618      	mov	r0, r3
 8000bce:	f000 fd1d 	bl	800160c <HAL_Delay>
	for (int i = 0; i < time / (duration1 + duration2); ++i) {
 8000bd2:	697b      	ldr	r3, [r7, #20]
 8000bd4:	3301      	adds	r3, #1
 8000bd6:	617b      	str	r3, [r7, #20]
 8000bd8:	68fa      	ldr	r2, [r7, #12]
 8000bda:	68bb      	ldr	r3, [r7, #8]
 8000bdc:	4413      	add	r3, r2
 8000bde:	687a      	ldr	r2, [r7, #4]
 8000be0:	fb92 f3f3 	sdiv	r3, r2, r3
 8000be4:	697a      	ldr	r2, [r7, #20]
 8000be6:	429a      	cmp	r2, r3
 8000be8:	dbe1      	blt.n	8000bae <PlaySound+0x12>
	}
}
 8000bea:	bf00      	nop
 8000bec:	bf00      	nop
 8000bee:	3718      	adds	r7, #24
 8000bf0:	46bd      	mov	sp, r7
 8000bf2:	bd80      	pop	{r7, pc}
 8000bf4:	40010c00 	.word	0x40010c00

08000bf8 <IsBestTime>:

void IsBestTime(int time) {
 8000bf8:	b580      	push	{r7, lr}
 8000bfa:	b08c      	sub	sp, #48	; 0x30
 8000bfc:	af00      	add	r7, sp, #0
 8000bfe:	6078      	str	r0, [r7, #4]
	if (time <= results[schulte_table.size - 3].best_time) {
 8000c00:	4b1c      	ldr	r3, [pc, #112]	; (8000c74 <IsBestTime+0x7c>)
 8000c02:	681b      	ldr	r3, [r3, #0]
 8000c04:	1eda      	subs	r2, r3, #3
 8000c06:	491c      	ldr	r1, [pc, #112]	; (8000c78 <IsBestTime+0x80>)
 8000c08:	4613      	mov	r3, r2
 8000c0a:	005b      	lsls	r3, r3, #1
 8000c0c:	4413      	add	r3, r2
 8000c0e:	009b      	lsls	r3, r3, #2
 8000c10:	440b      	add	r3, r1
 8000c12:	3308      	adds	r3, #8
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	687a      	ldr	r2, [r7, #4]
 8000c18:	429a      	cmp	r2, r3
 8000c1a:	dc27      	bgt.n	8000c6c <IsBestTime+0x74>
		char message[40];
		sprintf(message, "New best time for %dx%d table!\r\n", schulte_table.size, schulte_table.size);
 8000c1c:	4b15      	ldr	r3, [pc, #84]	; (8000c74 <IsBestTime+0x7c>)
 8000c1e:	681a      	ldr	r2, [r3, #0]
 8000c20:	4b14      	ldr	r3, [pc, #80]	; (8000c74 <IsBestTime+0x7c>)
 8000c22:	681b      	ldr	r3, [r3, #0]
 8000c24:	f107 0008 	add.w	r0, r7, #8
 8000c28:	4914      	ldr	r1, [pc, #80]	; (8000c7c <IsBestTime+0x84>)
 8000c2a:	f002 fb17 	bl	800325c <siprintf>
		HAL_UART_Transmit(&huart1, (uint8_t *)message, strlen(message), 100);
 8000c2e:	f107 0308 	add.w	r3, r7, #8
 8000c32:	4618      	mov	r0, r3
 8000c34:	f7ff fa8a 	bl	800014c <strlen>
 8000c38:	4603      	mov	r3, r0
 8000c3a:	b29a      	uxth	r2, r3
 8000c3c:	f107 0108 	add.w	r1, r7, #8
 8000c40:	2364      	movs	r3, #100	; 0x64
 8000c42:	480f      	ldr	r0, [pc, #60]	; (8000c80 <IsBestTime+0x88>)
 8000c44:	f002 f8ec 	bl	8002e20 <HAL_UART_Transmit>
		results[schulte_table.size - 3].best_time = time;
 8000c48:	4b0a      	ldr	r3, [pc, #40]	; (8000c74 <IsBestTime+0x7c>)
 8000c4a:	681b      	ldr	r3, [r3, #0]
 8000c4c:	1eda      	subs	r2, r3, #3
 8000c4e:	490a      	ldr	r1, [pc, #40]	; (8000c78 <IsBestTime+0x80>)
 8000c50:	4613      	mov	r3, r2
 8000c52:	005b      	lsls	r3, r3, #1
 8000c54:	4413      	add	r3, r2
 8000c56:	009b      	lsls	r3, r3, #2
 8000c58:	440b      	add	r3, r1
 8000c5a:	3308      	adds	r3, #8
 8000c5c:	687a      	ldr	r2, [r7, #4]
 8000c5e:	601a      	str	r2, [r3, #0]
		PlaySound(15, 5, 1000);
 8000c60:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000c64:	2105      	movs	r1, #5
 8000c66:	200f      	movs	r0, #15
 8000c68:	f7ff ff98 	bl	8000b9c <PlaySound>
	}
}
 8000c6c:	bf00      	nop
 8000c6e:	3730      	adds	r7, #48	; 0x30
 8000c70:	46bd      	mov	sp, r7
 8000c72:	bd80      	pop	{r7, pc}
 8000c74:	2000018c 	.word	0x2000018c
 8000c78:	20000008 	.word	0x20000008
 8000c7c:	080046fc 	.word	0x080046fc
 8000c80:	20000140 	.word	0x20000140

08000c84 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000c84:	b580      	push	{r7, lr}
 8000c86:	b084      	sub	sp, #16
 8000c88:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000c8a:	f000 fc5d 	bl	8001548 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000c8e:	f000 f8a1 	bl	8000dd4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000c92:	f000 f96f 	bl	8000f74 <MX_GPIO_Init>
  MX_SPI1_Init();
 8000c96:	f000 f90d 	bl	8000eb4 <MX_SPI1_Init>
  MX_RTC_Init();
 8000c9a:	f000 f8ef 	bl	8000e7c <MX_RTC_Init>
  MX_USART1_UART_Init();
 8000c9e:	f000 f93f 	bl	8000f20 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  int bcolor = ST7735_BLACK;
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	60bb      	str	r3, [r7, #8]
  int fcolor = ST7735_WHITE;
 8000ca6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000caa:	607b      	str	r3, [r7, #4]
  ST7735_Init();
 8000cac:	f7ff fa56 	bl	800015c <ST7735_Init>
  ResetScreen(bcolor, fcolor);
 8000cb0:	6879      	ldr	r1, [r7, #4]
 8000cb2:	68b8      	ldr	r0, [r7, #8]
 8000cb4:	f7ff fdb8 	bl	8000828 <ResetScreen>
  int time = 0;
 8000cb8:	2300      	movs	r3, #0
 8000cba:	60fb      	str	r3, [r7, #12]
  while (1)
  {
	/* USER CODE END WHILE */

	/* USER CODE BEGIN 3 */
	if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_11) == 0 && state != TABLE_SHOWING) {
 8000cbc:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000cc0:	4841      	ldr	r0, [pc, #260]	; (8000dc8 <main+0x144>)
 8000cc2:	f000 ff2f 	bl	8001b24 <HAL_GPIO_ReadPin>
 8000cc6:	4603      	mov	r3, r0
 8000cc8:	2b00      	cmp	r3, #0
 8000cca:	d10a      	bne.n	8000ce2 <main+0x5e>
 8000ccc:	4b3f      	ldr	r3, [pc, #252]	; (8000dcc <main+0x148>)
 8000cce:	781b      	ldrb	r3, [r3, #0]
 8000cd0:	2b02      	cmp	r3, #2
 8000cd2:	d006      	beq.n	8000ce2 <main+0x5e>
	  SizeChosed(3, 18, bcolor, fcolor);
 8000cd4:	687b      	ldr	r3, [r7, #4]
 8000cd6:	68ba      	ldr	r2, [r7, #8]
 8000cd8:	2112      	movs	r1, #18
 8000cda:	2003      	movs	r0, #3
 8000cdc:	f7ff fdfc 	bl	80008d8 <SizeChosed>
 8000ce0:	e071      	b.n	8000dc6 <main+0x142>
	} else if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_12) == 0 && state != TABLE_SHOWING) {
 8000ce2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ce6:	4838      	ldr	r0, [pc, #224]	; (8000dc8 <main+0x144>)
 8000ce8:	f000 ff1c 	bl	8001b24 <HAL_GPIO_ReadPin>
 8000cec:	4603      	mov	r3, r0
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	d10a      	bne.n	8000d08 <main+0x84>
 8000cf2:	4b36      	ldr	r3, [pc, #216]	; (8000dcc <main+0x148>)
 8000cf4:	781b      	ldrb	r3, [r3, #0]
 8000cf6:	2b02      	cmp	r3, #2
 8000cf8:	d006      	beq.n	8000d08 <main+0x84>
	  SizeChosed(4, 32, bcolor, fcolor);
 8000cfa:	687b      	ldr	r3, [r7, #4]
 8000cfc:	68ba      	ldr	r2, [r7, #8]
 8000cfe:	2120      	movs	r1, #32
 8000d00:	2004      	movs	r0, #4
 8000d02:	f7ff fde9 	bl	80008d8 <SizeChosed>
 8000d06:	e05e      	b.n	8000dc6 <main+0x142>
	}  else if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_13) == 0 && state != TABLE_SHOWING) {
 8000d08:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000d0c:	482e      	ldr	r0, [pc, #184]	; (8000dc8 <main+0x144>)
 8000d0e:	f000 ff09 	bl	8001b24 <HAL_GPIO_ReadPin>
 8000d12:	4603      	mov	r3, r0
 8000d14:	2b00      	cmp	r3, #0
 8000d16:	d10a      	bne.n	8000d2e <main+0xaa>
 8000d18:	4b2c      	ldr	r3, [pc, #176]	; (8000dcc <main+0x148>)
 8000d1a:	781b      	ldrb	r3, [r3, #0]
 8000d1c:	2b02      	cmp	r3, #2
 8000d1e:	d006      	beq.n	8000d2e <main+0xaa>
	  SizeChosed(5, 50, bcolor, fcolor);
 8000d20:	687b      	ldr	r3, [r7, #4]
 8000d22:	68ba      	ldr	r2, [r7, #8]
 8000d24:	2132      	movs	r1, #50	; 0x32
 8000d26:	2005      	movs	r0, #5
 8000d28:	f7ff fdd6 	bl	80008d8 <SizeChosed>
 8000d2c:	e04b      	b.n	8000dc6 <main+0x142>
	} else if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_14) == 0 && state != TABLE_SHOWING) {
 8000d2e:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000d32:	4825      	ldr	r0, [pc, #148]	; (8000dc8 <main+0x144>)
 8000d34:	f000 fef6 	bl	8001b24 <HAL_GPIO_ReadPin>
 8000d38:	4603      	mov	r3, r0
 8000d3a:	2b00      	cmp	r3, #0
 8000d3c:	d10a      	bne.n	8000d54 <main+0xd0>
 8000d3e:	4b23      	ldr	r3, [pc, #140]	; (8000dcc <main+0x148>)
 8000d40:	781b      	ldrb	r3, [r3, #0]
 8000d42:	2b02      	cmp	r3, #2
 8000d44:	d006      	beq.n	8000d54 <main+0xd0>
	  SizeChosed(6, 72, bcolor, fcolor);
 8000d46:	687b      	ldr	r3, [r7, #4]
 8000d48:	68ba      	ldr	r2, [r7, #8]
 8000d4a:	2148      	movs	r1, #72	; 0x48
 8000d4c:	2006      	movs	r0, #6
 8000d4e:	f7ff fdc3 	bl	80008d8 <SizeChosed>
 8000d52:	e038      	b.n	8000dc6 <main+0x142>
	} else if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_15) == 0 && state != TABLE_SHOWING) {
 8000d54:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000d58:	481b      	ldr	r0, [pc, #108]	; (8000dc8 <main+0x144>)
 8000d5a:	f000 fee3 	bl	8001b24 <HAL_GPIO_ReadPin>
 8000d5e:	4603      	mov	r3, r0
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d10a      	bne.n	8000d7a <main+0xf6>
 8000d64:	4b19      	ldr	r3, [pc, #100]	; (8000dcc <main+0x148>)
 8000d66:	781b      	ldrb	r3, [r3, #0]
 8000d68:	2b02      	cmp	r3, #2
 8000d6a:	d006      	beq.n	8000d7a <main+0xf6>
	  SizeChosed(7, 98, bcolor, fcolor);
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	68ba      	ldr	r2, [r7, #8]
 8000d70:	2162      	movs	r1, #98	; 0x62
 8000d72:	2007      	movs	r0, #7
 8000d74:	f7ff fdb0 	bl	80008d8 <SizeChosed>
 8000d78:	e025      	b.n	8000dc6 <main+0x142>
	} else if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0) == 0 && state == CHOSED_SIZE) {
 8000d7a:	2101      	movs	r1, #1
 8000d7c:	4814      	ldr	r0, [pc, #80]	; (8000dd0 <main+0x14c>)
 8000d7e:	f000 fed1 	bl	8001b24 <HAL_GPIO_ReadPin>
 8000d82:	4603      	mov	r3, r0
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	d10c      	bne.n	8000da2 <main+0x11e>
 8000d88:	4b10      	ldr	r3, [pc, #64]	; (8000dcc <main+0x148>)
 8000d8a:	781b      	ldrb	r3, [r3, #0]
 8000d8c:	2b01      	cmp	r3, #1
 8000d8e:	d108      	bne.n	8000da2 <main+0x11e>
	  ShowTable(bcolor, fcolor);
 8000d90:	6879      	ldr	r1, [r7, #4]
 8000d92:	68b8      	ldr	r0, [r7, #8]
 8000d94:	f7ff fc32 	bl	80005fc <ShowTable>
	  time = HAL_GetTick();
 8000d98:	f000 fc2e 	bl	80015f8 <HAL_GetTick>
 8000d9c:	4603      	mov	r3, r0
 8000d9e:	60fb      	str	r3, [r7, #12]
 8000da0:	e011      	b.n	8000dc6 <main+0x142>
	} else if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1) == 0 && state == TABLE_SHOWING) {
 8000da2:	2102      	movs	r1, #2
 8000da4:	480a      	ldr	r0, [pc, #40]	; (8000dd0 <main+0x14c>)
 8000da6:	f000 febd 	bl	8001b24 <HAL_GPIO_ReadPin>
 8000daa:	4603      	mov	r3, r0
 8000dac:	2b00      	cmp	r3, #0
 8000dae:	d185      	bne.n	8000cbc <main+0x38>
 8000db0:	4b06      	ldr	r3, [pc, #24]	; (8000dcc <main+0x148>)
 8000db2:	781b      	ldrb	r3, [r3, #0]
 8000db4:	2b02      	cmp	r3, #2
 8000db6:	d181      	bne.n	8000cbc <main+0x38>
	  OnStopPressed(time);
 8000db8:	68f8      	ldr	r0, [r7, #12]
 8000dba:	f7ff fdad 	bl	8000918 <OnStopPressed>
	  ResetScreen(bcolor, fcolor);
 8000dbe:	6879      	ldr	r1, [r7, #4]
 8000dc0:	68b8      	ldr	r0, [r7, #8]
 8000dc2:	f7ff fd31 	bl	8000828 <ResetScreen>
	if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_11) == 0 && state != TABLE_SHOWING) {
 8000dc6:	e779      	b.n	8000cbc <main+0x38>
 8000dc8:	40010800 	.word	0x40010800
 8000dcc:	200000d0 	.word	0x200000d0
 8000dd0:	40010c00 	.word	0x40010c00

08000dd4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000dd4:	b580      	push	{r7, lr}
 8000dd6:	b094      	sub	sp, #80	; 0x50
 8000dd8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000dda:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000dde:	2228      	movs	r2, #40	; 0x28
 8000de0:	2100      	movs	r1, #0
 8000de2:	4618      	mov	r0, r3
 8000de4:	f002 f9c6 	bl	8003174 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000de8:	f107 0314 	add.w	r3, r7, #20
 8000dec:	2200      	movs	r2, #0
 8000dee:	601a      	str	r2, [r3, #0]
 8000df0:	605a      	str	r2, [r3, #4]
 8000df2:	609a      	str	r2, [r3, #8]
 8000df4:	60da      	str	r2, [r3, #12]
 8000df6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000df8:	1d3b      	adds	r3, r7, #4
 8000dfa:	2200      	movs	r2, #0
 8000dfc:	601a      	str	r2, [r3, #0]
 8000dfe:	605a      	str	r2, [r3, #4]
 8000e00:	609a      	str	r2, [r3, #8]
 8000e02:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 8000e04:	230a      	movs	r3, #10
 8000e06:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000e08:	2301      	movs	r3, #1
 8000e0a:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000e0c:	2310      	movs	r3, #16
 8000e0e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8000e10:	2301      	movs	r3, #1
 8000e12:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000e14:	2300      	movs	r3, #0
 8000e16:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000e18:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000e1c:	4618      	mov	r0, r3
 8000e1e:	f000 febd 	bl	8001b9c <HAL_RCC_OscConfig>
 8000e22:	4603      	mov	r3, r0
 8000e24:	2b00      	cmp	r3, #0
 8000e26:	d001      	beq.n	8000e2c <SystemClock_Config+0x58>
  {
    Error_Handler();
 8000e28:	f000 f8fe 	bl	8001028 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000e2c:	230f      	movs	r3, #15
 8000e2e:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000e30:	2300      	movs	r3, #0
 8000e32:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000e34:	2300      	movs	r3, #0
 8000e36:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000e38:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000e3c:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000e3e:	2300      	movs	r3, #0
 8000e40:	627b      	str	r3, [r7, #36]	; 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000e42:	f107 0314 	add.w	r3, r7, #20
 8000e46:	2100      	movs	r1, #0
 8000e48:	4618      	mov	r0, r3
 8000e4a:	f001 f929 	bl	80020a0 <HAL_RCC_ClockConfig>
 8000e4e:	4603      	mov	r3, r0
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d001      	beq.n	8000e58 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8000e54:	f000 f8e8 	bl	8001028 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8000e58:	2301      	movs	r3, #1
 8000e5a:	607b      	str	r3, [r7, #4]
  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 8000e5c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e60:	60bb      	str	r3, [r7, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000e62:	1d3b      	adds	r3, r7, #4
 8000e64:	4618      	mov	r0, r3
 8000e66:	f001 faa9 	bl	80023bc <HAL_RCCEx_PeriphCLKConfig>
 8000e6a:	4603      	mov	r3, r0
 8000e6c:	2b00      	cmp	r3, #0
 8000e6e:	d001      	beq.n	8000e74 <SystemClock_Config+0xa0>
  {
    Error_Handler();
 8000e70:	f000 f8da 	bl	8001028 <Error_Handler>
  }
}
 8000e74:	bf00      	nop
 8000e76:	3750      	adds	r7, #80	; 0x50
 8000e78:	46bd      	mov	sp, r7
 8000e7a:	bd80      	pop	{r7, pc}

08000e7c <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 8000e7c:	b580      	push	{r7, lr}
 8000e7e:	af00      	add	r7, sp, #0

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8000e80:	4b0a      	ldr	r3, [pc, #40]	; (8000eac <MX_RTC_Init+0x30>)
 8000e82:	4a0b      	ldr	r2, [pc, #44]	; (8000eb0 <MX_RTC_Init+0x34>)
 8000e84:	601a      	str	r2, [r3, #0]
  hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 8000e86:	4b09      	ldr	r3, [pc, #36]	; (8000eac <MX_RTC_Init+0x30>)
 8000e88:	f04f 32ff 	mov.w	r2, #4294967295
 8000e8c:	605a      	str	r2, [r3, #4]
  hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 8000e8e:	4b07      	ldr	r3, [pc, #28]	; (8000eac <MX_RTC_Init+0x30>)
 8000e90:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000e94:	609a      	str	r2, [r3, #8]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8000e96:	4805      	ldr	r0, [pc, #20]	; (8000eac <MX_RTC_Init+0x30>)
 8000e98:	f001 fbfc 	bl	8002694 <HAL_RTC_Init>
 8000e9c:	4603      	mov	r3, r0
 8000e9e:	2b00      	cmp	r3, #0
 8000ea0:	d001      	beq.n	8000ea6 <MX_RTC_Init+0x2a>
  {
    Error_Handler();
 8000ea2:	f000 f8c1 	bl	8001028 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8000ea6:	bf00      	nop
 8000ea8:	bd80      	pop	{r7, pc}
 8000eaa:	bf00      	nop
 8000eac:	200000d4 	.word	0x200000d4
 8000eb0:	40002800 	.word	0x40002800

08000eb4 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000eb4:	b580      	push	{r7, lr}
 8000eb6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000eb8:	4b17      	ldr	r3, [pc, #92]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000eba:	4a18      	ldr	r2, [pc, #96]	; (8000f1c <MX_SPI1_Init+0x68>)
 8000ebc:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000ebe:	4b16      	ldr	r3, [pc, #88]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000ec0:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000ec4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000ec6:	4b14      	ldr	r3, [pc, #80]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000ec8:	2200      	movs	r2, #0
 8000eca:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000ecc:	4b12      	ldr	r3, [pc, #72]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000ece:	2200      	movs	r2, #0
 8000ed0:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000ed2:	4b11      	ldr	r3, [pc, #68]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000ed4:	2200      	movs	r2, #0
 8000ed6:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000ed8:	4b0f      	ldr	r3, [pc, #60]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000eda:	2200      	movs	r2, #0
 8000edc:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000ede:	4b0e      	ldr	r3, [pc, #56]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000ee0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000ee4:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 8000ee6:	4b0c      	ldr	r3, [pc, #48]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000ee8:	2208      	movs	r2, #8
 8000eea:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000eec:	4b0a      	ldr	r3, [pc, #40]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000eee:	2200      	movs	r2, #0
 8000ef0:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000ef2:	4b09      	ldr	r3, [pc, #36]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000ef4:	2200      	movs	r2, #0
 8000ef6:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000ef8:	4b07      	ldr	r3, [pc, #28]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000efa:	2200      	movs	r2, #0
 8000efc:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8000efe:	4b06      	ldr	r3, [pc, #24]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000f00:	220a      	movs	r2, #10
 8000f02:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000f04:	4804      	ldr	r0, [pc, #16]	; (8000f18 <MX_SPI1_Init+0x64>)
 8000f06:	f001 fcce 	bl	80028a6 <HAL_SPI_Init>
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	2b00      	cmp	r3, #0
 8000f0e:	d001      	beq.n	8000f14 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000f10:	f000 f88a 	bl	8001028 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000f14:	bf00      	nop
 8000f16:	bd80      	pop	{r7, pc}
 8000f18:	200000e8 	.word	0x200000e8
 8000f1c:	40013000 	.word	0x40013000

08000f20 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000f24:	4b11      	ldr	r3, [pc, #68]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f26:	4a12      	ldr	r2, [pc, #72]	; (8000f70 <MX_USART1_UART_Init+0x50>)
 8000f28:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8000f2a:	4b10      	ldr	r3, [pc, #64]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f2c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000f30:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000f32:	4b0e      	ldr	r3, [pc, #56]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f34:	2200      	movs	r2, #0
 8000f36:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000f38:	4b0c      	ldr	r3, [pc, #48]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000f3e:	4b0b      	ldr	r3, [pc, #44]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f40:	2200      	movs	r2, #0
 8000f42:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000f44:	4b09      	ldr	r3, [pc, #36]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f46:	220c      	movs	r2, #12
 8000f48:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000f4a:	4b08      	ldr	r3, [pc, #32]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000f50:	4b06      	ldr	r3, [pc, #24]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f52:	2200      	movs	r2, #0
 8000f54:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000f56:	4805      	ldr	r0, [pc, #20]	; (8000f6c <MX_USART1_UART_Init+0x4c>)
 8000f58:	f001 ff12 	bl	8002d80 <HAL_UART_Init>
 8000f5c:	4603      	mov	r3, r0
 8000f5e:	2b00      	cmp	r3, #0
 8000f60:	d001      	beq.n	8000f66 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000f62:	f000 f861 	bl	8001028 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000f66:	bf00      	nop
 8000f68:	bd80      	pop	{r7, pc}
 8000f6a:	bf00      	nop
 8000f6c:	20000140 	.word	0x20000140
 8000f70:	40013800 	.word	0x40013800

08000f74 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000f74:	b580      	push	{r7, lr}
 8000f76:	b086      	sub	sp, #24
 8000f78:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f7a:	f107 0308 	add.w	r3, r7, #8
 8000f7e:	2200      	movs	r2, #0
 8000f80:	601a      	str	r2, [r3, #0]
 8000f82:	605a      	str	r2, [r3, #4]
 8000f84:	609a      	str	r2, [r3, #8]
 8000f86:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f88:	4b24      	ldr	r3, [pc, #144]	; (800101c <MX_GPIO_Init+0xa8>)
 8000f8a:	699b      	ldr	r3, [r3, #24]
 8000f8c:	4a23      	ldr	r2, [pc, #140]	; (800101c <MX_GPIO_Init+0xa8>)
 8000f8e:	f043 0304 	orr.w	r3, r3, #4
 8000f92:	6193      	str	r3, [r2, #24]
 8000f94:	4b21      	ldr	r3, [pc, #132]	; (800101c <MX_GPIO_Init+0xa8>)
 8000f96:	699b      	ldr	r3, [r3, #24]
 8000f98:	f003 0304 	and.w	r3, r3, #4
 8000f9c:	607b      	str	r3, [r7, #4]
 8000f9e:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000fa0:	4b1e      	ldr	r3, [pc, #120]	; (800101c <MX_GPIO_Init+0xa8>)
 8000fa2:	699b      	ldr	r3, [r3, #24]
 8000fa4:	4a1d      	ldr	r2, [pc, #116]	; (800101c <MX_GPIO_Init+0xa8>)
 8000fa6:	f043 0308 	orr.w	r3, r3, #8
 8000faa:	6193      	str	r3, [r2, #24]
 8000fac:	4b1b      	ldr	r3, [pc, #108]	; (800101c <MX_GPIO_Init+0xa8>)
 8000fae:	699b      	ldr	r3, [r3, #24]
 8000fb0:	f003 0308 	and.w	r3, r3, #8
 8000fb4:	603b      	str	r3, [r7, #0]
 8000fb6:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_7, GPIO_PIN_RESET);
 8000fb8:	2200      	movs	r2, #0
 8000fba:	f44f 41e1 	mov.w	r1, #28800	; 0x7080
 8000fbe:	4818      	ldr	r0, [pc, #96]	; (8001020 <MX_GPIO_Init+0xac>)
 8000fc0:	f000 fdc7 	bl	8001b52 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PB0 PB1 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8000fc4:	2303      	movs	r3, #3
 8000fc6:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000fc8:	2300      	movs	r3, #0
 8000fca:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000fcc:	2301      	movs	r3, #1
 8000fce:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fd0:	f107 0308 	add.w	r3, r7, #8
 8000fd4:	4619      	mov	r1, r3
 8000fd6:	4812      	ldr	r0, [pc, #72]	; (8001020 <MX_GPIO_Init+0xac>)
 8000fd8:	f000 fc20 	bl	800181c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB12 PB13 PB14 PB7 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_7;
 8000fdc:	f44f 43e1 	mov.w	r3, #28800	; 0x7080
 8000fe0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000fe2:	2301      	movs	r3, #1
 8000fe4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fea:	2302      	movs	r3, #2
 8000fec:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fee:	f107 0308 	add.w	r3, r7, #8
 8000ff2:	4619      	mov	r1, r3
 8000ff4:	480a      	ldr	r0, [pc, #40]	; (8001020 <MX_GPIO_Init+0xac>)
 8000ff6:	f000 fc11 	bl	800181c <HAL_GPIO_Init>

  /*Configure GPIO pins : PA11 PA12 PA13 PA14
                           PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
 8000ffa:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8000ffe:	60bb      	str	r3, [r7, #8]
                          |GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001000:	2300      	movs	r3, #0
 8001002:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001004:	2301      	movs	r3, #1
 8001006:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001008:	f107 0308 	add.w	r3, r7, #8
 800100c:	4619      	mov	r1, r3
 800100e:	4805      	ldr	r0, [pc, #20]	; (8001024 <MX_GPIO_Init+0xb0>)
 8001010:	f000 fc04 	bl	800181c <HAL_GPIO_Init>

}
 8001014:	bf00      	nop
 8001016:	3718      	adds	r7, #24
 8001018:	46bd      	mov	sp, r7
 800101a:	bd80      	pop	{r7, pc}
 800101c:	40021000 	.word	0x40021000
 8001020:	40010c00 	.word	0x40010c00
 8001024:	40010800 	.word	0x40010800

08001028 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001028:	b480      	push	{r7}
 800102a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800102c:	b672      	cpsid	i
}
 800102e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001030:	e7fe      	b.n	8001030 <Error_Handler+0x8>
	...

08001034 <HAL_MspInit>:
 8001034:	b480      	push	{r7}
 8001036:	b085      	sub	sp, #20
 8001038:	af00      	add	r7, sp, #0
 800103a:	4b15      	ldr	r3, [pc, #84]	; (8001090 <HAL_MspInit+0x5c>)
 800103c:	699b      	ldr	r3, [r3, #24]
 800103e:	4a14      	ldr	r2, [pc, #80]	; (8001090 <HAL_MspInit+0x5c>)
 8001040:	f043 0301 	orr.w	r3, r3, #1
 8001044:	6193      	str	r3, [r2, #24]
 8001046:	4b12      	ldr	r3, [pc, #72]	; (8001090 <HAL_MspInit+0x5c>)
 8001048:	699b      	ldr	r3, [r3, #24]
 800104a:	f003 0301 	and.w	r3, r3, #1
 800104e:	60bb      	str	r3, [r7, #8]
 8001050:	68bb      	ldr	r3, [r7, #8]
 8001052:	4b0f      	ldr	r3, [pc, #60]	; (8001090 <HAL_MspInit+0x5c>)
 8001054:	69db      	ldr	r3, [r3, #28]
 8001056:	4a0e      	ldr	r2, [pc, #56]	; (8001090 <HAL_MspInit+0x5c>)
 8001058:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800105c:	61d3      	str	r3, [r2, #28]
 800105e:	4b0c      	ldr	r3, [pc, #48]	; (8001090 <HAL_MspInit+0x5c>)
 8001060:	69db      	ldr	r3, [r3, #28]
 8001062:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001066:	607b      	str	r3, [r7, #4]
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	4b0a      	ldr	r3, [pc, #40]	; (8001094 <HAL_MspInit+0x60>)
 800106c:	685b      	ldr	r3, [r3, #4]
 800106e:	60fb      	str	r3, [r7, #12]
 8001070:	68fb      	ldr	r3, [r7, #12]
 8001072:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001076:	60fb      	str	r3, [r7, #12]
 8001078:	68fb      	ldr	r3, [r7, #12]
 800107a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800107e:	60fb      	str	r3, [r7, #12]
 8001080:	4a04      	ldr	r2, [pc, #16]	; (8001094 <HAL_MspInit+0x60>)
 8001082:	68fb      	ldr	r3, [r7, #12]
 8001084:	6053      	str	r3, [r2, #4]
 8001086:	bf00      	nop
 8001088:	3714      	adds	r7, #20
 800108a:	46bd      	mov	sp, r7
 800108c:	bc80      	pop	{r7}
 800108e:	4770      	bx	lr
 8001090:	40021000 	.word	0x40021000
 8001094:	40010000 	.word	0x40010000

08001098 <HAL_RTC_MspInit>:
 8001098:	b580      	push	{r7, lr}
 800109a:	b084      	sub	sp, #16
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	4a0b      	ldr	r2, [pc, #44]	; (80010d4 <HAL_RTC_MspInit+0x3c>)
 80010a6:	4293      	cmp	r3, r2
 80010a8:	d110      	bne.n	80010cc <HAL_RTC_MspInit+0x34>
 80010aa:	f000 fd6b 	bl	8001b84 <HAL_PWR_EnableBkUpAccess>
 80010ae:	4b0a      	ldr	r3, [pc, #40]	; (80010d8 <HAL_RTC_MspInit+0x40>)
 80010b0:	69db      	ldr	r3, [r3, #28]
 80010b2:	4a09      	ldr	r2, [pc, #36]	; (80010d8 <HAL_RTC_MspInit+0x40>)
 80010b4:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80010b8:	61d3      	str	r3, [r2, #28]
 80010ba:	4b07      	ldr	r3, [pc, #28]	; (80010d8 <HAL_RTC_MspInit+0x40>)
 80010bc:	69db      	ldr	r3, [r3, #28]
 80010be:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80010c2:	60fb      	str	r3, [r7, #12]
 80010c4:	68fb      	ldr	r3, [r7, #12]
 80010c6:	4b05      	ldr	r3, [pc, #20]	; (80010dc <HAL_RTC_MspInit+0x44>)
 80010c8:	2201      	movs	r2, #1
 80010ca:	601a      	str	r2, [r3, #0]
 80010cc:	bf00      	nop
 80010ce:	3710      	adds	r7, #16
 80010d0:	46bd      	mov	sp, r7
 80010d2:	bd80      	pop	{r7, pc}
 80010d4:	40002800 	.word	0x40002800
 80010d8:	40021000 	.word	0x40021000
 80010dc:	4242043c 	.word	0x4242043c

080010e0 <HAL_SPI_MspInit>:
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b088      	sub	sp, #32
 80010e4:	af00      	add	r7, sp, #0
 80010e6:	6078      	str	r0, [r7, #4]
 80010e8:	f107 0310 	add.w	r3, r7, #16
 80010ec:	2200      	movs	r2, #0
 80010ee:	601a      	str	r2, [r3, #0]
 80010f0:	605a      	str	r2, [r3, #4]
 80010f2:	609a      	str	r2, [r3, #8]
 80010f4:	60da      	str	r2, [r3, #12]
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	681b      	ldr	r3, [r3, #0]
 80010fa:	4a15      	ldr	r2, [pc, #84]	; (8001150 <HAL_SPI_MspInit+0x70>)
 80010fc:	4293      	cmp	r3, r2
 80010fe:	d123      	bne.n	8001148 <HAL_SPI_MspInit+0x68>
 8001100:	4b14      	ldr	r3, [pc, #80]	; (8001154 <HAL_SPI_MspInit+0x74>)
 8001102:	699b      	ldr	r3, [r3, #24]
 8001104:	4a13      	ldr	r2, [pc, #76]	; (8001154 <HAL_SPI_MspInit+0x74>)
 8001106:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800110a:	6193      	str	r3, [r2, #24]
 800110c:	4b11      	ldr	r3, [pc, #68]	; (8001154 <HAL_SPI_MspInit+0x74>)
 800110e:	699b      	ldr	r3, [r3, #24]
 8001110:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001114:	60fb      	str	r3, [r7, #12]
 8001116:	68fb      	ldr	r3, [r7, #12]
 8001118:	4b0e      	ldr	r3, [pc, #56]	; (8001154 <HAL_SPI_MspInit+0x74>)
 800111a:	699b      	ldr	r3, [r3, #24]
 800111c:	4a0d      	ldr	r2, [pc, #52]	; (8001154 <HAL_SPI_MspInit+0x74>)
 800111e:	f043 0304 	orr.w	r3, r3, #4
 8001122:	6193      	str	r3, [r2, #24]
 8001124:	4b0b      	ldr	r3, [pc, #44]	; (8001154 <HAL_SPI_MspInit+0x74>)
 8001126:	699b      	ldr	r3, [r3, #24]
 8001128:	f003 0304 	and.w	r3, r3, #4
 800112c:	60bb      	str	r3, [r7, #8]
 800112e:	68bb      	ldr	r3, [r7, #8]
 8001130:	23a0      	movs	r3, #160	; 0xa0
 8001132:	613b      	str	r3, [r7, #16]
 8001134:	2302      	movs	r3, #2
 8001136:	617b      	str	r3, [r7, #20]
 8001138:	2303      	movs	r3, #3
 800113a:	61fb      	str	r3, [r7, #28]
 800113c:	f107 0310 	add.w	r3, r7, #16
 8001140:	4619      	mov	r1, r3
 8001142:	4805      	ldr	r0, [pc, #20]	; (8001158 <HAL_SPI_MspInit+0x78>)
 8001144:	f000 fb6a 	bl	800181c <HAL_GPIO_Init>
 8001148:	bf00      	nop
 800114a:	3720      	adds	r7, #32
 800114c:	46bd      	mov	sp, r7
 800114e:	bd80      	pop	{r7, pc}
 8001150:	40013000 	.word	0x40013000
 8001154:	40021000 	.word	0x40021000
 8001158:	40010800 	.word	0x40010800

0800115c <HAL_UART_MspInit>:
 800115c:	b580      	push	{r7, lr}
 800115e:	b088      	sub	sp, #32
 8001160:	af00      	add	r7, sp, #0
 8001162:	6078      	str	r0, [r7, #4]
 8001164:	f107 0310 	add.w	r3, r7, #16
 8001168:	2200      	movs	r2, #0
 800116a:	601a      	str	r2, [r3, #0]
 800116c:	605a      	str	r2, [r3, #4]
 800116e:	609a      	str	r2, [r3, #8]
 8001170:	60da      	str	r2, [r3, #12]
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	4a1c      	ldr	r2, [pc, #112]	; (80011e8 <HAL_UART_MspInit+0x8c>)
 8001178:	4293      	cmp	r3, r2
 800117a:	d131      	bne.n	80011e0 <HAL_UART_MspInit+0x84>
 800117c:	4b1b      	ldr	r3, [pc, #108]	; (80011ec <HAL_UART_MspInit+0x90>)
 800117e:	699b      	ldr	r3, [r3, #24]
 8001180:	4a1a      	ldr	r2, [pc, #104]	; (80011ec <HAL_UART_MspInit+0x90>)
 8001182:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001186:	6193      	str	r3, [r2, #24]
 8001188:	4b18      	ldr	r3, [pc, #96]	; (80011ec <HAL_UART_MspInit+0x90>)
 800118a:	699b      	ldr	r3, [r3, #24]
 800118c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001190:	60fb      	str	r3, [r7, #12]
 8001192:	68fb      	ldr	r3, [r7, #12]
 8001194:	4b15      	ldr	r3, [pc, #84]	; (80011ec <HAL_UART_MspInit+0x90>)
 8001196:	699b      	ldr	r3, [r3, #24]
 8001198:	4a14      	ldr	r2, [pc, #80]	; (80011ec <HAL_UART_MspInit+0x90>)
 800119a:	f043 0304 	orr.w	r3, r3, #4
 800119e:	6193      	str	r3, [r2, #24]
 80011a0:	4b12      	ldr	r3, [pc, #72]	; (80011ec <HAL_UART_MspInit+0x90>)
 80011a2:	699b      	ldr	r3, [r3, #24]
 80011a4:	f003 0304 	and.w	r3, r3, #4
 80011a8:	60bb      	str	r3, [r7, #8]
 80011aa:	68bb      	ldr	r3, [r7, #8]
 80011ac:	f44f 7300 	mov.w	r3, #512	; 0x200
 80011b0:	613b      	str	r3, [r7, #16]
 80011b2:	2302      	movs	r3, #2
 80011b4:	617b      	str	r3, [r7, #20]
 80011b6:	2303      	movs	r3, #3
 80011b8:	61fb      	str	r3, [r7, #28]
 80011ba:	f107 0310 	add.w	r3, r7, #16
 80011be:	4619      	mov	r1, r3
 80011c0:	480b      	ldr	r0, [pc, #44]	; (80011f0 <HAL_UART_MspInit+0x94>)
 80011c2:	f000 fb2b 	bl	800181c <HAL_GPIO_Init>
 80011c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011ca:	613b      	str	r3, [r7, #16]
 80011cc:	2300      	movs	r3, #0
 80011ce:	617b      	str	r3, [r7, #20]
 80011d0:	2300      	movs	r3, #0
 80011d2:	61bb      	str	r3, [r7, #24]
 80011d4:	f107 0310 	add.w	r3, r7, #16
 80011d8:	4619      	mov	r1, r3
 80011da:	4805      	ldr	r0, [pc, #20]	; (80011f0 <HAL_UART_MspInit+0x94>)
 80011dc:	f000 fb1e 	bl	800181c <HAL_GPIO_Init>
 80011e0:	bf00      	nop
 80011e2:	3720      	adds	r7, #32
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	40013800 	.word	0x40013800
 80011ec:	40021000 	.word	0x40021000
 80011f0:	40010800 	.word	0x40010800

080011f4 <NMI_Handler>:
 80011f4:	b480      	push	{r7}
 80011f6:	af00      	add	r7, sp, #0
 80011f8:	e7fe      	b.n	80011f8 <NMI_Handler+0x4>

080011fa <HardFault_Handler>:
 80011fa:	b480      	push	{r7}
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	e7fe      	b.n	80011fe <HardFault_Handler+0x4>

08001200 <MemManage_Handler>:
 8001200:	b480      	push	{r7}
 8001202:	af00      	add	r7, sp, #0
 8001204:	e7fe      	b.n	8001204 <MemManage_Handler+0x4>

08001206 <BusFault_Handler>:
 8001206:	b480      	push	{r7}
 8001208:	af00      	add	r7, sp, #0
 800120a:	e7fe      	b.n	800120a <BusFault_Handler+0x4>

0800120c <UsageFault_Handler>:
 800120c:	b480      	push	{r7}
 800120e:	af00      	add	r7, sp, #0
 8001210:	e7fe      	b.n	8001210 <UsageFault_Handler+0x4>

08001212 <SVC_Handler>:
 8001212:	b480      	push	{r7}
 8001214:	af00      	add	r7, sp, #0
 8001216:	bf00      	nop
 8001218:	46bd      	mov	sp, r7
 800121a:	bc80      	pop	{r7}
 800121c:	4770      	bx	lr

0800121e <DebugMon_Handler>:
 800121e:	b480      	push	{r7}
 8001220:	af00      	add	r7, sp, #0
 8001222:	bf00      	nop
 8001224:	46bd      	mov	sp, r7
 8001226:	bc80      	pop	{r7}
 8001228:	4770      	bx	lr

0800122a <PendSV_Handler>:
 800122a:	b480      	push	{r7}
 800122c:	af00      	add	r7, sp, #0
 800122e:	bf00      	nop
 8001230:	46bd      	mov	sp, r7
 8001232:	bc80      	pop	{r7}
 8001234:	4770      	bx	lr

08001236 <SysTick_Handler>:
 8001236:	b580      	push	{r7, lr}
 8001238:	af00      	add	r7, sp, #0
 800123a:	f000 f9cb 	bl	80015d4 <HAL_IncTick>
 800123e:	bf00      	nop
 8001240:	bd80      	pop	{r7, pc}

08001242 <_getpid>:
 8001242:	b480      	push	{r7}
 8001244:	af00      	add	r7, sp, #0
 8001246:	2301      	movs	r3, #1
 8001248:	4618      	mov	r0, r3
 800124a:	46bd      	mov	sp, r7
 800124c:	bc80      	pop	{r7}
 800124e:	4770      	bx	lr

08001250 <_kill>:
 8001250:	b580      	push	{r7, lr}
 8001252:	b082      	sub	sp, #8
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
 8001258:	6039      	str	r1, [r7, #0]
 800125a:	f001 ff61 	bl	8003120 <__errno>
 800125e:	4603      	mov	r3, r0
 8001260:	2216      	movs	r2, #22
 8001262:	601a      	str	r2, [r3, #0]
 8001264:	f04f 33ff 	mov.w	r3, #4294967295
 8001268:	4618      	mov	r0, r3
 800126a:	3708      	adds	r7, #8
 800126c:	46bd      	mov	sp, r7
 800126e:	bd80      	pop	{r7, pc}

08001270 <_exit>:
 8001270:	b580      	push	{r7, lr}
 8001272:	b082      	sub	sp, #8
 8001274:	af00      	add	r7, sp, #0
 8001276:	6078      	str	r0, [r7, #4]
 8001278:	f04f 31ff 	mov.w	r1, #4294967295
 800127c:	6878      	ldr	r0, [r7, #4]
 800127e:	f7ff ffe7 	bl	8001250 <_kill>
 8001282:	e7fe      	b.n	8001282 <_exit+0x12>

08001284 <_read>:
 8001284:	b580      	push	{r7, lr}
 8001286:	b086      	sub	sp, #24
 8001288:	af00      	add	r7, sp, #0
 800128a:	60f8      	str	r0, [r7, #12]
 800128c:	60b9      	str	r1, [r7, #8]
 800128e:	607a      	str	r2, [r7, #4]
 8001290:	2300      	movs	r3, #0
 8001292:	617b      	str	r3, [r7, #20]
 8001294:	e00a      	b.n	80012ac <_read+0x28>
 8001296:	f3af 8000 	nop.w
 800129a:	4601      	mov	r1, r0
 800129c:	68bb      	ldr	r3, [r7, #8]
 800129e:	1c5a      	adds	r2, r3, #1
 80012a0:	60ba      	str	r2, [r7, #8]
 80012a2:	b2ca      	uxtb	r2, r1
 80012a4:	701a      	strb	r2, [r3, #0]
 80012a6:	697b      	ldr	r3, [r7, #20]
 80012a8:	3301      	adds	r3, #1
 80012aa:	617b      	str	r3, [r7, #20]
 80012ac:	697a      	ldr	r2, [r7, #20]
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	429a      	cmp	r2, r3
 80012b2:	dbf0      	blt.n	8001296 <_read+0x12>
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	4618      	mov	r0, r3
 80012b8:	3718      	adds	r7, #24
 80012ba:	46bd      	mov	sp, r7
 80012bc:	bd80      	pop	{r7, pc}

080012be <_write>:
 80012be:	b580      	push	{r7, lr}
 80012c0:	b086      	sub	sp, #24
 80012c2:	af00      	add	r7, sp, #0
 80012c4:	60f8      	str	r0, [r7, #12]
 80012c6:	60b9      	str	r1, [r7, #8]
 80012c8:	607a      	str	r2, [r7, #4]
 80012ca:	2300      	movs	r3, #0
 80012cc:	617b      	str	r3, [r7, #20]
 80012ce:	e009      	b.n	80012e4 <_write+0x26>
 80012d0:	68bb      	ldr	r3, [r7, #8]
 80012d2:	1c5a      	adds	r2, r3, #1
 80012d4:	60ba      	str	r2, [r7, #8]
 80012d6:	781b      	ldrb	r3, [r3, #0]
 80012d8:	4618      	mov	r0, r3
 80012da:	f3af 8000 	nop.w
 80012de:	697b      	ldr	r3, [r7, #20]
 80012e0:	3301      	adds	r3, #1
 80012e2:	617b      	str	r3, [r7, #20]
 80012e4:	697a      	ldr	r2, [r7, #20]
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	429a      	cmp	r2, r3
 80012ea:	dbf1      	blt.n	80012d0 <_write+0x12>
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	4618      	mov	r0, r3
 80012f0:	3718      	adds	r7, #24
 80012f2:	46bd      	mov	sp, r7
 80012f4:	bd80      	pop	{r7, pc}

080012f6 <_close>:
 80012f6:	b480      	push	{r7}
 80012f8:	b083      	sub	sp, #12
 80012fa:	af00      	add	r7, sp, #0
 80012fc:	6078      	str	r0, [r7, #4]
 80012fe:	f04f 33ff 	mov.w	r3, #4294967295
 8001302:	4618      	mov	r0, r3
 8001304:	370c      	adds	r7, #12
 8001306:	46bd      	mov	sp, r7
 8001308:	bc80      	pop	{r7}
 800130a:	4770      	bx	lr

0800130c <_fstat>:
 800130c:	b480      	push	{r7}
 800130e:	b083      	sub	sp, #12
 8001310:	af00      	add	r7, sp, #0
 8001312:	6078      	str	r0, [r7, #4]
 8001314:	6039      	str	r1, [r7, #0]
 8001316:	683b      	ldr	r3, [r7, #0]
 8001318:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800131c:	605a      	str	r2, [r3, #4]
 800131e:	2300      	movs	r3, #0
 8001320:	4618      	mov	r0, r3
 8001322:	370c      	adds	r7, #12
 8001324:	46bd      	mov	sp, r7
 8001326:	bc80      	pop	{r7}
 8001328:	4770      	bx	lr

0800132a <_isatty>:
 800132a:	b480      	push	{r7}
 800132c:	b083      	sub	sp, #12
 800132e:	af00      	add	r7, sp, #0
 8001330:	6078      	str	r0, [r7, #4]
 8001332:	2301      	movs	r3, #1
 8001334:	4618      	mov	r0, r3
 8001336:	370c      	adds	r7, #12
 8001338:	46bd      	mov	sp, r7
 800133a:	bc80      	pop	{r7}
 800133c:	4770      	bx	lr

0800133e <_lseek>:
 800133e:	b480      	push	{r7}
 8001340:	b085      	sub	sp, #20
 8001342:	af00      	add	r7, sp, #0
 8001344:	60f8      	str	r0, [r7, #12]
 8001346:	60b9      	str	r1, [r7, #8]
 8001348:	607a      	str	r2, [r7, #4]
 800134a:	2300      	movs	r3, #0
 800134c:	4618      	mov	r0, r3
 800134e:	3714      	adds	r7, #20
 8001350:	46bd      	mov	sp, r7
 8001352:	bc80      	pop	{r7}
 8001354:	4770      	bx	lr
	...

08001358 <_sbrk>:
 8001358:	b580      	push	{r7, lr}
 800135a:	b086      	sub	sp, #24
 800135c:	af00      	add	r7, sp, #0
 800135e:	6078      	str	r0, [r7, #4]
 8001360:	4a14      	ldr	r2, [pc, #80]	; (80013b4 <_sbrk+0x5c>)
 8001362:	4b15      	ldr	r3, [pc, #84]	; (80013b8 <_sbrk+0x60>)
 8001364:	1ad3      	subs	r3, r2, r3
 8001366:	617b      	str	r3, [r7, #20]
 8001368:	697b      	ldr	r3, [r7, #20]
 800136a:	613b      	str	r3, [r7, #16]
 800136c:	4b13      	ldr	r3, [pc, #76]	; (80013bc <_sbrk+0x64>)
 800136e:	681b      	ldr	r3, [r3, #0]
 8001370:	2b00      	cmp	r3, #0
 8001372:	d102      	bne.n	800137a <_sbrk+0x22>
 8001374:	4b11      	ldr	r3, [pc, #68]	; (80013bc <_sbrk+0x64>)
 8001376:	4a12      	ldr	r2, [pc, #72]	; (80013c0 <_sbrk+0x68>)
 8001378:	601a      	str	r2, [r3, #0]
 800137a:	4b10      	ldr	r3, [pc, #64]	; (80013bc <_sbrk+0x64>)
 800137c:	681a      	ldr	r2, [r3, #0]
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	4413      	add	r3, r2
 8001382:	693a      	ldr	r2, [r7, #16]
 8001384:	429a      	cmp	r2, r3
 8001386:	d207      	bcs.n	8001398 <_sbrk+0x40>
 8001388:	f001 feca 	bl	8003120 <__errno>
 800138c:	4603      	mov	r3, r0
 800138e:	220c      	movs	r2, #12
 8001390:	601a      	str	r2, [r3, #0]
 8001392:	f04f 33ff 	mov.w	r3, #4294967295
 8001396:	e009      	b.n	80013ac <_sbrk+0x54>
 8001398:	4b08      	ldr	r3, [pc, #32]	; (80013bc <_sbrk+0x64>)
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	60fb      	str	r3, [r7, #12]
 800139e:	4b07      	ldr	r3, [pc, #28]	; (80013bc <_sbrk+0x64>)
 80013a0:	681a      	ldr	r2, [r3, #0]
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	4413      	add	r3, r2
 80013a6:	4a05      	ldr	r2, [pc, #20]	; (80013bc <_sbrk+0x64>)
 80013a8:	6013      	str	r3, [r2, #0]
 80013aa:	68fb      	ldr	r3, [r7, #12]
 80013ac:	4618      	mov	r0, r3
 80013ae:	3718      	adds	r7, #24
 80013b0:	46bd      	mov	sp, r7
 80013b2:	bd80      	pop	{r7, pc}
 80013b4:	20005000 	.word	0x20005000
 80013b8:	00000400 	.word	0x00000400
 80013bc:	20000188 	.word	0x20000188
 80013c0:	20000268 	.word	0x20000268

080013c4 <SystemInit>:
 80013c4:	b480      	push	{r7}
 80013c6:	af00      	add	r7, sp, #0
 80013c8:	bf00      	nop
 80013ca:	46bd      	mov	sp, r7
 80013cc:	bc80      	pop	{r7}
 80013ce:	4770      	bx	lr

080013d0 <FillTable>:

#include "table.h"

TableContent schulte_table = {0, {}};

void FillTable(int entropy, int sr) {
 80013d0:	b580      	push	{r7, lr}
 80013d2:	b08c      	sub	sp, #48	; 0x30
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	6078      	str	r0, [r7, #4]
 80013d8:	6039      	str	r1, [r7, #0]
	srand(sr);
 80013da:	683b      	ldr	r3, [r7, #0]
 80013dc:	4618      	mov	r0, r3
 80013de:	f001 fed1 	bl	8003184 <srand>

	int elem = 1;
 80013e2:	2301      	movs	r3, #1
 80013e4:	62fb      	str	r3, [r7, #44]	; 0x2c
	for (int i = 0; i < schulte_table.size; ++i) {
 80013e6:	2300      	movs	r3, #0
 80013e8:	62bb      	str	r3, [r7, #40]	; 0x28
 80013ea:	e01a      	b.n	8001422 <FillTable+0x52>
		for (int j = 0; j < schulte_table.size; ++j) {
 80013ec:	2300      	movs	r3, #0
 80013ee:	627b      	str	r3, [r7, #36]	; 0x24
 80013f0:	e00f      	b.n	8001412 <FillTable+0x42>
			schulte_table.data[i][j] = elem++;
 80013f2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80013f4:	1c53      	adds	r3, r2, #1
 80013f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80013f8:	483f      	ldr	r0, [pc, #252]	; (80014f8 <FillTable+0x128>)
 80013fa:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80013fc:	460b      	mov	r3, r1
 80013fe:	00db      	lsls	r3, r3, #3
 8001400:	1a5b      	subs	r3, r3, r1
 8001402:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001404:	440b      	add	r3, r1
 8001406:	009b      	lsls	r3, r3, #2
 8001408:	4403      	add	r3, r0
 800140a:	605a      	str	r2, [r3, #4]
		for (int j = 0; j < schulte_table.size; ++j) {
 800140c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800140e:	3301      	adds	r3, #1
 8001410:	627b      	str	r3, [r7, #36]	; 0x24
 8001412:	4b39      	ldr	r3, [pc, #228]	; (80014f8 <FillTable+0x128>)
 8001414:	681b      	ldr	r3, [r3, #0]
 8001416:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001418:	429a      	cmp	r2, r3
 800141a:	dbea      	blt.n	80013f2 <FillTable+0x22>
	for (int i = 0; i < schulte_table.size; ++i) {
 800141c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800141e:	3301      	adds	r3, #1
 8001420:	62bb      	str	r3, [r7, #40]	; 0x28
 8001422:	4b35      	ldr	r3, [pc, #212]	; (80014f8 <FillTable+0x128>)
 8001424:	681b      	ldr	r3, [r3, #0]
 8001426:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001428:	429a      	cmp	r2, r3
 800142a:	dbdf      	blt.n	80013ec <FillTable+0x1c>
		}
	}

	for (int i = 0; i < entropy; ++i) {
 800142c:	2300      	movs	r3, #0
 800142e:	623b      	str	r3, [r7, #32]
 8001430:	e058      	b.n	80014e4 <FillTable+0x114>
		int row1 = rand() % schulte_table.size;
 8001432:	f001 fed5 	bl	80031e0 <rand>
 8001436:	4602      	mov	r2, r0
 8001438:	4b2f      	ldr	r3, [pc, #188]	; (80014f8 <FillTable+0x128>)
 800143a:	681b      	ldr	r3, [r3, #0]
 800143c:	fb92 f1f3 	sdiv	r1, r2, r3
 8001440:	fb01 f303 	mul.w	r3, r1, r3
 8001444:	1ad3      	subs	r3, r2, r3
 8001446:	61fb      	str	r3, [r7, #28]
		int col1 = rand() % schulte_table.size;
 8001448:	f001 feca 	bl	80031e0 <rand>
 800144c:	4602      	mov	r2, r0
 800144e:	4b2a      	ldr	r3, [pc, #168]	; (80014f8 <FillTable+0x128>)
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	fb92 f1f3 	sdiv	r1, r2, r3
 8001456:	fb01 f303 	mul.w	r3, r1, r3
 800145a:	1ad3      	subs	r3, r2, r3
 800145c:	61bb      	str	r3, [r7, #24]
		int row2 = rand() % schulte_table.size;
 800145e:	f001 febf 	bl	80031e0 <rand>
 8001462:	4602      	mov	r2, r0
 8001464:	4b24      	ldr	r3, [pc, #144]	; (80014f8 <FillTable+0x128>)
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	fb92 f1f3 	sdiv	r1, r2, r3
 800146c:	fb01 f303 	mul.w	r3, r1, r3
 8001470:	1ad3      	subs	r3, r2, r3
 8001472:	617b      	str	r3, [r7, #20]
		int col2 = rand() % schulte_table.size;
 8001474:	f001 feb4 	bl	80031e0 <rand>
 8001478:	4602      	mov	r2, r0
 800147a:	4b1f      	ldr	r3, [pc, #124]	; (80014f8 <FillTable+0x128>)
 800147c:	681b      	ldr	r3, [r3, #0]
 800147e:	fb92 f1f3 	sdiv	r1, r2, r3
 8001482:	fb01 f303 	mul.w	r3, r1, r3
 8001486:	1ad3      	subs	r3, r2, r3
 8001488:	613b      	str	r3, [r7, #16]

		int temp = schulte_table.data[row1][col1];
 800148a:	491b      	ldr	r1, [pc, #108]	; (80014f8 <FillTable+0x128>)
 800148c:	69fa      	ldr	r2, [r7, #28]
 800148e:	4613      	mov	r3, r2
 8001490:	00db      	lsls	r3, r3, #3
 8001492:	1a9b      	subs	r3, r3, r2
 8001494:	69ba      	ldr	r2, [r7, #24]
 8001496:	4413      	add	r3, r2
 8001498:	009b      	lsls	r3, r3, #2
 800149a:	440b      	add	r3, r1
 800149c:	685b      	ldr	r3, [r3, #4]
 800149e:	60fb      	str	r3, [r7, #12]
		schulte_table.data[row1][col1] = schulte_table.data[row2][col2];
 80014a0:	4915      	ldr	r1, [pc, #84]	; (80014f8 <FillTable+0x128>)
 80014a2:	697a      	ldr	r2, [r7, #20]
 80014a4:	4613      	mov	r3, r2
 80014a6:	00db      	lsls	r3, r3, #3
 80014a8:	1a9b      	subs	r3, r3, r2
 80014aa:	693a      	ldr	r2, [r7, #16]
 80014ac:	4413      	add	r3, r2
 80014ae:	009b      	lsls	r3, r3, #2
 80014b0:	440b      	add	r3, r1
 80014b2:	6859      	ldr	r1, [r3, #4]
 80014b4:	4810      	ldr	r0, [pc, #64]	; (80014f8 <FillTable+0x128>)
 80014b6:	69fa      	ldr	r2, [r7, #28]
 80014b8:	4613      	mov	r3, r2
 80014ba:	00db      	lsls	r3, r3, #3
 80014bc:	1a9b      	subs	r3, r3, r2
 80014be:	69ba      	ldr	r2, [r7, #24]
 80014c0:	4413      	add	r3, r2
 80014c2:	009b      	lsls	r3, r3, #2
 80014c4:	4403      	add	r3, r0
 80014c6:	6059      	str	r1, [r3, #4]
		schulte_table.data[row2][col2] = temp;
 80014c8:	490b      	ldr	r1, [pc, #44]	; (80014f8 <FillTable+0x128>)
 80014ca:	697a      	ldr	r2, [r7, #20]
 80014cc:	4613      	mov	r3, r2
 80014ce:	00db      	lsls	r3, r3, #3
 80014d0:	1a9b      	subs	r3, r3, r2
 80014d2:	693a      	ldr	r2, [r7, #16]
 80014d4:	4413      	add	r3, r2
 80014d6:	009b      	lsls	r3, r3, #2
 80014d8:	440b      	add	r3, r1
 80014da:	68fa      	ldr	r2, [r7, #12]
 80014dc:	605a      	str	r2, [r3, #4]
	for (int i = 0; i < entropy; ++i) {
 80014de:	6a3b      	ldr	r3, [r7, #32]
 80014e0:	3301      	adds	r3, #1
 80014e2:	623b      	str	r3, [r7, #32]
 80014e4:	6a3a      	ldr	r2, [r7, #32]
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	429a      	cmp	r2, r3
 80014ea:	dba2      	blt.n	8001432 <FillTable+0x62>
	}
}
 80014ec:	bf00      	nop
 80014ee:	bf00      	nop
 80014f0:	3730      	adds	r7, #48	; 0x30
 80014f2:	46bd      	mov	sp, r7
 80014f4:	bd80      	pop	{r7, pc}
 80014f6:	bf00      	nop
 80014f8:	2000018c 	.word	0x2000018c

080014fc <Reset_Handler>:
 80014fc:	f7ff ff62 	bl	80013c4 <SystemInit>
 8001500:	480b      	ldr	r0, [pc, #44]	; (8001530 <LoopFillZerobss+0xe>)
 8001502:	490c      	ldr	r1, [pc, #48]	; (8001534 <LoopFillZerobss+0x12>)
 8001504:	4a0c      	ldr	r2, [pc, #48]	; (8001538 <LoopFillZerobss+0x16>)
 8001506:	2300      	movs	r3, #0
 8001508:	e002      	b.n	8001510 <LoopCopyDataInit>

0800150a <CopyDataInit>:
 800150a:	58d4      	ldr	r4, [r2, r3]
 800150c:	50c4      	str	r4, [r0, r3]
 800150e:	3304      	adds	r3, #4

08001510 <LoopCopyDataInit>:
 8001510:	18c4      	adds	r4, r0, r3
 8001512:	428c      	cmp	r4, r1
 8001514:	d3f9      	bcc.n	800150a <CopyDataInit>
 8001516:	4a09      	ldr	r2, [pc, #36]	; (800153c <LoopFillZerobss+0x1a>)
 8001518:	4c09      	ldr	r4, [pc, #36]	; (8001540 <LoopFillZerobss+0x1e>)
 800151a:	2300      	movs	r3, #0
 800151c:	e001      	b.n	8001522 <LoopFillZerobss>

0800151e <FillZerobss>:
 800151e:	6013      	str	r3, [r2, #0]
 8001520:	3204      	adds	r2, #4

08001522 <LoopFillZerobss>:
 8001522:	42a2      	cmp	r2, r4
 8001524:	d3fb      	bcc.n	800151e <FillZerobss>
 8001526:	f001 fe01 	bl	800312c <__libc_init_array>
 800152a:	f7ff fbab 	bl	8000c84 <main>
 800152e:	4770      	bx	lr
 8001530:	20000000 	.word	0x20000000
 8001534:	200000b4 	.word	0x200000b4
 8001538:	08005058 	.word	0x08005058
 800153c:	200000b4 	.word	0x200000b4
 8001540:	20000268 	.word	0x20000268

08001544 <ADC1_2_IRQHandler>:
 8001544:	e7fe      	b.n	8001544 <ADC1_2_IRQHandler>
	...

08001548 <HAL_Init>:
 8001548:	b580      	push	{r7, lr}
 800154a:	af00      	add	r7, sp, #0
 800154c:	4b08      	ldr	r3, [pc, #32]	; (8001570 <HAL_Init+0x28>)
 800154e:	681b      	ldr	r3, [r3, #0]
 8001550:	4a07      	ldr	r2, [pc, #28]	; (8001570 <HAL_Init+0x28>)
 8001552:	f043 0310 	orr.w	r3, r3, #16
 8001556:	6013      	str	r3, [r2, #0]
 8001558:	2003      	movs	r0, #3
 800155a:	f000 f92b 	bl	80017b4 <HAL_NVIC_SetPriorityGrouping>
 800155e:	200f      	movs	r0, #15
 8001560:	f000 f808 	bl	8001574 <HAL_InitTick>
 8001564:	f7ff fd66 	bl	8001034 <HAL_MspInit>
 8001568:	2300      	movs	r3, #0
 800156a:	4618      	mov	r0, r3
 800156c:	bd80      	pop	{r7, pc}
 800156e:	bf00      	nop
 8001570:	40022000 	.word	0x40022000

08001574 <HAL_InitTick>:
 8001574:	b580      	push	{r7, lr}
 8001576:	b082      	sub	sp, #8
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
 800157c:	4b12      	ldr	r3, [pc, #72]	; (80015c8 <HAL_InitTick+0x54>)
 800157e:	681a      	ldr	r2, [r3, #0]
 8001580:	4b12      	ldr	r3, [pc, #72]	; (80015cc <HAL_InitTick+0x58>)
 8001582:	781b      	ldrb	r3, [r3, #0]
 8001584:	4619      	mov	r1, r3
 8001586:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800158a:	fbb3 f3f1 	udiv	r3, r3, r1
 800158e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001592:	4618      	mov	r0, r3
 8001594:	f000 f935 	bl	8001802 <HAL_SYSTICK_Config>
 8001598:	4603      	mov	r3, r0
 800159a:	2b00      	cmp	r3, #0
 800159c:	d001      	beq.n	80015a2 <HAL_InitTick+0x2e>
 800159e:	2301      	movs	r3, #1
 80015a0:	e00e      	b.n	80015c0 <HAL_InitTick+0x4c>
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	2b0f      	cmp	r3, #15
 80015a6:	d80a      	bhi.n	80015be <HAL_InitTick+0x4a>
 80015a8:	2200      	movs	r2, #0
 80015aa:	6879      	ldr	r1, [r7, #4]
 80015ac:	f04f 30ff 	mov.w	r0, #4294967295
 80015b0:	f000 f90b 	bl	80017ca <HAL_NVIC_SetPriority>
 80015b4:	4a06      	ldr	r2, [pc, #24]	; (80015d0 <HAL_InitTick+0x5c>)
 80015b6:	687b      	ldr	r3, [r7, #4]
 80015b8:	6013      	str	r3, [r2, #0]
 80015ba:	2300      	movs	r3, #0
 80015bc:	e000      	b.n	80015c0 <HAL_InitTick+0x4c>
 80015be:	2301      	movs	r3, #1
 80015c0:	4618      	mov	r0, r3
 80015c2:	3708      	adds	r7, #8
 80015c4:	46bd      	mov	sp, r7
 80015c6:	bd80      	pop	{r7, pc}
 80015c8:	20000044 	.word	0x20000044
 80015cc:	2000004c 	.word	0x2000004c
 80015d0:	20000048 	.word	0x20000048

080015d4 <HAL_IncTick>:
 80015d4:	b480      	push	{r7}
 80015d6:	af00      	add	r7, sp, #0
 80015d8:	4b05      	ldr	r3, [pc, #20]	; (80015f0 <HAL_IncTick+0x1c>)
 80015da:	781b      	ldrb	r3, [r3, #0]
 80015dc:	461a      	mov	r2, r3
 80015de:	4b05      	ldr	r3, [pc, #20]	; (80015f4 <HAL_IncTick+0x20>)
 80015e0:	681b      	ldr	r3, [r3, #0]
 80015e2:	4413      	add	r3, r2
 80015e4:	4a03      	ldr	r2, [pc, #12]	; (80015f4 <HAL_IncTick+0x20>)
 80015e6:	6013      	str	r3, [r2, #0]
 80015e8:	bf00      	nop
 80015ea:	46bd      	mov	sp, r7
 80015ec:	bc80      	pop	{r7}
 80015ee:	4770      	bx	lr
 80015f0:	2000004c 	.word	0x2000004c
 80015f4:	20000254 	.word	0x20000254

080015f8 <HAL_GetTick>:
 80015f8:	b480      	push	{r7}
 80015fa:	af00      	add	r7, sp, #0
 80015fc:	4b02      	ldr	r3, [pc, #8]	; (8001608 <HAL_GetTick+0x10>)
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	4618      	mov	r0, r3
 8001602:	46bd      	mov	sp, r7
 8001604:	bc80      	pop	{r7}
 8001606:	4770      	bx	lr
 8001608:	20000254 	.word	0x20000254

0800160c <HAL_Delay>:
 800160c:	b580      	push	{r7, lr}
 800160e:	b084      	sub	sp, #16
 8001610:	af00      	add	r7, sp, #0
 8001612:	6078      	str	r0, [r7, #4]
 8001614:	f7ff fff0 	bl	80015f8 <HAL_GetTick>
 8001618:	60b8      	str	r0, [r7, #8]
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	60fb      	str	r3, [r7, #12]
 800161e:	68fb      	ldr	r3, [r7, #12]
 8001620:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001624:	d005      	beq.n	8001632 <HAL_Delay+0x26>
 8001626:	4b0a      	ldr	r3, [pc, #40]	; (8001650 <HAL_Delay+0x44>)
 8001628:	781b      	ldrb	r3, [r3, #0]
 800162a:	461a      	mov	r2, r3
 800162c:	68fb      	ldr	r3, [r7, #12]
 800162e:	4413      	add	r3, r2
 8001630:	60fb      	str	r3, [r7, #12]
 8001632:	bf00      	nop
 8001634:	f7ff ffe0 	bl	80015f8 <HAL_GetTick>
 8001638:	4602      	mov	r2, r0
 800163a:	68bb      	ldr	r3, [r7, #8]
 800163c:	1ad3      	subs	r3, r2, r3
 800163e:	68fa      	ldr	r2, [r7, #12]
 8001640:	429a      	cmp	r2, r3
 8001642:	d8f7      	bhi.n	8001634 <HAL_Delay+0x28>
 8001644:	bf00      	nop
 8001646:	bf00      	nop
 8001648:	3710      	adds	r7, #16
 800164a:	46bd      	mov	sp, r7
 800164c:	bd80      	pop	{r7, pc}
 800164e:	bf00      	nop
 8001650:	2000004c 	.word	0x2000004c

08001654 <__NVIC_SetPriorityGrouping>:
 8001654:	b480      	push	{r7}
 8001656:	b085      	sub	sp, #20
 8001658:	af00      	add	r7, sp, #0
 800165a:	6078      	str	r0, [r7, #4]
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	f003 0307 	and.w	r3, r3, #7
 8001662:	60fb      	str	r3, [r7, #12]
 8001664:	4b0c      	ldr	r3, [pc, #48]	; (8001698 <__NVIC_SetPriorityGrouping+0x44>)
 8001666:	68db      	ldr	r3, [r3, #12]
 8001668:	60bb      	str	r3, [r7, #8]
 800166a:	68ba      	ldr	r2, [r7, #8]
 800166c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001670:	4013      	ands	r3, r2
 8001672:	60bb      	str	r3, [r7, #8]
 8001674:	68fb      	ldr	r3, [r7, #12]
 8001676:	021a      	lsls	r2, r3, #8
 8001678:	68bb      	ldr	r3, [r7, #8]
 800167a:	4313      	orrs	r3, r2
 800167c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001680:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001684:	60bb      	str	r3, [r7, #8]
 8001686:	4a04      	ldr	r2, [pc, #16]	; (8001698 <__NVIC_SetPriorityGrouping+0x44>)
 8001688:	68bb      	ldr	r3, [r7, #8]
 800168a:	60d3      	str	r3, [r2, #12]
 800168c:	bf00      	nop
 800168e:	3714      	adds	r7, #20
 8001690:	46bd      	mov	sp, r7
 8001692:	bc80      	pop	{r7}
 8001694:	4770      	bx	lr
 8001696:	bf00      	nop
 8001698:	e000ed00 	.word	0xe000ed00

0800169c <__NVIC_GetPriorityGrouping>:
 800169c:	b480      	push	{r7}
 800169e:	af00      	add	r7, sp, #0
 80016a0:	4b04      	ldr	r3, [pc, #16]	; (80016b4 <__NVIC_GetPriorityGrouping+0x18>)
 80016a2:	68db      	ldr	r3, [r3, #12]
 80016a4:	0a1b      	lsrs	r3, r3, #8
 80016a6:	f003 0307 	and.w	r3, r3, #7
 80016aa:	4618      	mov	r0, r3
 80016ac:	46bd      	mov	sp, r7
 80016ae:	bc80      	pop	{r7}
 80016b0:	4770      	bx	lr
 80016b2:	bf00      	nop
 80016b4:	e000ed00 	.word	0xe000ed00

080016b8 <__NVIC_SetPriority>:
 80016b8:	b480      	push	{r7}
 80016ba:	b083      	sub	sp, #12
 80016bc:	af00      	add	r7, sp, #0
 80016be:	4603      	mov	r3, r0
 80016c0:	6039      	str	r1, [r7, #0]
 80016c2:	71fb      	strb	r3, [r7, #7]
 80016c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	db0a      	blt.n	80016e2 <__NVIC_SetPriority+0x2a>
 80016cc:	683b      	ldr	r3, [r7, #0]
 80016ce:	b2da      	uxtb	r2, r3
 80016d0:	490c      	ldr	r1, [pc, #48]	; (8001704 <__NVIC_SetPriority+0x4c>)
 80016d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016d6:	0112      	lsls	r2, r2, #4
 80016d8:	b2d2      	uxtb	r2, r2
 80016da:	440b      	add	r3, r1
 80016dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80016e0:	e00a      	b.n	80016f8 <__NVIC_SetPriority+0x40>
 80016e2:	683b      	ldr	r3, [r7, #0]
 80016e4:	b2da      	uxtb	r2, r3
 80016e6:	4908      	ldr	r1, [pc, #32]	; (8001708 <__NVIC_SetPriority+0x50>)
 80016e8:	79fb      	ldrb	r3, [r7, #7]
 80016ea:	f003 030f 	and.w	r3, r3, #15
 80016ee:	3b04      	subs	r3, #4
 80016f0:	0112      	lsls	r2, r2, #4
 80016f2:	b2d2      	uxtb	r2, r2
 80016f4:	440b      	add	r3, r1
 80016f6:	761a      	strb	r2, [r3, #24]
 80016f8:	bf00      	nop
 80016fa:	370c      	adds	r7, #12
 80016fc:	46bd      	mov	sp, r7
 80016fe:	bc80      	pop	{r7}
 8001700:	4770      	bx	lr
 8001702:	bf00      	nop
 8001704:	e000e100 	.word	0xe000e100
 8001708:	e000ed00 	.word	0xe000ed00

0800170c <NVIC_EncodePriority>:
 800170c:	b480      	push	{r7}
 800170e:	b089      	sub	sp, #36	; 0x24
 8001710:	af00      	add	r7, sp, #0
 8001712:	60f8      	str	r0, [r7, #12]
 8001714:	60b9      	str	r1, [r7, #8]
 8001716:	607a      	str	r2, [r7, #4]
 8001718:	68fb      	ldr	r3, [r7, #12]
 800171a:	f003 0307 	and.w	r3, r3, #7
 800171e:	61fb      	str	r3, [r7, #28]
 8001720:	69fb      	ldr	r3, [r7, #28]
 8001722:	f1c3 0307 	rsb	r3, r3, #7
 8001726:	2b04      	cmp	r3, #4
 8001728:	bf28      	it	cs
 800172a:	2304      	movcs	r3, #4
 800172c:	61bb      	str	r3, [r7, #24]
 800172e:	69fb      	ldr	r3, [r7, #28]
 8001730:	3304      	adds	r3, #4
 8001732:	2b06      	cmp	r3, #6
 8001734:	d902      	bls.n	800173c <NVIC_EncodePriority+0x30>
 8001736:	69fb      	ldr	r3, [r7, #28]
 8001738:	3b03      	subs	r3, #3
 800173a:	e000      	b.n	800173e <NVIC_EncodePriority+0x32>
 800173c:	2300      	movs	r3, #0
 800173e:	617b      	str	r3, [r7, #20]
 8001740:	f04f 32ff 	mov.w	r2, #4294967295
 8001744:	69bb      	ldr	r3, [r7, #24]
 8001746:	fa02 f303 	lsl.w	r3, r2, r3
 800174a:	43da      	mvns	r2, r3
 800174c:	68bb      	ldr	r3, [r7, #8]
 800174e:	401a      	ands	r2, r3
 8001750:	697b      	ldr	r3, [r7, #20]
 8001752:	409a      	lsls	r2, r3
 8001754:	f04f 31ff 	mov.w	r1, #4294967295
 8001758:	697b      	ldr	r3, [r7, #20]
 800175a:	fa01 f303 	lsl.w	r3, r1, r3
 800175e:	43d9      	mvns	r1, r3
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	400b      	ands	r3, r1
 8001764:	4313      	orrs	r3, r2
 8001766:	4618      	mov	r0, r3
 8001768:	3724      	adds	r7, #36	; 0x24
 800176a:	46bd      	mov	sp, r7
 800176c:	bc80      	pop	{r7}
 800176e:	4770      	bx	lr

08001770 <SysTick_Config>:
 8001770:	b580      	push	{r7, lr}
 8001772:	b082      	sub	sp, #8
 8001774:	af00      	add	r7, sp, #0
 8001776:	6078      	str	r0, [r7, #4]
 8001778:	687b      	ldr	r3, [r7, #4]
 800177a:	3b01      	subs	r3, #1
 800177c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001780:	d301      	bcc.n	8001786 <SysTick_Config+0x16>
 8001782:	2301      	movs	r3, #1
 8001784:	e00f      	b.n	80017a6 <SysTick_Config+0x36>
 8001786:	4a0a      	ldr	r2, [pc, #40]	; (80017b0 <SysTick_Config+0x40>)
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	3b01      	subs	r3, #1
 800178c:	6053      	str	r3, [r2, #4]
 800178e:	210f      	movs	r1, #15
 8001790:	f04f 30ff 	mov.w	r0, #4294967295
 8001794:	f7ff ff90 	bl	80016b8 <__NVIC_SetPriority>
 8001798:	4b05      	ldr	r3, [pc, #20]	; (80017b0 <SysTick_Config+0x40>)
 800179a:	2200      	movs	r2, #0
 800179c:	609a      	str	r2, [r3, #8]
 800179e:	4b04      	ldr	r3, [pc, #16]	; (80017b0 <SysTick_Config+0x40>)
 80017a0:	2207      	movs	r2, #7
 80017a2:	601a      	str	r2, [r3, #0]
 80017a4:	2300      	movs	r3, #0
 80017a6:	4618      	mov	r0, r3
 80017a8:	3708      	adds	r7, #8
 80017aa:	46bd      	mov	sp, r7
 80017ac:	bd80      	pop	{r7, pc}
 80017ae:	bf00      	nop
 80017b0:	e000e010 	.word	0xe000e010

080017b4 <HAL_NVIC_SetPriorityGrouping>:
 80017b4:	b580      	push	{r7, lr}
 80017b6:	b082      	sub	sp, #8
 80017b8:	af00      	add	r7, sp, #0
 80017ba:	6078      	str	r0, [r7, #4]
 80017bc:	6878      	ldr	r0, [r7, #4]
 80017be:	f7ff ff49 	bl	8001654 <__NVIC_SetPriorityGrouping>
 80017c2:	bf00      	nop
 80017c4:	3708      	adds	r7, #8
 80017c6:	46bd      	mov	sp, r7
 80017c8:	bd80      	pop	{r7, pc}

080017ca <HAL_NVIC_SetPriority>:
 80017ca:	b580      	push	{r7, lr}
 80017cc:	b086      	sub	sp, #24
 80017ce:	af00      	add	r7, sp, #0
 80017d0:	4603      	mov	r3, r0
 80017d2:	60b9      	str	r1, [r7, #8]
 80017d4:	607a      	str	r2, [r7, #4]
 80017d6:	73fb      	strb	r3, [r7, #15]
 80017d8:	2300      	movs	r3, #0
 80017da:	617b      	str	r3, [r7, #20]
 80017dc:	f7ff ff5e 	bl	800169c <__NVIC_GetPriorityGrouping>
 80017e0:	6178      	str	r0, [r7, #20]
 80017e2:	687a      	ldr	r2, [r7, #4]
 80017e4:	68b9      	ldr	r1, [r7, #8]
 80017e6:	6978      	ldr	r0, [r7, #20]
 80017e8:	f7ff ff90 	bl	800170c <NVIC_EncodePriority>
 80017ec:	4602      	mov	r2, r0
 80017ee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017f2:	4611      	mov	r1, r2
 80017f4:	4618      	mov	r0, r3
 80017f6:	f7ff ff5f 	bl	80016b8 <__NVIC_SetPriority>
 80017fa:	bf00      	nop
 80017fc:	3718      	adds	r7, #24
 80017fe:	46bd      	mov	sp, r7
 8001800:	bd80      	pop	{r7, pc}

08001802 <HAL_SYSTICK_Config>:
 8001802:	b580      	push	{r7, lr}
 8001804:	b082      	sub	sp, #8
 8001806:	af00      	add	r7, sp, #0
 8001808:	6078      	str	r0, [r7, #4]
 800180a:	6878      	ldr	r0, [r7, #4]
 800180c:	f7ff ffb0 	bl	8001770 <SysTick_Config>
 8001810:	4603      	mov	r3, r0
 8001812:	4618      	mov	r0, r3
 8001814:	3708      	adds	r7, #8
 8001816:	46bd      	mov	sp, r7
 8001818:	bd80      	pop	{r7, pc}
	...

0800181c <HAL_GPIO_Init>:
 800181c:	b480      	push	{r7}
 800181e:	b08b      	sub	sp, #44	; 0x2c
 8001820:	af00      	add	r7, sp, #0
 8001822:	6078      	str	r0, [r7, #4]
 8001824:	6039      	str	r1, [r7, #0]
 8001826:	2300      	movs	r3, #0
 8001828:	627b      	str	r3, [r7, #36]	; 0x24
 800182a:	2300      	movs	r3, #0
 800182c:	623b      	str	r3, [r7, #32]
 800182e:	e169      	b.n	8001b04 <HAL_GPIO_Init+0x2e8>
 8001830:	2201      	movs	r2, #1
 8001832:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001834:	fa02 f303 	lsl.w	r3, r2, r3
 8001838:	61fb      	str	r3, [r7, #28]
 800183a:	683b      	ldr	r3, [r7, #0]
 800183c:	681b      	ldr	r3, [r3, #0]
 800183e:	69fa      	ldr	r2, [r7, #28]
 8001840:	4013      	ands	r3, r2
 8001842:	61bb      	str	r3, [r7, #24]
 8001844:	69ba      	ldr	r2, [r7, #24]
 8001846:	69fb      	ldr	r3, [r7, #28]
 8001848:	429a      	cmp	r2, r3
 800184a:	f040 8158 	bne.w	8001afe <HAL_GPIO_Init+0x2e2>
 800184e:	683b      	ldr	r3, [r7, #0]
 8001850:	685b      	ldr	r3, [r3, #4]
 8001852:	4a9a      	ldr	r2, [pc, #616]	; (8001abc <HAL_GPIO_Init+0x2a0>)
 8001854:	4293      	cmp	r3, r2
 8001856:	d05e      	beq.n	8001916 <HAL_GPIO_Init+0xfa>
 8001858:	4a98      	ldr	r2, [pc, #608]	; (8001abc <HAL_GPIO_Init+0x2a0>)
 800185a:	4293      	cmp	r3, r2
 800185c:	d875      	bhi.n	800194a <HAL_GPIO_Init+0x12e>
 800185e:	4a98      	ldr	r2, [pc, #608]	; (8001ac0 <HAL_GPIO_Init+0x2a4>)
 8001860:	4293      	cmp	r3, r2
 8001862:	d058      	beq.n	8001916 <HAL_GPIO_Init+0xfa>
 8001864:	4a96      	ldr	r2, [pc, #600]	; (8001ac0 <HAL_GPIO_Init+0x2a4>)
 8001866:	4293      	cmp	r3, r2
 8001868:	d86f      	bhi.n	800194a <HAL_GPIO_Init+0x12e>
 800186a:	4a96      	ldr	r2, [pc, #600]	; (8001ac4 <HAL_GPIO_Init+0x2a8>)
 800186c:	4293      	cmp	r3, r2
 800186e:	d052      	beq.n	8001916 <HAL_GPIO_Init+0xfa>
 8001870:	4a94      	ldr	r2, [pc, #592]	; (8001ac4 <HAL_GPIO_Init+0x2a8>)
 8001872:	4293      	cmp	r3, r2
 8001874:	d869      	bhi.n	800194a <HAL_GPIO_Init+0x12e>
 8001876:	4a94      	ldr	r2, [pc, #592]	; (8001ac8 <HAL_GPIO_Init+0x2ac>)
 8001878:	4293      	cmp	r3, r2
 800187a:	d04c      	beq.n	8001916 <HAL_GPIO_Init+0xfa>
 800187c:	4a92      	ldr	r2, [pc, #584]	; (8001ac8 <HAL_GPIO_Init+0x2ac>)
 800187e:	4293      	cmp	r3, r2
 8001880:	d863      	bhi.n	800194a <HAL_GPIO_Init+0x12e>
 8001882:	4a92      	ldr	r2, [pc, #584]	; (8001acc <HAL_GPIO_Init+0x2b0>)
 8001884:	4293      	cmp	r3, r2
 8001886:	d046      	beq.n	8001916 <HAL_GPIO_Init+0xfa>
 8001888:	4a90      	ldr	r2, [pc, #576]	; (8001acc <HAL_GPIO_Init+0x2b0>)
 800188a:	4293      	cmp	r3, r2
 800188c:	d85d      	bhi.n	800194a <HAL_GPIO_Init+0x12e>
 800188e:	2b12      	cmp	r3, #18
 8001890:	d82a      	bhi.n	80018e8 <HAL_GPIO_Init+0xcc>
 8001892:	2b12      	cmp	r3, #18
 8001894:	d859      	bhi.n	800194a <HAL_GPIO_Init+0x12e>
 8001896:	a201      	add	r2, pc, #4	; (adr r2, 800189c <HAL_GPIO_Init+0x80>)
 8001898:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800189c:	08001917 	.word	0x08001917
 80018a0:	080018f1 	.word	0x080018f1
 80018a4:	08001903 	.word	0x08001903
 80018a8:	08001945 	.word	0x08001945
 80018ac:	0800194b 	.word	0x0800194b
 80018b0:	0800194b 	.word	0x0800194b
 80018b4:	0800194b 	.word	0x0800194b
 80018b8:	0800194b 	.word	0x0800194b
 80018bc:	0800194b 	.word	0x0800194b
 80018c0:	0800194b 	.word	0x0800194b
 80018c4:	0800194b 	.word	0x0800194b
 80018c8:	0800194b 	.word	0x0800194b
 80018cc:	0800194b 	.word	0x0800194b
 80018d0:	0800194b 	.word	0x0800194b
 80018d4:	0800194b 	.word	0x0800194b
 80018d8:	0800194b 	.word	0x0800194b
 80018dc:	0800194b 	.word	0x0800194b
 80018e0:	080018f9 	.word	0x080018f9
 80018e4:	0800190d 	.word	0x0800190d
 80018e8:	4a79      	ldr	r2, [pc, #484]	; (8001ad0 <HAL_GPIO_Init+0x2b4>)
 80018ea:	4293      	cmp	r3, r2
 80018ec:	d013      	beq.n	8001916 <HAL_GPIO_Init+0xfa>
 80018ee:	e02c      	b.n	800194a <HAL_GPIO_Init+0x12e>
 80018f0:	683b      	ldr	r3, [r7, #0]
 80018f2:	68db      	ldr	r3, [r3, #12]
 80018f4:	623b      	str	r3, [r7, #32]
 80018f6:	e029      	b.n	800194c <HAL_GPIO_Init+0x130>
 80018f8:	683b      	ldr	r3, [r7, #0]
 80018fa:	68db      	ldr	r3, [r3, #12]
 80018fc:	3304      	adds	r3, #4
 80018fe:	623b      	str	r3, [r7, #32]
 8001900:	e024      	b.n	800194c <HAL_GPIO_Init+0x130>
 8001902:	683b      	ldr	r3, [r7, #0]
 8001904:	68db      	ldr	r3, [r3, #12]
 8001906:	3308      	adds	r3, #8
 8001908:	623b      	str	r3, [r7, #32]
 800190a:	e01f      	b.n	800194c <HAL_GPIO_Init+0x130>
 800190c:	683b      	ldr	r3, [r7, #0]
 800190e:	68db      	ldr	r3, [r3, #12]
 8001910:	330c      	adds	r3, #12
 8001912:	623b      	str	r3, [r7, #32]
 8001914:	e01a      	b.n	800194c <HAL_GPIO_Init+0x130>
 8001916:	683b      	ldr	r3, [r7, #0]
 8001918:	689b      	ldr	r3, [r3, #8]
 800191a:	2b00      	cmp	r3, #0
 800191c:	d102      	bne.n	8001924 <HAL_GPIO_Init+0x108>
 800191e:	2304      	movs	r3, #4
 8001920:	623b      	str	r3, [r7, #32]
 8001922:	e013      	b.n	800194c <HAL_GPIO_Init+0x130>
 8001924:	683b      	ldr	r3, [r7, #0]
 8001926:	689b      	ldr	r3, [r3, #8]
 8001928:	2b01      	cmp	r3, #1
 800192a:	d105      	bne.n	8001938 <HAL_GPIO_Init+0x11c>
 800192c:	2308      	movs	r3, #8
 800192e:	623b      	str	r3, [r7, #32]
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	69fa      	ldr	r2, [r7, #28]
 8001934:	611a      	str	r2, [r3, #16]
 8001936:	e009      	b.n	800194c <HAL_GPIO_Init+0x130>
 8001938:	2308      	movs	r3, #8
 800193a:	623b      	str	r3, [r7, #32]
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	69fa      	ldr	r2, [r7, #28]
 8001940:	615a      	str	r2, [r3, #20]
 8001942:	e003      	b.n	800194c <HAL_GPIO_Init+0x130>
 8001944:	2300      	movs	r3, #0
 8001946:	623b      	str	r3, [r7, #32]
 8001948:	e000      	b.n	800194c <HAL_GPIO_Init+0x130>
 800194a:	bf00      	nop
 800194c:	69bb      	ldr	r3, [r7, #24]
 800194e:	2bff      	cmp	r3, #255	; 0xff
 8001950:	d801      	bhi.n	8001956 <HAL_GPIO_Init+0x13a>
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	e001      	b.n	800195a <HAL_GPIO_Init+0x13e>
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	3304      	adds	r3, #4
 800195a:	617b      	str	r3, [r7, #20]
 800195c:	69bb      	ldr	r3, [r7, #24]
 800195e:	2bff      	cmp	r3, #255	; 0xff
 8001960:	d802      	bhi.n	8001968 <HAL_GPIO_Init+0x14c>
 8001962:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001964:	009b      	lsls	r3, r3, #2
 8001966:	e002      	b.n	800196e <HAL_GPIO_Init+0x152>
 8001968:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800196a:	3b08      	subs	r3, #8
 800196c:	009b      	lsls	r3, r3, #2
 800196e:	613b      	str	r3, [r7, #16]
 8001970:	697b      	ldr	r3, [r7, #20]
 8001972:	681a      	ldr	r2, [r3, #0]
 8001974:	210f      	movs	r1, #15
 8001976:	693b      	ldr	r3, [r7, #16]
 8001978:	fa01 f303 	lsl.w	r3, r1, r3
 800197c:	43db      	mvns	r3, r3
 800197e:	401a      	ands	r2, r3
 8001980:	6a39      	ldr	r1, [r7, #32]
 8001982:	693b      	ldr	r3, [r7, #16]
 8001984:	fa01 f303 	lsl.w	r3, r1, r3
 8001988:	431a      	orrs	r2, r3
 800198a:	697b      	ldr	r3, [r7, #20]
 800198c:	601a      	str	r2, [r3, #0]
 800198e:	683b      	ldr	r3, [r7, #0]
 8001990:	685b      	ldr	r3, [r3, #4]
 8001992:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001996:	2b00      	cmp	r3, #0
 8001998:	f000 80b1 	beq.w	8001afe <HAL_GPIO_Init+0x2e2>
 800199c:	4b4d      	ldr	r3, [pc, #308]	; (8001ad4 <HAL_GPIO_Init+0x2b8>)
 800199e:	699b      	ldr	r3, [r3, #24]
 80019a0:	4a4c      	ldr	r2, [pc, #304]	; (8001ad4 <HAL_GPIO_Init+0x2b8>)
 80019a2:	f043 0301 	orr.w	r3, r3, #1
 80019a6:	6193      	str	r3, [r2, #24]
 80019a8:	4b4a      	ldr	r3, [pc, #296]	; (8001ad4 <HAL_GPIO_Init+0x2b8>)
 80019aa:	699b      	ldr	r3, [r3, #24]
 80019ac:	f003 0301 	and.w	r3, r3, #1
 80019b0:	60bb      	str	r3, [r7, #8]
 80019b2:	68bb      	ldr	r3, [r7, #8]
 80019b4:	4a48      	ldr	r2, [pc, #288]	; (8001ad8 <HAL_GPIO_Init+0x2bc>)
 80019b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019b8:	089b      	lsrs	r3, r3, #2
 80019ba:	3302      	adds	r3, #2
 80019bc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80019c0:	60fb      	str	r3, [r7, #12]
 80019c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019c4:	f003 0303 	and.w	r3, r3, #3
 80019c8:	009b      	lsls	r3, r3, #2
 80019ca:	220f      	movs	r2, #15
 80019cc:	fa02 f303 	lsl.w	r3, r2, r3
 80019d0:	43db      	mvns	r3, r3
 80019d2:	68fa      	ldr	r2, [r7, #12]
 80019d4:	4013      	ands	r3, r2
 80019d6:	60fb      	str	r3, [r7, #12]
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	4a40      	ldr	r2, [pc, #256]	; (8001adc <HAL_GPIO_Init+0x2c0>)
 80019dc:	4293      	cmp	r3, r2
 80019de:	d013      	beq.n	8001a08 <HAL_GPIO_Init+0x1ec>
 80019e0:	687b      	ldr	r3, [r7, #4]
 80019e2:	4a3f      	ldr	r2, [pc, #252]	; (8001ae0 <HAL_GPIO_Init+0x2c4>)
 80019e4:	4293      	cmp	r3, r2
 80019e6:	d00d      	beq.n	8001a04 <HAL_GPIO_Init+0x1e8>
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	4a3e      	ldr	r2, [pc, #248]	; (8001ae4 <HAL_GPIO_Init+0x2c8>)
 80019ec:	4293      	cmp	r3, r2
 80019ee:	d007      	beq.n	8001a00 <HAL_GPIO_Init+0x1e4>
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	4a3d      	ldr	r2, [pc, #244]	; (8001ae8 <HAL_GPIO_Init+0x2cc>)
 80019f4:	4293      	cmp	r3, r2
 80019f6:	d101      	bne.n	80019fc <HAL_GPIO_Init+0x1e0>
 80019f8:	2303      	movs	r3, #3
 80019fa:	e006      	b.n	8001a0a <HAL_GPIO_Init+0x1ee>
 80019fc:	2304      	movs	r3, #4
 80019fe:	e004      	b.n	8001a0a <HAL_GPIO_Init+0x1ee>
 8001a00:	2302      	movs	r3, #2
 8001a02:	e002      	b.n	8001a0a <HAL_GPIO_Init+0x1ee>
 8001a04:	2301      	movs	r3, #1
 8001a06:	e000      	b.n	8001a0a <HAL_GPIO_Init+0x1ee>
 8001a08:	2300      	movs	r3, #0
 8001a0a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001a0c:	f002 0203 	and.w	r2, r2, #3
 8001a10:	0092      	lsls	r2, r2, #2
 8001a12:	4093      	lsls	r3, r2
 8001a14:	68fa      	ldr	r2, [r7, #12]
 8001a16:	4313      	orrs	r3, r2
 8001a18:	60fb      	str	r3, [r7, #12]
 8001a1a:	492f      	ldr	r1, [pc, #188]	; (8001ad8 <HAL_GPIO_Init+0x2bc>)
 8001a1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a1e:	089b      	lsrs	r3, r3, #2
 8001a20:	3302      	adds	r3, #2
 8001a22:	68fa      	ldr	r2, [r7, #12]
 8001a24:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a28:	683b      	ldr	r3, [r7, #0]
 8001a2a:	685b      	ldr	r3, [r3, #4]
 8001a2c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d006      	beq.n	8001a42 <HAL_GPIO_Init+0x226>
 8001a34:	4b2d      	ldr	r3, [pc, #180]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a36:	689a      	ldr	r2, [r3, #8]
 8001a38:	492c      	ldr	r1, [pc, #176]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a3a:	69bb      	ldr	r3, [r7, #24]
 8001a3c:	4313      	orrs	r3, r2
 8001a3e:	608b      	str	r3, [r1, #8]
 8001a40:	e006      	b.n	8001a50 <HAL_GPIO_Init+0x234>
 8001a42:	4b2a      	ldr	r3, [pc, #168]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a44:	689a      	ldr	r2, [r3, #8]
 8001a46:	69bb      	ldr	r3, [r7, #24]
 8001a48:	43db      	mvns	r3, r3
 8001a4a:	4928      	ldr	r1, [pc, #160]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a4c:	4013      	ands	r3, r2
 8001a4e:	608b      	str	r3, [r1, #8]
 8001a50:	683b      	ldr	r3, [r7, #0]
 8001a52:	685b      	ldr	r3, [r3, #4]
 8001a54:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	d006      	beq.n	8001a6a <HAL_GPIO_Init+0x24e>
 8001a5c:	4b23      	ldr	r3, [pc, #140]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a5e:	68da      	ldr	r2, [r3, #12]
 8001a60:	4922      	ldr	r1, [pc, #136]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a62:	69bb      	ldr	r3, [r7, #24]
 8001a64:	4313      	orrs	r3, r2
 8001a66:	60cb      	str	r3, [r1, #12]
 8001a68:	e006      	b.n	8001a78 <HAL_GPIO_Init+0x25c>
 8001a6a:	4b20      	ldr	r3, [pc, #128]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a6c:	68da      	ldr	r2, [r3, #12]
 8001a6e:	69bb      	ldr	r3, [r7, #24]
 8001a70:	43db      	mvns	r3, r3
 8001a72:	491e      	ldr	r1, [pc, #120]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a74:	4013      	ands	r3, r2
 8001a76:	60cb      	str	r3, [r1, #12]
 8001a78:	683b      	ldr	r3, [r7, #0]
 8001a7a:	685b      	ldr	r3, [r3, #4]
 8001a7c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a80:	2b00      	cmp	r3, #0
 8001a82:	d006      	beq.n	8001a92 <HAL_GPIO_Init+0x276>
 8001a84:	4b19      	ldr	r3, [pc, #100]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a86:	685a      	ldr	r2, [r3, #4]
 8001a88:	4918      	ldr	r1, [pc, #96]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a8a:	69bb      	ldr	r3, [r7, #24]
 8001a8c:	4313      	orrs	r3, r2
 8001a8e:	604b      	str	r3, [r1, #4]
 8001a90:	e006      	b.n	8001aa0 <HAL_GPIO_Init+0x284>
 8001a92:	4b16      	ldr	r3, [pc, #88]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a94:	685a      	ldr	r2, [r3, #4]
 8001a96:	69bb      	ldr	r3, [r7, #24]
 8001a98:	43db      	mvns	r3, r3
 8001a9a:	4914      	ldr	r1, [pc, #80]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001a9c:	4013      	ands	r3, r2
 8001a9e:	604b      	str	r3, [r1, #4]
 8001aa0:	683b      	ldr	r3, [r7, #0]
 8001aa2:	685b      	ldr	r3, [r3, #4]
 8001aa4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	d021      	beq.n	8001af0 <HAL_GPIO_Init+0x2d4>
 8001aac:	4b0f      	ldr	r3, [pc, #60]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001aae:	681a      	ldr	r2, [r3, #0]
 8001ab0:	490e      	ldr	r1, [pc, #56]	; (8001aec <HAL_GPIO_Init+0x2d0>)
 8001ab2:	69bb      	ldr	r3, [r7, #24]
 8001ab4:	4313      	orrs	r3, r2
 8001ab6:	600b      	str	r3, [r1, #0]
 8001ab8:	e021      	b.n	8001afe <HAL_GPIO_Init+0x2e2>
 8001aba:	bf00      	nop
 8001abc:	10320000 	.word	0x10320000
 8001ac0:	10310000 	.word	0x10310000
 8001ac4:	10220000 	.word	0x10220000
 8001ac8:	10210000 	.word	0x10210000
 8001acc:	10120000 	.word	0x10120000
 8001ad0:	10110000 	.word	0x10110000
 8001ad4:	40021000 	.word	0x40021000
 8001ad8:	40010000 	.word	0x40010000
 8001adc:	40010800 	.word	0x40010800
 8001ae0:	40010c00 	.word	0x40010c00
 8001ae4:	40011000 	.word	0x40011000
 8001ae8:	40011400 	.word	0x40011400
 8001aec:	40010400 	.word	0x40010400
 8001af0:	4b0b      	ldr	r3, [pc, #44]	; (8001b20 <HAL_GPIO_Init+0x304>)
 8001af2:	681a      	ldr	r2, [r3, #0]
 8001af4:	69bb      	ldr	r3, [r7, #24]
 8001af6:	43db      	mvns	r3, r3
 8001af8:	4909      	ldr	r1, [pc, #36]	; (8001b20 <HAL_GPIO_Init+0x304>)
 8001afa:	4013      	ands	r3, r2
 8001afc:	600b      	str	r3, [r1, #0]
 8001afe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b00:	3301      	adds	r3, #1
 8001b02:	627b      	str	r3, [r7, #36]	; 0x24
 8001b04:	683b      	ldr	r3, [r7, #0]
 8001b06:	681a      	ldr	r2, [r3, #0]
 8001b08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b0a:	fa22 f303 	lsr.w	r3, r2, r3
 8001b0e:	2b00      	cmp	r3, #0
 8001b10:	f47f ae8e 	bne.w	8001830 <HAL_GPIO_Init+0x14>
 8001b14:	bf00      	nop
 8001b16:	bf00      	nop
 8001b18:	372c      	adds	r7, #44	; 0x2c
 8001b1a:	46bd      	mov	sp, r7
 8001b1c:	bc80      	pop	{r7}
 8001b1e:	4770      	bx	lr
 8001b20:	40010400 	.word	0x40010400

08001b24 <HAL_GPIO_ReadPin>:
 8001b24:	b480      	push	{r7}
 8001b26:	b085      	sub	sp, #20
 8001b28:	af00      	add	r7, sp, #0
 8001b2a:	6078      	str	r0, [r7, #4]
 8001b2c:	460b      	mov	r3, r1
 8001b2e:	807b      	strh	r3, [r7, #2]
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	689a      	ldr	r2, [r3, #8]
 8001b34:	887b      	ldrh	r3, [r7, #2]
 8001b36:	4013      	ands	r3, r2
 8001b38:	2b00      	cmp	r3, #0
 8001b3a:	d002      	beq.n	8001b42 <HAL_GPIO_ReadPin+0x1e>
 8001b3c:	2301      	movs	r3, #1
 8001b3e:	73fb      	strb	r3, [r7, #15]
 8001b40:	e001      	b.n	8001b46 <HAL_GPIO_ReadPin+0x22>
 8001b42:	2300      	movs	r3, #0
 8001b44:	73fb      	strb	r3, [r7, #15]
 8001b46:	7bfb      	ldrb	r3, [r7, #15]
 8001b48:	4618      	mov	r0, r3
 8001b4a:	3714      	adds	r7, #20
 8001b4c:	46bd      	mov	sp, r7
 8001b4e:	bc80      	pop	{r7}
 8001b50:	4770      	bx	lr

08001b52 <HAL_GPIO_WritePin>:
 8001b52:	b480      	push	{r7}
 8001b54:	b083      	sub	sp, #12
 8001b56:	af00      	add	r7, sp, #0
 8001b58:	6078      	str	r0, [r7, #4]
 8001b5a:	460b      	mov	r3, r1
 8001b5c:	807b      	strh	r3, [r7, #2]
 8001b5e:	4613      	mov	r3, r2
 8001b60:	707b      	strb	r3, [r7, #1]
 8001b62:	787b      	ldrb	r3, [r7, #1]
 8001b64:	2b00      	cmp	r3, #0
 8001b66:	d003      	beq.n	8001b70 <HAL_GPIO_WritePin+0x1e>
 8001b68:	887a      	ldrh	r2, [r7, #2]
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	611a      	str	r2, [r3, #16]
 8001b6e:	e003      	b.n	8001b78 <HAL_GPIO_WritePin+0x26>
 8001b70:	887b      	ldrh	r3, [r7, #2]
 8001b72:	041a      	lsls	r2, r3, #16
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	611a      	str	r2, [r3, #16]
 8001b78:	bf00      	nop
 8001b7a:	370c      	adds	r7, #12
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	bc80      	pop	{r7}
 8001b80:	4770      	bx	lr
	...

08001b84 <HAL_PWR_EnableBkUpAccess>:
 8001b84:	b480      	push	{r7}
 8001b86:	af00      	add	r7, sp, #0
 8001b88:	4b03      	ldr	r3, [pc, #12]	; (8001b98 <HAL_PWR_EnableBkUpAccess+0x14>)
 8001b8a:	2201      	movs	r2, #1
 8001b8c:	601a      	str	r2, [r3, #0]
 8001b8e:	bf00      	nop
 8001b90:	46bd      	mov	sp, r7
 8001b92:	bc80      	pop	{r7}
 8001b94:	4770      	bx	lr
 8001b96:	bf00      	nop
 8001b98:	420e0020 	.word	0x420e0020

08001b9c <HAL_RCC_OscConfig>:
 8001b9c:	b580      	push	{r7, lr}
 8001b9e:	b086      	sub	sp, #24
 8001ba0:	af00      	add	r7, sp, #0
 8001ba2:	6078      	str	r0, [r7, #4]
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d101      	bne.n	8001bae <HAL_RCC_OscConfig+0x12>
 8001baa:	2301      	movs	r3, #1
 8001bac:	e272      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	f003 0301 	and.w	r3, r3, #1
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	f000 8087 	beq.w	8001cca <HAL_RCC_OscConfig+0x12e>
 8001bbc:	4b92      	ldr	r3, [pc, #584]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001bbe:	685b      	ldr	r3, [r3, #4]
 8001bc0:	f003 030c 	and.w	r3, r3, #12
 8001bc4:	2b04      	cmp	r3, #4
 8001bc6:	d00c      	beq.n	8001be2 <HAL_RCC_OscConfig+0x46>
 8001bc8:	4b8f      	ldr	r3, [pc, #572]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001bca:	685b      	ldr	r3, [r3, #4]
 8001bcc:	f003 030c 	and.w	r3, r3, #12
 8001bd0:	2b08      	cmp	r3, #8
 8001bd2:	d112      	bne.n	8001bfa <HAL_RCC_OscConfig+0x5e>
 8001bd4:	4b8c      	ldr	r3, [pc, #560]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001bd6:	685b      	ldr	r3, [r3, #4]
 8001bd8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001bdc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001be0:	d10b      	bne.n	8001bfa <HAL_RCC_OscConfig+0x5e>
 8001be2:	4b89      	ldr	r3, [pc, #548]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d06c      	beq.n	8001cc8 <HAL_RCC_OscConfig+0x12c>
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	685b      	ldr	r3, [r3, #4]
 8001bf2:	2b00      	cmp	r3, #0
 8001bf4:	d168      	bne.n	8001cc8 <HAL_RCC_OscConfig+0x12c>
 8001bf6:	2301      	movs	r3, #1
 8001bf8:	e24c      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	685b      	ldr	r3, [r3, #4]
 8001bfe:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001c02:	d106      	bne.n	8001c12 <HAL_RCC_OscConfig+0x76>
 8001c04:	4b80      	ldr	r3, [pc, #512]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c06:	681b      	ldr	r3, [r3, #0]
 8001c08:	4a7f      	ldr	r2, [pc, #508]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c0a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001c0e:	6013      	str	r3, [r2, #0]
 8001c10:	e02e      	b.n	8001c70 <HAL_RCC_OscConfig+0xd4>
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	685b      	ldr	r3, [r3, #4]
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d10c      	bne.n	8001c34 <HAL_RCC_OscConfig+0x98>
 8001c1a:	4b7b      	ldr	r3, [pc, #492]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	4a7a      	ldr	r2, [pc, #488]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c20:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001c24:	6013      	str	r3, [r2, #0]
 8001c26:	4b78      	ldr	r3, [pc, #480]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c28:	681b      	ldr	r3, [r3, #0]
 8001c2a:	4a77      	ldr	r2, [pc, #476]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c2c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001c30:	6013      	str	r3, [r2, #0]
 8001c32:	e01d      	b.n	8001c70 <HAL_RCC_OscConfig+0xd4>
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	685b      	ldr	r3, [r3, #4]
 8001c38:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001c3c:	d10c      	bne.n	8001c58 <HAL_RCC_OscConfig+0xbc>
 8001c3e:	4b72      	ldr	r3, [pc, #456]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	4a71      	ldr	r2, [pc, #452]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c44:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001c48:	6013      	str	r3, [r2, #0]
 8001c4a:	4b6f      	ldr	r3, [pc, #444]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	4a6e      	ldr	r2, [pc, #440]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c50:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001c54:	6013      	str	r3, [r2, #0]
 8001c56:	e00b      	b.n	8001c70 <HAL_RCC_OscConfig+0xd4>
 8001c58:	4b6b      	ldr	r3, [pc, #428]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	4a6a      	ldr	r2, [pc, #424]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c5e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001c62:	6013      	str	r3, [r2, #0]
 8001c64:	4b68      	ldr	r3, [pc, #416]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c66:	681b      	ldr	r3, [r3, #0]
 8001c68:	4a67      	ldr	r2, [pc, #412]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c6a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001c6e:	6013      	str	r3, [r2, #0]
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	685b      	ldr	r3, [r3, #4]
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d013      	beq.n	8001ca0 <HAL_RCC_OscConfig+0x104>
 8001c78:	f7ff fcbe 	bl	80015f8 <HAL_GetTick>
 8001c7c:	6138      	str	r0, [r7, #16]
 8001c7e:	e008      	b.n	8001c92 <HAL_RCC_OscConfig+0xf6>
 8001c80:	f7ff fcba 	bl	80015f8 <HAL_GetTick>
 8001c84:	4602      	mov	r2, r0
 8001c86:	693b      	ldr	r3, [r7, #16]
 8001c88:	1ad3      	subs	r3, r2, r3
 8001c8a:	2b64      	cmp	r3, #100	; 0x64
 8001c8c:	d901      	bls.n	8001c92 <HAL_RCC_OscConfig+0xf6>
 8001c8e:	2303      	movs	r3, #3
 8001c90:	e200      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001c92:	4b5d      	ldr	r3, [pc, #372]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001c9a:	2b00      	cmp	r3, #0
 8001c9c:	d0f0      	beq.n	8001c80 <HAL_RCC_OscConfig+0xe4>
 8001c9e:	e014      	b.n	8001cca <HAL_RCC_OscConfig+0x12e>
 8001ca0:	f7ff fcaa 	bl	80015f8 <HAL_GetTick>
 8001ca4:	6138      	str	r0, [r7, #16]
 8001ca6:	e008      	b.n	8001cba <HAL_RCC_OscConfig+0x11e>
 8001ca8:	f7ff fca6 	bl	80015f8 <HAL_GetTick>
 8001cac:	4602      	mov	r2, r0
 8001cae:	693b      	ldr	r3, [r7, #16]
 8001cb0:	1ad3      	subs	r3, r2, r3
 8001cb2:	2b64      	cmp	r3, #100	; 0x64
 8001cb4:	d901      	bls.n	8001cba <HAL_RCC_OscConfig+0x11e>
 8001cb6:	2303      	movs	r3, #3
 8001cb8:	e1ec      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001cba:	4b53      	ldr	r3, [pc, #332]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001cc2:	2b00      	cmp	r3, #0
 8001cc4:	d1f0      	bne.n	8001ca8 <HAL_RCC_OscConfig+0x10c>
 8001cc6:	e000      	b.n	8001cca <HAL_RCC_OscConfig+0x12e>
 8001cc8:	bf00      	nop
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	f003 0302 	and.w	r3, r3, #2
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	d063      	beq.n	8001d9e <HAL_RCC_OscConfig+0x202>
 8001cd6:	4b4c      	ldr	r3, [pc, #304]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001cd8:	685b      	ldr	r3, [r3, #4]
 8001cda:	f003 030c 	and.w	r3, r3, #12
 8001cde:	2b00      	cmp	r3, #0
 8001ce0:	d00b      	beq.n	8001cfa <HAL_RCC_OscConfig+0x15e>
 8001ce2:	4b49      	ldr	r3, [pc, #292]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001ce4:	685b      	ldr	r3, [r3, #4]
 8001ce6:	f003 030c 	and.w	r3, r3, #12
 8001cea:	2b08      	cmp	r3, #8
 8001cec:	d11c      	bne.n	8001d28 <HAL_RCC_OscConfig+0x18c>
 8001cee:	4b46      	ldr	r3, [pc, #280]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001cf0:	685b      	ldr	r3, [r3, #4]
 8001cf2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001cf6:	2b00      	cmp	r3, #0
 8001cf8:	d116      	bne.n	8001d28 <HAL_RCC_OscConfig+0x18c>
 8001cfa:	4b43      	ldr	r3, [pc, #268]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	f003 0302 	and.w	r3, r3, #2
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d005      	beq.n	8001d12 <HAL_RCC_OscConfig+0x176>
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	691b      	ldr	r3, [r3, #16]
 8001d0a:	2b01      	cmp	r3, #1
 8001d0c:	d001      	beq.n	8001d12 <HAL_RCC_OscConfig+0x176>
 8001d0e:	2301      	movs	r3, #1
 8001d10:	e1c0      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001d12:	4b3d      	ldr	r3, [pc, #244]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	695b      	ldr	r3, [r3, #20]
 8001d1e:	00db      	lsls	r3, r3, #3
 8001d20:	4939      	ldr	r1, [pc, #228]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001d22:	4313      	orrs	r3, r2
 8001d24:	600b      	str	r3, [r1, #0]
 8001d26:	e03a      	b.n	8001d9e <HAL_RCC_OscConfig+0x202>
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	691b      	ldr	r3, [r3, #16]
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d020      	beq.n	8001d72 <HAL_RCC_OscConfig+0x1d6>
 8001d30:	4b36      	ldr	r3, [pc, #216]	; (8001e0c <HAL_RCC_OscConfig+0x270>)
 8001d32:	2201      	movs	r2, #1
 8001d34:	601a      	str	r2, [r3, #0]
 8001d36:	f7ff fc5f 	bl	80015f8 <HAL_GetTick>
 8001d3a:	6138      	str	r0, [r7, #16]
 8001d3c:	e008      	b.n	8001d50 <HAL_RCC_OscConfig+0x1b4>
 8001d3e:	f7ff fc5b 	bl	80015f8 <HAL_GetTick>
 8001d42:	4602      	mov	r2, r0
 8001d44:	693b      	ldr	r3, [r7, #16]
 8001d46:	1ad3      	subs	r3, r2, r3
 8001d48:	2b02      	cmp	r3, #2
 8001d4a:	d901      	bls.n	8001d50 <HAL_RCC_OscConfig+0x1b4>
 8001d4c:	2303      	movs	r3, #3
 8001d4e:	e1a1      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001d50:	4b2d      	ldr	r3, [pc, #180]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	f003 0302 	and.w	r3, r3, #2
 8001d58:	2b00      	cmp	r3, #0
 8001d5a:	d0f0      	beq.n	8001d3e <HAL_RCC_OscConfig+0x1a2>
 8001d5c:	4b2a      	ldr	r3, [pc, #168]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	695b      	ldr	r3, [r3, #20]
 8001d68:	00db      	lsls	r3, r3, #3
 8001d6a:	4927      	ldr	r1, [pc, #156]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001d6c:	4313      	orrs	r3, r2
 8001d6e:	600b      	str	r3, [r1, #0]
 8001d70:	e015      	b.n	8001d9e <HAL_RCC_OscConfig+0x202>
 8001d72:	4b26      	ldr	r3, [pc, #152]	; (8001e0c <HAL_RCC_OscConfig+0x270>)
 8001d74:	2200      	movs	r2, #0
 8001d76:	601a      	str	r2, [r3, #0]
 8001d78:	f7ff fc3e 	bl	80015f8 <HAL_GetTick>
 8001d7c:	6138      	str	r0, [r7, #16]
 8001d7e:	e008      	b.n	8001d92 <HAL_RCC_OscConfig+0x1f6>
 8001d80:	f7ff fc3a 	bl	80015f8 <HAL_GetTick>
 8001d84:	4602      	mov	r2, r0
 8001d86:	693b      	ldr	r3, [r7, #16]
 8001d88:	1ad3      	subs	r3, r2, r3
 8001d8a:	2b02      	cmp	r3, #2
 8001d8c:	d901      	bls.n	8001d92 <HAL_RCC_OscConfig+0x1f6>
 8001d8e:	2303      	movs	r3, #3
 8001d90:	e180      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001d92:	4b1d      	ldr	r3, [pc, #116]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	f003 0302 	and.w	r3, r3, #2
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d1f0      	bne.n	8001d80 <HAL_RCC_OscConfig+0x1e4>
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	f003 0308 	and.w	r3, r3, #8
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d03a      	beq.n	8001e20 <HAL_RCC_OscConfig+0x284>
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	699b      	ldr	r3, [r3, #24]
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d019      	beq.n	8001de6 <HAL_RCC_OscConfig+0x24a>
 8001db2:	4b17      	ldr	r3, [pc, #92]	; (8001e10 <HAL_RCC_OscConfig+0x274>)
 8001db4:	2201      	movs	r2, #1
 8001db6:	601a      	str	r2, [r3, #0]
 8001db8:	f7ff fc1e 	bl	80015f8 <HAL_GetTick>
 8001dbc:	6138      	str	r0, [r7, #16]
 8001dbe:	e008      	b.n	8001dd2 <HAL_RCC_OscConfig+0x236>
 8001dc0:	f7ff fc1a 	bl	80015f8 <HAL_GetTick>
 8001dc4:	4602      	mov	r2, r0
 8001dc6:	693b      	ldr	r3, [r7, #16]
 8001dc8:	1ad3      	subs	r3, r2, r3
 8001dca:	2b02      	cmp	r3, #2
 8001dcc:	d901      	bls.n	8001dd2 <HAL_RCC_OscConfig+0x236>
 8001dce:	2303      	movs	r3, #3
 8001dd0:	e160      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001dd2:	4b0d      	ldr	r3, [pc, #52]	; (8001e08 <HAL_RCC_OscConfig+0x26c>)
 8001dd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dd6:	f003 0302 	and.w	r3, r3, #2
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d0f0      	beq.n	8001dc0 <HAL_RCC_OscConfig+0x224>
 8001dde:	2001      	movs	r0, #1
 8001de0:	f000 face 	bl	8002380 <RCC_Delay>
 8001de4:	e01c      	b.n	8001e20 <HAL_RCC_OscConfig+0x284>
 8001de6:	4b0a      	ldr	r3, [pc, #40]	; (8001e10 <HAL_RCC_OscConfig+0x274>)
 8001de8:	2200      	movs	r2, #0
 8001dea:	601a      	str	r2, [r3, #0]
 8001dec:	f7ff fc04 	bl	80015f8 <HAL_GetTick>
 8001df0:	6138      	str	r0, [r7, #16]
 8001df2:	e00f      	b.n	8001e14 <HAL_RCC_OscConfig+0x278>
 8001df4:	f7ff fc00 	bl	80015f8 <HAL_GetTick>
 8001df8:	4602      	mov	r2, r0
 8001dfa:	693b      	ldr	r3, [r7, #16]
 8001dfc:	1ad3      	subs	r3, r2, r3
 8001dfe:	2b02      	cmp	r3, #2
 8001e00:	d908      	bls.n	8001e14 <HAL_RCC_OscConfig+0x278>
 8001e02:	2303      	movs	r3, #3
 8001e04:	e146      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001e06:	bf00      	nop
 8001e08:	40021000 	.word	0x40021000
 8001e0c:	42420000 	.word	0x42420000
 8001e10:	42420480 	.word	0x42420480
 8001e14:	4b92      	ldr	r3, [pc, #584]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001e16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e18:	f003 0302 	and.w	r3, r3, #2
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	d1e9      	bne.n	8001df4 <HAL_RCC_OscConfig+0x258>
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	f003 0304 	and.w	r3, r3, #4
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	f000 80a6 	beq.w	8001f7a <HAL_RCC_OscConfig+0x3de>
 8001e2e:	2300      	movs	r3, #0
 8001e30:	75fb      	strb	r3, [r7, #23]
 8001e32:	4b8b      	ldr	r3, [pc, #556]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001e34:	69db      	ldr	r3, [r3, #28]
 8001e36:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	d10d      	bne.n	8001e5a <HAL_RCC_OscConfig+0x2be>
 8001e3e:	4b88      	ldr	r3, [pc, #544]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001e40:	69db      	ldr	r3, [r3, #28]
 8001e42:	4a87      	ldr	r2, [pc, #540]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001e44:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001e48:	61d3      	str	r3, [r2, #28]
 8001e4a:	4b85      	ldr	r3, [pc, #532]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001e4c:	69db      	ldr	r3, [r3, #28]
 8001e4e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e52:	60bb      	str	r3, [r7, #8]
 8001e54:	68bb      	ldr	r3, [r7, #8]
 8001e56:	2301      	movs	r3, #1
 8001e58:	75fb      	strb	r3, [r7, #23]
 8001e5a:	4b82      	ldr	r3, [pc, #520]	; (8002064 <HAL_RCC_OscConfig+0x4c8>)
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d118      	bne.n	8001e98 <HAL_RCC_OscConfig+0x2fc>
 8001e66:	4b7f      	ldr	r3, [pc, #508]	; (8002064 <HAL_RCC_OscConfig+0x4c8>)
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	4a7e      	ldr	r2, [pc, #504]	; (8002064 <HAL_RCC_OscConfig+0x4c8>)
 8001e6c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001e70:	6013      	str	r3, [r2, #0]
 8001e72:	f7ff fbc1 	bl	80015f8 <HAL_GetTick>
 8001e76:	6138      	str	r0, [r7, #16]
 8001e78:	e008      	b.n	8001e8c <HAL_RCC_OscConfig+0x2f0>
 8001e7a:	f7ff fbbd 	bl	80015f8 <HAL_GetTick>
 8001e7e:	4602      	mov	r2, r0
 8001e80:	693b      	ldr	r3, [r7, #16]
 8001e82:	1ad3      	subs	r3, r2, r3
 8001e84:	2b64      	cmp	r3, #100	; 0x64
 8001e86:	d901      	bls.n	8001e8c <HAL_RCC_OscConfig+0x2f0>
 8001e88:	2303      	movs	r3, #3
 8001e8a:	e103      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001e8c:	4b75      	ldr	r3, [pc, #468]	; (8002064 <HAL_RCC_OscConfig+0x4c8>)
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001e94:	2b00      	cmp	r3, #0
 8001e96:	d0f0      	beq.n	8001e7a <HAL_RCC_OscConfig+0x2de>
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	68db      	ldr	r3, [r3, #12]
 8001e9c:	2b01      	cmp	r3, #1
 8001e9e:	d106      	bne.n	8001eae <HAL_RCC_OscConfig+0x312>
 8001ea0:	4b6f      	ldr	r3, [pc, #444]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ea2:	6a1b      	ldr	r3, [r3, #32]
 8001ea4:	4a6e      	ldr	r2, [pc, #440]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ea6:	f043 0301 	orr.w	r3, r3, #1
 8001eaa:	6213      	str	r3, [r2, #32]
 8001eac:	e02d      	b.n	8001f0a <HAL_RCC_OscConfig+0x36e>
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	68db      	ldr	r3, [r3, #12]
 8001eb2:	2b00      	cmp	r3, #0
 8001eb4:	d10c      	bne.n	8001ed0 <HAL_RCC_OscConfig+0x334>
 8001eb6:	4b6a      	ldr	r3, [pc, #424]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001eb8:	6a1b      	ldr	r3, [r3, #32]
 8001eba:	4a69      	ldr	r2, [pc, #420]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ebc:	f023 0301 	bic.w	r3, r3, #1
 8001ec0:	6213      	str	r3, [r2, #32]
 8001ec2:	4b67      	ldr	r3, [pc, #412]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ec4:	6a1b      	ldr	r3, [r3, #32]
 8001ec6:	4a66      	ldr	r2, [pc, #408]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ec8:	f023 0304 	bic.w	r3, r3, #4
 8001ecc:	6213      	str	r3, [r2, #32]
 8001ece:	e01c      	b.n	8001f0a <HAL_RCC_OscConfig+0x36e>
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	68db      	ldr	r3, [r3, #12]
 8001ed4:	2b05      	cmp	r3, #5
 8001ed6:	d10c      	bne.n	8001ef2 <HAL_RCC_OscConfig+0x356>
 8001ed8:	4b61      	ldr	r3, [pc, #388]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001eda:	6a1b      	ldr	r3, [r3, #32]
 8001edc:	4a60      	ldr	r2, [pc, #384]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ede:	f043 0304 	orr.w	r3, r3, #4
 8001ee2:	6213      	str	r3, [r2, #32]
 8001ee4:	4b5e      	ldr	r3, [pc, #376]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ee6:	6a1b      	ldr	r3, [r3, #32]
 8001ee8:	4a5d      	ldr	r2, [pc, #372]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001eea:	f043 0301 	orr.w	r3, r3, #1
 8001eee:	6213      	str	r3, [r2, #32]
 8001ef0:	e00b      	b.n	8001f0a <HAL_RCC_OscConfig+0x36e>
 8001ef2:	4b5b      	ldr	r3, [pc, #364]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ef4:	6a1b      	ldr	r3, [r3, #32]
 8001ef6:	4a5a      	ldr	r2, [pc, #360]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ef8:	f023 0301 	bic.w	r3, r3, #1
 8001efc:	6213      	str	r3, [r2, #32]
 8001efe:	4b58      	ldr	r3, [pc, #352]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001f00:	6a1b      	ldr	r3, [r3, #32]
 8001f02:	4a57      	ldr	r2, [pc, #348]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001f04:	f023 0304 	bic.w	r3, r3, #4
 8001f08:	6213      	str	r3, [r2, #32]
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	68db      	ldr	r3, [r3, #12]
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d015      	beq.n	8001f3e <HAL_RCC_OscConfig+0x3a2>
 8001f12:	f7ff fb71 	bl	80015f8 <HAL_GetTick>
 8001f16:	6138      	str	r0, [r7, #16]
 8001f18:	e00a      	b.n	8001f30 <HAL_RCC_OscConfig+0x394>
 8001f1a:	f7ff fb6d 	bl	80015f8 <HAL_GetTick>
 8001f1e:	4602      	mov	r2, r0
 8001f20:	693b      	ldr	r3, [r7, #16]
 8001f22:	1ad3      	subs	r3, r2, r3
 8001f24:	f241 3288 	movw	r2, #5000	; 0x1388
 8001f28:	4293      	cmp	r3, r2
 8001f2a:	d901      	bls.n	8001f30 <HAL_RCC_OscConfig+0x394>
 8001f2c:	2303      	movs	r3, #3
 8001f2e:	e0b1      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001f30:	4b4b      	ldr	r3, [pc, #300]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001f32:	6a1b      	ldr	r3, [r3, #32]
 8001f34:	f003 0302 	and.w	r3, r3, #2
 8001f38:	2b00      	cmp	r3, #0
 8001f3a:	d0ee      	beq.n	8001f1a <HAL_RCC_OscConfig+0x37e>
 8001f3c:	e014      	b.n	8001f68 <HAL_RCC_OscConfig+0x3cc>
 8001f3e:	f7ff fb5b 	bl	80015f8 <HAL_GetTick>
 8001f42:	6138      	str	r0, [r7, #16]
 8001f44:	e00a      	b.n	8001f5c <HAL_RCC_OscConfig+0x3c0>
 8001f46:	f7ff fb57 	bl	80015f8 <HAL_GetTick>
 8001f4a:	4602      	mov	r2, r0
 8001f4c:	693b      	ldr	r3, [r7, #16]
 8001f4e:	1ad3      	subs	r3, r2, r3
 8001f50:	f241 3288 	movw	r2, #5000	; 0x1388
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d901      	bls.n	8001f5c <HAL_RCC_OscConfig+0x3c0>
 8001f58:	2303      	movs	r3, #3
 8001f5a:	e09b      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001f5c:	4b40      	ldr	r3, [pc, #256]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001f5e:	6a1b      	ldr	r3, [r3, #32]
 8001f60:	f003 0302 	and.w	r3, r3, #2
 8001f64:	2b00      	cmp	r3, #0
 8001f66:	d1ee      	bne.n	8001f46 <HAL_RCC_OscConfig+0x3aa>
 8001f68:	7dfb      	ldrb	r3, [r7, #23]
 8001f6a:	2b01      	cmp	r3, #1
 8001f6c:	d105      	bne.n	8001f7a <HAL_RCC_OscConfig+0x3de>
 8001f6e:	4b3c      	ldr	r3, [pc, #240]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001f70:	69db      	ldr	r3, [r3, #28]
 8001f72:	4a3b      	ldr	r2, [pc, #236]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001f74:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001f78:	61d3      	str	r3, [r2, #28]
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	69db      	ldr	r3, [r3, #28]
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	f000 8087 	beq.w	8002092 <HAL_RCC_OscConfig+0x4f6>
 8001f84:	4b36      	ldr	r3, [pc, #216]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001f86:	685b      	ldr	r3, [r3, #4]
 8001f88:	f003 030c 	and.w	r3, r3, #12
 8001f8c:	2b08      	cmp	r3, #8
 8001f8e:	d061      	beq.n	8002054 <HAL_RCC_OscConfig+0x4b8>
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	69db      	ldr	r3, [r3, #28]
 8001f94:	2b02      	cmp	r3, #2
 8001f96:	d146      	bne.n	8002026 <HAL_RCC_OscConfig+0x48a>
 8001f98:	4b33      	ldr	r3, [pc, #204]	; (8002068 <HAL_RCC_OscConfig+0x4cc>)
 8001f9a:	2200      	movs	r2, #0
 8001f9c:	601a      	str	r2, [r3, #0]
 8001f9e:	f7ff fb2b 	bl	80015f8 <HAL_GetTick>
 8001fa2:	6138      	str	r0, [r7, #16]
 8001fa4:	e008      	b.n	8001fb8 <HAL_RCC_OscConfig+0x41c>
 8001fa6:	f7ff fb27 	bl	80015f8 <HAL_GetTick>
 8001faa:	4602      	mov	r2, r0
 8001fac:	693b      	ldr	r3, [r7, #16]
 8001fae:	1ad3      	subs	r3, r2, r3
 8001fb0:	2b02      	cmp	r3, #2
 8001fb2:	d901      	bls.n	8001fb8 <HAL_RCC_OscConfig+0x41c>
 8001fb4:	2303      	movs	r3, #3
 8001fb6:	e06d      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8001fb8:	4b29      	ldr	r3, [pc, #164]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001fc0:	2b00      	cmp	r3, #0
 8001fc2:	d1f0      	bne.n	8001fa6 <HAL_RCC_OscConfig+0x40a>
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	6a1b      	ldr	r3, [r3, #32]
 8001fc8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001fcc:	d108      	bne.n	8001fe0 <HAL_RCC_OscConfig+0x444>
 8001fce:	4b24      	ldr	r3, [pc, #144]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001fd0:	685b      	ldr	r3, [r3, #4]
 8001fd2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	689b      	ldr	r3, [r3, #8]
 8001fda:	4921      	ldr	r1, [pc, #132]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001fdc:	4313      	orrs	r3, r2
 8001fde:	604b      	str	r3, [r1, #4]
 8001fe0:	4b1f      	ldr	r3, [pc, #124]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001fe2:	685b      	ldr	r3, [r3, #4]
 8001fe4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	6a19      	ldr	r1, [r3, #32]
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ff0:	430b      	orrs	r3, r1
 8001ff2:	491b      	ldr	r1, [pc, #108]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8001ff4:	4313      	orrs	r3, r2
 8001ff6:	604b      	str	r3, [r1, #4]
 8001ff8:	4b1b      	ldr	r3, [pc, #108]	; (8002068 <HAL_RCC_OscConfig+0x4cc>)
 8001ffa:	2201      	movs	r2, #1
 8001ffc:	601a      	str	r2, [r3, #0]
 8001ffe:	f7ff fafb 	bl	80015f8 <HAL_GetTick>
 8002002:	6138      	str	r0, [r7, #16]
 8002004:	e008      	b.n	8002018 <HAL_RCC_OscConfig+0x47c>
 8002006:	f7ff faf7 	bl	80015f8 <HAL_GetTick>
 800200a:	4602      	mov	r2, r0
 800200c:	693b      	ldr	r3, [r7, #16]
 800200e:	1ad3      	subs	r3, r2, r3
 8002010:	2b02      	cmp	r3, #2
 8002012:	d901      	bls.n	8002018 <HAL_RCC_OscConfig+0x47c>
 8002014:	2303      	movs	r3, #3
 8002016:	e03d      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8002018:	4b11      	ldr	r3, [pc, #68]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002020:	2b00      	cmp	r3, #0
 8002022:	d0f0      	beq.n	8002006 <HAL_RCC_OscConfig+0x46a>
 8002024:	e035      	b.n	8002092 <HAL_RCC_OscConfig+0x4f6>
 8002026:	4b10      	ldr	r3, [pc, #64]	; (8002068 <HAL_RCC_OscConfig+0x4cc>)
 8002028:	2200      	movs	r2, #0
 800202a:	601a      	str	r2, [r3, #0]
 800202c:	f7ff fae4 	bl	80015f8 <HAL_GetTick>
 8002030:	6138      	str	r0, [r7, #16]
 8002032:	e008      	b.n	8002046 <HAL_RCC_OscConfig+0x4aa>
 8002034:	f7ff fae0 	bl	80015f8 <HAL_GetTick>
 8002038:	4602      	mov	r2, r0
 800203a:	693b      	ldr	r3, [r7, #16]
 800203c:	1ad3      	subs	r3, r2, r3
 800203e:	2b02      	cmp	r3, #2
 8002040:	d901      	bls.n	8002046 <HAL_RCC_OscConfig+0x4aa>
 8002042:	2303      	movs	r3, #3
 8002044:	e026      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8002046:	4b06      	ldr	r3, [pc, #24]	; (8002060 <HAL_RCC_OscConfig+0x4c4>)
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800204e:	2b00      	cmp	r3, #0
 8002050:	d1f0      	bne.n	8002034 <HAL_RCC_OscConfig+0x498>
 8002052:	e01e      	b.n	8002092 <HAL_RCC_OscConfig+0x4f6>
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	69db      	ldr	r3, [r3, #28]
 8002058:	2b01      	cmp	r3, #1
 800205a:	d107      	bne.n	800206c <HAL_RCC_OscConfig+0x4d0>
 800205c:	2301      	movs	r3, #1
 800205e:	e019      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8002060:	40021000 	.word	0x40021000
 8002064:	40007000 	.word	0x40007000
 8002068:	42420060 	.word	0x42420060
 800206c:	4b0b      	ldr	r3, [pc, #44]	; (800209c <HAL_RCC_OscConfig+0x500>)
 800206e:	685b      	ldr	r3, [r3, #4]
 8002070:	60fb      	str	r3, [r7, #12]
 8002072:	68fb      	ldr	r3, [r7, #12]
 8002074:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	6a1b      	ldr	r3, [r3, #32]
 800207c:	429a      	cmp	r2, r3
 800207e:	d106      	bne.n	800208e <HAL_RCC_OscConfig+0x4f2>
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800208a:	429a      	cmp	r2, r3
 800208c:	d001      	beq.n	8002092 <HAL_RCC_OscConfig+0x4f6>
 800208e:	2301      	movs	r3, #1
 8002090:	e000      	b.n	8002094 <HAL_RCC_OscConfig+0x4f8>
 8002092:	2300      	movs	r3, #0
 8002094:	4618      	mov	r0, r3
 8002096:	3718      	adds	r7, #24
 8002098:	46bd      	mov	sp, r7
 800209a:	bd80      	pop	{r7, pc}
 800209c:	40021000 	.word	0x40021000

080020a0 <HAL_RCC_ClockConfig>:
 80020a0:	b580      	push	{r7, lr}
 80020a2:	b084      	sub	sp, #16
 80020a4:	af00      	add	r7, sp, #0
 80020a6:	6078      	str	r0, [r7, #4]
 80020a8:	6039      	str	r1, [r7, #0]
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d101      	bne.n	80020b4 <HAL_RCC_ClockConfig+0x14>
 80020b0:	2301      	movs	r3, #1
 80020b2:	e0d0      	b.n	8002256 <HAL_RCC_ClockConfig+0x1b6>
 80020b4:	4b6a      	ldr	r3, [pc, #424]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	f003 0307 	and.w	r3, r3, #7
 80020bc:	683a      	ldr	r2, [r7, #0]
 80020be:	429a      	cmp	r2, r3
 80020c0:	d910      	bls.n	80020e4 <HAL_RCC_ClockConfig+0x44>
 80020c2:	4b67      	ldr	r3, [pc, #412]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	f023 0207 	bic.w	r2, r3, #7
 80020ca:	4965      	ldr	r1, [pc, #404]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80020cc:	683b      	ldr	r3, [r7, #0]
 80020ce:	4313      	orrs	r3, r2
 80020d0:	600b      	str	r3, [r1, #0]
 80020d2:	4b63      	ldr	r3, [pc, #396]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80020d4:	681b      	ldr	r3, [r3, #0]
 80020d6:	f003 0307 	and.w	r3, r3, #7
 80020da:	683a      	ldr	r2, [r7, #0]
 80020dc:	429a      	cmp	r2, r3
 80020de:	d001      	beq.n	80020e4 <HAL_RCC_ClockConfig+0x44>
 80020e0:	2301      	movs	r3, #1
 80020e2:	e0b8      	b.n	8002256 <HAL_RCC_ClockConfig+0x1b6>
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	f003 0302 	and.w	r3, r3, #2
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d020      	beq.n	8002132 <HAL_RCC_ClockConfig+0x92>
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	f003 0304 	and.w	r3, r3, #4
 80020f8:	2b00      	cmp	r3, #0
 80020fa:	d005      	beq.n	8002108 <HAL_RCC_ClockConfig+0x68>
 80020fc:	4b59      	ldr	r3, [pc, #356]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 80020fe:	685b      	ldr	r3, [r3, #4]
 8002100:	4a58      	ldr	r2, [pc, #352]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002102:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002106:	6053      	str	r3, [r2, #4]
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	f003 0308 	and.w	r3, r3, #8
 8002110:	2b00      	cmp	r3, #0
 8002112:	d005      	beq.n	8002120 <HAL_RCC_ClockConfig+0x80>
 8002114:	4b53      	ldr	r3, [pc, #332]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002116:	685b      	ldr	r3, [r3, #4]
 8002118:	4a52      	ldr	r2, [pc, #328]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 800211a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800211e:	6053      	str	r3, [r2, #4]
 8002120:	4b50      	ldr	r3, [pc, #320]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002122:	685b      	ldr	r3, [r3, #4]
 8002124:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	689b      	ldr	r3, [r3, #8]
 800212c:	494d      	ldr	r1, [pc, #308]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 800212e:	4313      	orrs	r3, r2
 8002130:	604b      	str	r3, [r1, #4]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	f003 0301 	and.w	r3, r3, #1
 800213a:	2b00      	cmp	r3, #0
 800213c:	d040      	beq.n	80021c0 <HAL_RCC_ClockConfig+0x120>
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	685b      	ldr	r3, [r3, #4]
 8002142:	2b01      	cmp	r3, #1
 8002144:	d107      	bne.n	8002156 <HAL_RCC_ClockConfig+0xb6>
 8002146:	4b47      	ldr	r3, [pc, #284]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800214e:	2b00      	cmp	r3, #0
 8002150:	d115      	bne.n	800217e <HAL_RCC_ClockConfig+0xde>
 8002152:	2301      	movs	r3, #1
 8002154:	e07f      	b.n	8002256 <HAL_RCC_ClockConfig+0x1b6>
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	685b      	ldr	r3, [r3, #4]
 800215a:	2b02      	cmp	r3, #2
 800215c:	d107      	bne.n	800216e <HAL_RCC_ClockConfig+0xce>
 800215e:	4b41      	ldr	r3, [pc, #260]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002166:	2b00      	cmp	r3, #0
 8002168:	d109      	bne.n	800217e <HAL_RCC_ClockConfig+0xde>
 800216a:	2301      	movs	r3, #1
 800216c:	e073      	b.n	8002256 <HAL_RCC_ClockConfig+0x1b6>
 800216e:	4b3d      	ldr	r3, [pc, #244]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	f003 0302 	and.w	r3, r3, #2
 8002176:	2b00      	cmp	r3, #0
 8002178:	d101      	bne.n	800217e <HAL_RCC_ClockConfig+0xde>
 800217a:	2301      	movs	r3, #1
 800217c:	e06b      	b.n	8002256 <HAL_RCC_ClockConfig+0x1b6>
 800217e:	4b39      	ldr	r3, [pc, #228]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002180:	685b      	ldr	r3, [r3, #4]
 8002182:	f023 0203 	bic.w	r2, r3, #3
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	685b      	ldr	r3, [r3, #4]
 800218a:	4936      	ldr	r1, [pc, #216]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 800218c:	4313      	orrs	r3, r2
 800218e:	604b      	str	r3, [r1, #4]
 8002190:	f7ff fa32 	bl	80015f8 <HAL_GetTick>
 8002194:	60f8      	str	r0, [r7, #12]
 8002196:	e00a      	b.n	80021ae <HAL_RCC_ClockConfig+0x10e>
 8002198:	f7ff fa2e 	bl	80015f8 <HAL_GetTick>
 800219c:	4602      	mov	r2, r0
 800219e:	68fb      	ldr	r3, [r7, #12]
 80021a0:	1ad3      	subs	r3, r2, r3
 80021a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80021a6:	4293      	cmp	r3, r2
 80021a8:	d901      	bls.n	80021ae <HAL_RCC_ClockConfig+0x10e>
 80021aa:	2303      	movs	r3, #3
 80021ac:	e053      	b.n	8002256 <HAL_RCC_ClockConfig+0x1b6>
 80021ae:	4b2d      	ldr	r3, [pc, #180]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 80021b0:	685b      	ldr	r3, [r3, #4]
 80021b2:	f003 020c 	and.w	r2, r3, #12
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	685b      	ldr	r3, [r3, #4]
 80021ba:	009b      	lsls	r3, r3, #2
 80021bc:	429a      	cmp	r2, r3
 80021be:	d1eb      	bne.n	8002198 <HAL_RCC_ClockConfig+0xf8>
 80021c0:	4b27      	ldr	r3, [pc, #156]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	f003 0307 	and.w	r3, r3, #7
 80021c8:	683a      	ldr	r2, [r7, #0]
 80021ca:	429a      	cmp	r2, r3
 80021cc:	d210      	bcs.n	80021f0 <HAL_RCC_ClockConfig+0x150>
 80021ce:	4b24      	ldr	r3, [pc, #144]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	f023 0207 	bic.w	r2, r3, #7
 80021d6:	4922      	ldr	r1, [pc, #136]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80021d8:	683b      	ldr	r3, [r7, #0]
 80021da:	4313      	orrs	r3, r2
 80021dc:	600b      	str	r3, [r1, #0]
 80021de:	4b20      	ldr	r3, [pc, #128]	; (8002260 <HAL_RCC_ClockConfig+0x1c0>)
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	f003 0307 	and.w	r3, r3, #7
 80021e6:	683a      	ldr	r2, [r7, #0]
 80021e8:	429a      	cmp	r2, r3
 80021ea:	d001      	beq.n	80021f0 <HAL_RCC_ClockConfig+0x150>
 80021ec:	2301      	movs	r3, #1
 80021ee:	e032      	b.n	8002256 <HAL_RCC_ClockConfig+0x1b6>
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	f003 0304 	and.w	r3, r3, #4
 80021f8:	2b00      	cmp	r3, #0
 80021fa:	d008      	beq.n	800220e <HAL_RCC_ClockConfig+0x16e>
 80021fc:	4b19      	ldr	r3, [pc, #100]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 80021fe:	685b      	ldr	r3, [r3, #4]
 8002200:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	68db      	ldr	r3, [r3, #12]
 8002208:	4916      	ldr	r1, [pc, #88]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 800220a:	4313      	orrs	r3, r2
 800220c:	604b      	str	r3, [r1, #4]
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	f003 0308 	and.w	r3, r3, #8
 8002216:	2b00      	cmp	r3, #0
 8002218:	d009      	beq.n	800222e <HAL_RCC_ClockConfig+0x18e>
 800221a:	4b12      	ldr	r3, [pc, #72]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 800221c:	685b      	ldr	r3, [r3, #4]
 800221e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	691b      	ldr	r3, [r3, #16]
 8002226:	00db      	lsls	r3, r3, #3
 8002228:	490e      	ldr	r1, [pc, #56]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 800222a:	4313      	orrs	r3, r2
 800222c:	604b      	str	r3, [r1, #4]
 800222e:	f000 f821 	bl	8002274 <HAL_RCC_GetSysClockFreq>
 8002232:	4602      	mov	r2, r0
 8002234:	4b0b      	ldr	r3, [pc, #44]	; (8002264 <HAL_RCC_ClockConfig+0x1c4>)
 8002236:	685b      	ldr	r3, [r3, #4]
 8002238:	091b      	lsrs	r3, r3, #4
 800223a:	f003 030f 	and.w	r3, r3, #15
 800223e:	490a      	ldr	r1, [pc, #40]	; (8002268 <HAL_RCC_ClockConfig+0x1c8>)
 8002240:	5ccb      	ldrb	r3, [r1, r3]
 8002242:	fa22 f303 	lsr.w	r3, r2, r3
 8002246:	4a09      	ldr	r2, [pc, #36]	; (800226c <HAL_RCC_ClockConfig+0x1cc>)
 8002248:	6013      	str	r3, [r2, #0]
 800224a:	4b09      	ldr	r3, [pc, #36]	; (8002270 <HAL_RCC_ClockConfig+0x1d0>)
 800224c:	681b      	ldr	r3, [r3, #0]
 800224e:	4618      	mov	r0, r3
 8002250:	f7ff f990 	bl	8001574 <HAL_InitTick>
 8002254:	2300      	movs	r3, #0
 8002256:	4618      	mov	r0, r3
 8002258:	3710      	adds	r7, #16
 800225a:	46bd      	mov	sp, r7
 800225c:	bd80      	pop	{r7, pc}
 800225e:	bf00      	nop
 8002260:	40022000 	.word	0x40022000
 8002264:	40021000 	.word	0x40021000
 8002268:	08004ec8 	.word	0x08004ec8
 800226c:	20000044 	.word	0x20000044
 8002270:	20000048 	.word	0x20000048

08002274 <HAL_RCC_GetSysClockFreq>:
 8002274:	b480      	push	{r7}
 8002276:	b087      	sub	sp, #28
 8002278:	af00      	add	r7, sp, #0
 800227a:	2300      	movs	r3, #0
 800227c:	60fb      	str	r3, [r7, #12]
 800227e:	2300      	movs	r3, #0
 8002280:	60bb      	str	r3, [r7, #8]
 8002282:	2300      	movs	r3, #0
 8002284:	617b      	str	r3, [r7, #20]
 8002286:	2300      	movs	r3, #0
 8002288:	607b      	str	r3, [r7, #4]
 800228a:	2300      	movs	r3, #0
 800228c:	613b      	str	r3, [r7, #16]
 800228e:	4b1e      	ldr	r3, [pc, #120]	; (8002308 <HAL_RCC_GetSysClockFreq+0x94>)
 8002290:	685b      	ldr	r3, [r3, #4]
 8002292:	60fb      	str	r3, [r7, #12]
 8002294:	68fb      	ldr	r3, [r7, #12]
 8002296:	f003 030c 	and.w	r3, r3, #12
 800229a:	2b04      	cmp	r3, #4
 800229c:	d002      	beq.n	80022a4 <HAL_RCC_GetSysClockFreq+0x30>
 800229e:	2b08      	cmp	r3, #8
 80022a0:	d003      	beq.n	80022aa <HAL_RCC_GetSysClockFreq+0x36>
 80022a2:	e027      	b.n	80022f4 <HAL_RCC_GetSysClockFreq+0x80>
 80022a4:	4b19      	ldr	r3, [pc, #100]	; (800230c <HAL_RCC_GetSysClockFreq+0x98>)
 80022a6:	613b      	str	r3, [r7, #16]
 80022a8:	e027      	b.n	80022fa <HAL_RCC_GetSysClockFreq+0x86>
 80022aa:	68fb      	ldr	r3, [r7, #12]
 80022ac:	0c9b      	lsrs	r3, r3, #18
 80022ae:	f003 030f 	and.w	r3, r3, #15
 80022b2:	4a17      	ldr	r2, [pc, #92]	; (8002310 <HAL_RCC_GetSysClockFreq+0x9c>)
 80022b4:	5cd3      	ldrb	r3, [r2, r3]
 80022b6:	607b      	str	r3, [r7, #4]
 80022b8:	68fb      	ldr	r3, [r7, #12]
 80022ba:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80022be:	2b00      	cmp	r3, #0
 80022c0:	d010      	beq.n	80022e4 <HAL_RCC_GetSysClockFreq+0x70>
 80022c2:	4b11      	ldr	r3, [pc, #68]	; (8002308 <HAL_RCC_GetSysClockFreq+0x94>)
 80022c4:	685b      	ldr	r3, [r3, #4]
 80022c6:	0c5b      	lsrs	r3, r3, #17
 80022c8:	f003 0301 	and.w	r3, r3, #1
 80022cc:	4a11      	ldr	r2, [pc, #68]	; (8002314 <HAL_RCC_GetSysClockFreq+0xa0>)
 80022ce:	5cd3      	ldrb	r3, [r2, r3]
 80022d0:	60bb      	str	r3, [r7, #8]
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	4a0d      	ldr	r2, [pc, #52]	; (800230c <HAL_RCC_GetSysClockFreq+0x98>)
 80022d6:	fb03 f202 	mul.w	r2, r3, r2
 80022da:	68bb      	ldr	r3, [r7, #8]
 80022dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80022e0:	617b      	str	r3, [r7, #20]
 80022e2:	e004      	b.n	80022ee <HAL_RCC_GetSysClockFreq+0x7a>
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	4a0c      	ldr	r2, [pc, #48]	; (8002318 <HAL_RCC_GetSysClockFreq+0xa4>)
 80022e8:	fb02 f303 	mul.w	r3, r2, r3
 80022ec:	617b      	str	r3, [r7, #20]
 80022ee:	697b      	ldr	r3, [r7, #20]
 80022f0:	613b      	str	r3, [r7, #16]
 80022f2:	e002      	b.n	80022fa <HAL_RCC_GetSysClockFreq+0x86>
 80022f4:	4b05      	ldr	r3, [pc, #20]	; (800230c <HAL_RCC_GetSysClockFreq+0x98>)
 80022f6:	613b      	str	r3, [r7, #16]
 80022f8:	bf00      	nop
 80022fa:	693b      	ldr	r3, [r7, #16]
 80022fc:	4618      	mov	r0, r3
 80022fe:	371c      	adds	r7, #28
 8002300:	46bd      	mov	sp, r7
 8002302:	bc80      	pop	{r7}
 8002304:	4770      	bx	lr
 8002306:	bf00      	nop
 8002308:	40021000 	.word	0x40021000
 800230c:	007a1200 	.word	0x007a1200
 8002310:	08004ee0 	.word	0x08004ee0
 8002314:	08004ef0 	.word	0x08004ef0
 8002318:	003d0900 	.word	0x003d0900

0800231c <HAL_RCC_GetHCLKFreq>:
 800231c:	b480      	push	{r7}
 800231e:	af00      	add	r7, sp, #0
 8002320:	4b02      	ldr	r3, [pc, #8]	; (800232c <HAL_RCC_GetHCLKFreq+0x10>)
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	4618      	mov	r0, r3
 8002326:	46bd      	mov	sp, r7
 8002328:	bc80      	pop	{r7}
 800232a:	4770      	bx	lr
 800232c:	20000044 	.word	0x20000044

08002330 <HAL_RCC_GetPCLK1Freq>:
 8002330:	b580      	push	{r7, lr}
 8002332:	af00      	add	r7, sp, #0
 8002334:	f7ff fff2 	bl	800231c <HAL_RCC_GetHCLKFreq>
 8002338:	4602      	mov	r2, r0
 800233a:	4b05      	ldr	r3, [pc, #20]	; (8002350 <HAL_RCC_GetPCLK1Freq+0x20>)
 800233c:	685b      	ldr	r3, [r3, #4]
 800233e:	0a1b      	lsrs	r3, r3, #8
 8002340:	f003 0307 	and.w	r3, r3, #7
 8002344:	4903      	ldr	r1, [pc, #12]	; (8002354 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002346:	5ccb      	ldrb	r3, [r1, r3]
 8002348:	fa22 f303 	lsr.w	r3, r2, r3
 800234c:	4618      	mov	r0, r3
 800234e:	bd80      	pop	{r7, pc}
 8002350:	40021000 	.word	0x40021000
 8002354:	08004ed8 	.word	0x08004ed8

08002358 <HAL_RCC_GetPCLK2Freq>:
 8002358:	b580      	push	{r7, lr}
 800235a:	af00      	add	r7, sp, #0
 800235c:	f7ff ffde 	bl	800231c <HAL_RCC_GetHCLKFreq>
 8002360:	4602      	mov	r2, r0
 8002362:	4b05      	ldr	r3, [pc, #20]	; (8002378 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002364:	685b      	ldr	r3, [r3, #4]
 8002366:	0adb      	lsrs	r3, r3, #11
 8002368:	f003 0307 	and.w	r3, r3, #7
 800236c:	4903      	ldr	r1, [pc, #12]	; (800237c <HAL_RCC_GetPCLK2Freq+0x24>)
 800236e:	5ccb      	ldrb	r3, [r1, r3]
 8002370:	fa22 f303 	lsr.w	r3, r2, r3
 8002374:	4618      	mov	r0, r3
 8002376:	bd80      	pop	{r7, pc}
 8002378:	40021000 	.word	0x40021000
 800237c:	08004ed8 	.word	0x08004ed8

08002380 <RCC_Delay>:
 8002380:	b480      	push	{r7}
 8002382:	b085      	sub	sp, #20
 8002384:	af00      	add	r7, sp, #0
 8002386:	6078      	str	r0, [r7, #4]
 8002388:	4b0a      	ldr	r3, [pc, #40]	; (80023b4 <RCC_Delay+0x34>)
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	4a0a      	ldr	r2, [pc, #40]	; (80023b8 <RCC_Delay+0x38>)
 800238e:	fba2 2303 	umull	r2, r3, r2, r3
 8002392:	0a5b      	lsrs	r3, r3, #9
 8002394:	687a      	ldr	r2, [r7, #4]
 8002396:	fb02 f303 	mul.w	r3, r2, r3
 800239a:	60fb      	str	r3, [r7, #12]
 800239c:	bf00      	nop
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	1e5a      	subs	r2, r3, #1
 80023a2:	60fa      	str	r2, [r7, #12]
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	d1f9      	bne.n	800239c <RCC_Delay+0x1c>
 80023a8:	bf00      	nop
 80023aa:	bf00      	nop
 80023ac:	3714      	adds	r7, #20
 80023ae:	46bd      	mov	sp, r7
 80023b0:	bc80      	pop	{r7}
 80023b2:	4770      	bx	lr
 80023b4:	20000044 	.word	0x20000044
 80023b8:	10624dd3 	.word	0x10624dd3

080023bc <HAL_RCCEx_PeriphCLKConfig>:
 80023bc:	b580      	push	{r7, lr}
 80023be:	b086      	sub	sp, #24
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	2300      	movs	r3, #0
 80023c6:	613b      	str	r3, [r7, #16]
 80023c8:	2300      	movs	r3, #0
 80023ca:	60fb      	str	r3, [r7, #12]
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	681b      	ldr	r3, [r3, #0]
 80023d0:	f003 0301 	and.w	r3, r3, #1
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d07d      	beq.n	80024d4 <HAL_RCCEx_PeriphCLKConfig+0x118>
 80023d8:	2300      	movs	r3, #0
 80023da:	75fb      	strb	r3, [r7, #23]
 80023dc:	4b4f      	ldr	r3, [pc, #316]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80023de:	69db      	ldr	r3, [r3, #28]
 80023e0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	d10d      	bne.n	8002404 <HAL_RCCEx_PeriphCLKConfig+0x48>
 80023e8:	4b4c      	ldr	r3, [pc, #304]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80023ea:	69db      	ldr	r3, [r3, #28]
 80023ec:	4a4b      	ldr	r2, [pc, #300]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80023ee:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80023f2:	61d3      	str	r3, [r2, #28]
 80023f4:	4b49      	ldr	r3, [pc, #292]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80023f6:	69db      	ldr	r3, [r3, #28]
 80023f8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80023fc:	60bb      	str	r3, [r7, #8]
 80023fe:	68bb      	ldr	r3, [r7, #8]
 8002400:	2301      	movs	r3, #1
 8002402:	75fb      	strb	r3, [r7, #23]
 8002404:	4b46      	ldr	r3, [pc, #280]	; (8002520 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002406:	681b      	ldr	r3, [r3, #0]
 8002408:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800240c:	2b00      	cmp	r3, #0
 800240e:	d118      	bne.n	8002442 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8002410:	4b43      	ldr	r3, [pc, #268]	; (8002520 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	4a42      	ldr	r2, [pc, #264]	; (8002520 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002416:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800241a:	6013      	str	r3, [r2, #0]
 800241c:	f7ff f8ec 	bl	80015f8 <HAL_GetTick>
 8002420:	6138      	str	r0, [r7, #16]
 8002422:	e008      	b.n	8002436 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8002424:	f7ff f8e8 	bl	80015f8 <HAL_GetTick>
 8002428:	4602      	mov	r2, r0
 800242a:	693b      	ldr	r3, [r7, #16]
 800242c:	1ad3      	subs	r3, r2, r3
 800242e:	2b64      	cmp	r3, #100	; 0x64
 8002430:	d901      	bls.n	8002436 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8002432:	2303      	movs	r3, #3
 8002434:	e06d      	b.n	8002512 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8002436:	4b3a      	ldr	r3, [pc, #232]	; (8002520 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002438:	681b      	ldr	r3, [r3, #0]
 800243a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800243e:	2b00      	cmp	r3, #0
 8002440:	d0f0      	beq.n	8002424 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8002442:	4b36      	ldr	r3, [pc, #216]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002444:	6a1b      	ldr	r3, [r3, #32]
 8002446:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800244a:	60fb      	str	r3, [r7, #12]
 800244c:	68fb      	ldr	r3, [r7, #12]
 800244e:	2b00      	cmp	r3, #0
 8002450:	d02e      	beq.n	80024b0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	685b      	ldr	r3, [r3, #4]
 8002456:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800245a:	68fa      	ldr	r2, [r7, #12]
 800245c:	429a      	cmp	r2, r3
 800245e:	d027      	beq.n	80024b0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8002460:	4b2e      	ldr	r3, [pc, #184]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002462:	6a1b      	ldr	r3, [r3, #32]
 8002464:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002468:	60fb      	str	r3, [r7, #12]
 800246a:	4b2e      	ldr	r3, [pc, #184]	; (8002524 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 800246c:	2201      	movs	r2, #1
 800246e:	601a      	str	r2, [r3, #0]
 8002470:	4b2c      	ldr	r3, [pc, #176]	; (8002524 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8002472:	2200      	movs	r2, #0
 8002474:	601a      	str	r2, [r3, #0]
 8002476:	4a29      	ldr	r2, [pc, #164]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	6213      	str	r3, [r2, #32]
 800247c:	68fb      	ldr	r3, [r7, #12]
 800247e:	f003 0301 	and.w	r3, r3, #1
 8002482:	2b00      	cmp	r3, #0
 8002484:	d014      	beq.n	80024b0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8002486:	f7ff f8b7 	bl	80015f8 <HAL_GetTick>
 800248a:	6138      	str	r0, [r7, #16]
 800248c:	e00a      	b.n	80024a4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 800248e:	f7ff f8b3 	bl	80015f8 <HAL_GetTick>
 8002492:	4602      	mov	r2, r0
 8002494:	693b      	ldr	r3, [r7, #16]
 8002496:	1ad3      	subs	r3, r2, r3
 8002498:	f241 3288 	movw	r2, #5000	; 0x1388
 800249c:	4293      	cmp	r3, r2
 800249e:	d901      	bls.n	80024a4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80024a0:	2303      	movs	r3, #3
 80024a2:	e036      	b.n	8002512 <HAL_RCCEx_PeriphCLKConfig+0x156>
 80024a4:	4b1d      	ldr	r3, [pc, #116]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80024a6:	6a1b      	ldr	r3, [r3, #32]
 80024a8:	f003 0302 	and.w	r3, r3, #2
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	d0ee      	beq.n	800248e <HAL_RCCEx_PeriphCLKConfig+0xd2>
 80024b0:	4b1a      	ldr	r3, [pc, #104]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80024b2:	6a1b      	ldr	r3, [r3, #32]
 80024b4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	685b      	ldr	r3, [r3, #4]
 80024bc:	4917      	ldr	r1, [pc, #92]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80024be:	4313      	orrs	r3, r2
 80024c0:	620b      	str	r3, [r1, #32]
 80024c2:	7dfb      	ldrb	r3, [r7, #23]
 80024c4:	2b01      	cmp	r3, #1
 80024c6:	d105      	bne.n	80024d4 <HAL_RCCEx_PeriphCLKConfig+0x118>
 80024c8:	4b14      	ldr	r3, [pc, #80]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80024ca:	69db      	ldr	r3, [r3, #28]
 80024cc:	4a13      	ldr	r2, [pc, #76]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80024ce:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80024d2:	61d3      	str	r3, [r2, #28]
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	f003 0302 	and.w	r3, r3, #2
 80024dc:	2b00      	cmp	r3, #0
 80024de:	d008      	beq.n	80024f2 <HAL_RCCEx_PeriphCLKConfig+0x136>
 80024e0:	4b0e      	ldr	r3, [pc, #56]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80024e2:	685b      	ldr	r3, [r3, #4]
 80024e4:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	689b      	ldr	r3, [r3, #8]
 80024ec:	490b      	ldr	r1, [pc, #44]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80024ee:	4313      	orrs	r3, r2
 80024f0:	604b      	str	r3, [r1, #4]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f003 0310 	and.w	r3, r3, #16
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d008      	beq.n	8002510 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80024fe:	4b07      	ldr	r3, [pc, #28]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002500:	685b      	ldr	r3, [r3, #4]
 8002502:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	68db      	ldr	r3, [r3, #12]
 800250a:	4904      	ldr	r1, [pc, #16]	; (800251c <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800250c:	4313      	orrs	r3, r2
 800250e:	604b      	str	r3, [r1, #4]
 8002510:	2300      	movs	r3, #0
 8002512:	4618      	mov	r0, r3
 8002514:	3718      	adds	r7, #24
 8002516:	46bd      	mov	sp, r7
 8002518:	bd80      	pop	{r7, pc}
 800251a:	bf00      	nop
 800251c:	40021000 	.word	0x40021000
 8002520:	40007000 	.word	0x40007000
 8002524:	42420440 	.word	0x42420440

08002528 <HAL_RCCEx_GetPeriphCLKFreq>:
 8002528:	b580      	push	{r7, lr}
 800252a:	b088      	sub	sp, #32
 800252c:	af00      	add	r7, sp, #0
 800252e:	6078      	str	r0, [r7, #4]
 8002530:	2300      	movs	r3, #0
 8002532:	617b      	str	r3, [r7, #20]
 8002534:	2300      	movs	r3, #0
 8002536:	61fb      	str	r3, [r7, #28]
 8002538:	2300      	movs	r3, #0
 800253a:	613b      	str	r3, [r7, #16]
 800253c:	2300      	movs	r3, #0
 800253e:	60fb      	str	r3, [r7, #12]
 8002540:	2300      	movs	r3, #0
 8002542:	61bb      	str	r3, [r7, #24]
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	2b10      	cmp	r3, #16
 8002548:	d00a      	beq.n	8002560 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	2b10      	cmp	r3, #16
 800254e:	f200 808a 	bhi.w	8002666 <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	2b01      	cmp	r3, #1
 8002556:	d045      	beq.n	80025e4 <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	2b02      	cmp	r3, #2
 800255c:	d075      	beq.n	800264a <HAL_RCCEx_GetPeriphCLKFreq+0x122>
 800255e:	e082      	b.n	8002666 <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8002560:	4b46      	ldr	r3, [pc, #280]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8002562:	685b      	ldr	r3, [r3, #4]
 8002564:	60fb      	str	r3, [r7, #12]
 8002566:	4b45      	ldr	r3, [pc, #276]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800256e:	2b00      	cmp	r3, #0
 8002570:	d07b      	beq.n	800266a <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8002572:	68fb      	ldr	r3, [r7, #12]
 8002574:	0c9b      	lsrs	r3, r3, #18
 8002576:	f003 030f 	and.w	r3, r3, #15
 800257a:	4a41      	ldr	r2, [pc, #260]	; (8002680 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 800257c:	5cd3      	ldrb	r3, [r2, r3]
 800257e:	613b      	str	r3, [r7, #16]
 8002580:	68fb      	ldr	r3, [r7, #12]
 8002582:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002586:	2b00      	cmp	r3, #0
 8002588:	d015      	beq.n	80025b6 <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 800258a:	4b3c      	ldr	r3, [pc, #240]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 800258c:	685b      	ldr	r3, [r3, #4]
 800258e:	0c5b      	lsrs	r3, r3, #17
 8002590:	f003 0301 	and.w	r3, r3, #1
 8002594:	4a3b      	ldr	r2, [pc, #236]	; (8002684 <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 8002596:	5cd3      	ldrb	r3, [r2, r3]
 8002598:	617b      	str	r3, [r7, #20]
 800259a:	68fb      	ldr	r3, [r7, #12]
 800259c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d00d      	beq.n	80025c0 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 80025a4:	4a38      	ldr	r2, [pc, #224]	; (8002688 <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 80025a6:	697b      	ldr	r3, [r7, #20]
 80025a8:	fbb2 f2f3 	udiv	r2, r2, r3
 80025ac:	693b      	ldr	r3, [r7, #16]
 80025ae:	fb02 f303 	mul.w	r3, r2, r3
 80025b2:	61fb      	str	r3, [r7, #28]
 80025b4:	e004      	b.n	80025c0 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 80025b6:	693b      	ldr	r3, [r7, #16]
 80025b8:	4a34      	ldr	r2, [pc, #208]	; (800268c <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 80025ba:	fb02 f303 	mul.w	r3, r2, r3
 80025be:	61fb      	str	r3, [r7, #28]
 80025c0:	4b2e      	ldr	r3, [pc, #184]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 80025c2:	685b      	ldr	r3, [r3, #4]
 80025c4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80025c8:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80025cc:	d102      	bne.n	80025d4 <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 80025ce:	69fb      	ldr	r3, [r7, #28]
 80025d0:	61bb      	str	r3, [r7, #24]
 80025d2:	e04a      	b.n	800266a <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 80025d4:	69fb      	ldr	r3, [r7, #28]
 80025d6:	005b      	lsls	r3, r3, #1
 80025d8:	4a2d      	ldr	r2, [pc, #180]	; (8002690 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 80025da:	fba2 2303 	umull	r2, r3, r2, r3
 80025de:	085b      	lsrs	r3, r3, #1
 80025e0:	61bb      	str	r3, [r7, #24]
 80025e2:	e042      	b.n	800266a <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 80025e4:	4b25      	ldr	r3, [pc, #148]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 80025e6:	6a1b      	ldr	r3, [r3, #32]
 80025e8:	60fb      	str	r3, [r7, #12]
 80025ea:	68fb      	ldr	r3, [r7, #12]
 80025ec:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80025f0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80025f4:	d108      	bne.n	8002608 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 80025f6:	68fb      	ldr	r3, [r7, #12]
 80025f8:	f003 0302 	and.w	r3, r3, #2
 80025fc:	2b00      	cmp	r3, #0
 80025fe:	d003      	beq.n	8002608 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8002600:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002604:	61bb      	str	r3, [r7, #24]
 8002606:	e01f      	b.n	8002648 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8002608:	68fb      	ldr	r3, [r7, #12]
 800260a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800260e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002612:	d109      	bne.n	8002628 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8002614:	4b19      	ldr	r3, [pc, #100]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8002616:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002618:	f003 0302 	and.w	r3, r3, #2
 800261c:	2b00      	cmp	r3, #0
 800261e:	d003      	beq.n	8002628 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8002620:	f649 4340 	movw	r3, #40000	; 0x9c40
 8002624:	61bb      	str	r3, [r7, #24]
 8002626:	e00f      	b.n	8002648 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8002628:	68fb      	ldr	r3, [r7, #12]
 800262a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800262e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8002632:	d11c      	bne.n	800266e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8002634:	4b11      	ldr	r3, [pc, #68]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800263c:	2b00      	cmp	r3, #0
 800263e:	d016      	beq.n	800266e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8002640:	f24f 4324 	movw	r3, #62500	; 0xf424
 8002644:	61bb      	str	r3, [r7, #24]
 8002646:	e012      	b.n	800266e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8002648:	e011      	b.n	800266e <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 800264a:	f7ff fe85 	bl	8002358 <HAL_RCC_GetPCLK2Freq>
 800264e:	4602      	mov	r2, r0
 8002650:	4b0a      	ldr	r3, [pc, #40]	; (800267c <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8002652:	685b      	ldr	r3, [r3, #4]
 8002654:	0b9b      	lsrs	r3, r3, #14
 8002656:	f003 0303 	and.w	r3, r3, #3
 800265a:	3301      	adds	r3, #1
 800265c:	005b      	lsls	r3, r3, #1
 800265e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002662:	61bb      	str	r3, [r7, #24]
 8002664:	e004      	b.n	8002670 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8002666:	bf00      	nop
 8002668:	e002      	b.n	8002670 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 800266a:	bf00      	nop
 800266c:	e000      	b.n	8002670 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 800266e:	bf00      	nop
 8002670:	69bb      	ldr	r3, [r7, #24]
 8002672:	4618      	mov	r0, r3
 8002674:	3720      	adds	r7, #32
 8002676:	46bd      	mov	sp, r7
 8002678:	bd80      	pop	{r7, pc}
 800267a:	bf00      	nop
 800267c:	40021000 	.word	0x40021000
 8002680:	08004ef4 	.word	0x08004ef4
 8002684:	08004f04 	.word	0x08004f04
 8002688:	007a1200 	.word	0x007a1200
 800268c:	003d0900 	.word	0x003d0900
 8002690:	aaaaaaab 	.word	0xaaaaaaab

08002694 <HAL_RTC_Init>:
 8002694:	b580      	push	{r7, lr}
 8002696:	b084      	sub	sp, #16
 8002698:	af00      	add	r7, sp, #0
 800269a:	6078      	str	r0, [r7, #4]
 800269c:	2300      	movs	r3, #0
 800269e:	60fb      	str	r3, [r7, #12]
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	2b00      	cmp	r3, #0
 80026a4:	d101      	bne.n	80026aa <HAL_RTC_Init+0x16>
 80026a6:	2301      	movs	r3, #1
 80026a8:	e07a      	b.n	80027a0 <HAL_RTC_Init+0x10c>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	7c5b      	ldrb	r3, [r3, #17]
 80026ae:	b2db      	uxtb	r3, r3
 80026b0:	2b00      	cmp	r3, #0
 80026b2:	d105      	bne.n	80026c0 <HAL_RTC_Init+0x2c>
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	2200      	movs	r2, #0
 80026b8:	741a      	strb	r2, [r3, #16]
 80026ba:	6878      	ldr	r0, [r7, #4]
 80026bc:	f7fe fcec 	bl	8001098 <HAL_RTC_MspInit>
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	2202      	movs	r2, #2
 80026c4:	745a      	strb	r2, [r3, #17]
 80026c6:	6878      	ldr	r0, [r7, #4]
 80026c8:	f000 f870 	bl	80027ac <HAL_RTC_WaitForSynchro>
 80026cc:	4603      	mov	r3, r0
 80026ce:	2b00      	cmp	r3, #0
 80026d0:	d004      	beq.n	80026dc <HAL_RTC_Init+0x48>
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	2204      	movs	r2, #4
 80026d6:	745a      	strb	r2, [r3, #17]
 80026d8:	2301      	movs	r3, #1
 80026da:	e061      	b.n	80027a0 <HAL_RTC_Init+0x10c>
 80026dc:	6878      	ldr	r0, [r7, #4]
 80026de:	f000 f892 	bl	8002806 <RTC_EnterInitMode>
 80026e2:	4603      	mov	r3, r0
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d004      	beq.n	80026f2 <HAL_RTC_Init+0x5e>
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	2204      	movs	r2, #4
 80026ec:	745a      	strb	r2, [r3, #17]
 80026ee:	2301      	movs	r3, #1
 80026f0:	e056      	b.n	80027a0 <HAL_RTC_Init+0x10c>
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	685a      	ldr	r2, [r3, #4]
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	f022 0207 	bic.w	r2, r2, #7
 8002700:	605a      	str	r2, [r3, #4]
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	689b      	ldr	r3, [r3, #8]
 8002706:	2b00      	cmp	r3, #0
 8002708:	d005      	beq.n	8002716 <HAL_RTC_Init+0x82>
 800270a:	4b27      	ldr	r3, [pc, #156]	; (80027a8 <HAL_RTC_Init+0x114>)
 800270c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800270e:	4a26      	ldr	r2, [pc, #152]	; (80027a8 <HAL_RTC_Init+0x114>)
 8002710:	f023 0301 	bic.w	r3, r3, #1
 8002714:	6313      	str	r3, [r2, #48]	; 0x30
 8002716:	4b24      	ldr	r3, [pc, #144]	; (80027a8 <HAL_RTC_Init+0x114>)
 8002718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800271a:	f423 7260 	bic.w	r2, r3, #896	; 0x380
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	689b      	ldr	r3, [r3, #8]
 8002722:	4921      	ldr	r1, [pc, #132]	; (80027a8 <HAL_RTC_Init+0x114>)
 8002724:	4313      	orrs	r3, r2
 8002726:	62cb      	str	r3, [r1, #44]	; 0x2c
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	685b      	ldr	r3, [r3, #4]
 800272c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002730:	d003      	beq.n	800273a <HAL_RTC_Init+0xa6>
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	685b      	ldr	r3, [r3, #4]
 8002736:	60fb      	str	r3, [r7, #12]
 8002738:	e00e      	b.n	8002758 <HAL_RTC_Init+0xc4>
 800273a:	2001      	movs	r0, #1
 800273c:	f7ff fef4 	bl	8002528 <HAL_RCCEx_GetPeriphCLKFreq>
 8002740:	60f8      	str	r0, [r7, #12]
 8002742:	68fb      	ldr	r3, [r7, #12]
 8002744:	2b00      	cmp	r3, #0
 8002746:	d104      	bne.n	8002752 <HAL_RTC_Init+0xbe>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	2204      	movs	r2, #4
 800274c:	745a      	strb	r2, [r3, #17]
 800274e:	2301      	movs	r3, #1
 8002750:	e026      	b.n	80027a0 <HAL_RTC_Init+0x10c>
 8002752:	68fb      	ldr	r3, [r7, #12]
 8002754:	3b01      	subs	r3, #1
 8002756:	60fb      	str	r3, [r7, #12]
 8002758:	68fb      	ldr	r3, [r7, #12]
 800275a:	0c1a      	lsrs	r2, r3, #16
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	f002 020f 	and.w	r2, r2, #15
 8002764:	609a      	str	r2, [r3, #8]
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	68fa      	ldr	r2, [r7, #12]
 800276c:	b292      	uxth	r2, r2
 800276e:	60da      	str	r2, [r3, #12]
 8002770:	6878      	ldr	r0, [r7, #4]
 8002772:	f000 f870 	bl	8002856 <RTC_ExitInitMode>
 8002776:	4603      	mov	r3, r0
 8002778:	2b00      	cmp	r3, #0
 800277a:	d004      	beq.n	8002786 <HAL_RTC_Init+0xf2>
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	2204      	movs	r2, #4
 8002780:	745a      	strb	r2, [r3, #17]
 8002782:	2301      	movs	r3, #1
 8002784:	e00c      	b.n	80027a0 <HAL_RTC_Init+0x10c>
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	2200      	movs	r2, #0
 800278a:	73da      	strb	r2, [r3, #15]
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	2201      	movs	r2, #1
 8002790:	735a      	strb	r2, [r3, #13]
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	2201      	movs	r2, #1
 8002796:	739a      	strb	r2, [r3, #14]
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	2201      	movs	r2, #1
 800279c:	745a      	strb	r2, [r3, #17]
 800279e:	2300      	movs	r3, #0
 80027a0:	4618      	mov	r0, r3
 80027a2:	3710      	adds	r7, #16
 80027a4:	46bd      	mov	sp, r7
 80027a6:	bd80      	pop	{r7, pc}
 80027a8:	40006c00 	.word	0x40006c00

080027ac <HAL_RTC_WaitForSynchro>:
 80027ac:	b580      	push	{r7, lr}
 80027ae:	b084      	sub	sp, #16
 80027b0:	af00      	add	r7, sp, #0
 80027b2:	6078      	str	r0, [r7, #4]
 80027b4:	2300      	movs	r3, #0
 80027b6:	60fb      	str	r3, [r7, #12]
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d101      	bne.n	80027c2 <HAL_RTC_WaitForSynchro+0x16>
 80027be:	2301      	movs	r3, #1
 80027c0:	e01d      	b.n	80027fe <HAL_RTC_WaitForSynchro+0x52>
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	685a      	ldr	r2, [r3, #4]
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	f022 0208 	bic.w	r2, r2, #8
 80027d0:	605a      	str	r2, [r3, #4]
 80027d2:	f7fe ff11 	bl	80015f8 <HAL_GetTick>
 80027d6:	60f8      	str	r0, [r7, #12]
 80027d8:	e009      	b.n	80027ee <HAL_RTC_WaitForSynchro+0x42>
 80027da:	f7fe ff0d 	bl	80015f8 <HAL_GetTick>
 80027de:	4602      	mov	r2, r0
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	1ad3      	subs	r3, r2, r3
 80027e4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80027e8:	d901      	bls.n	80027ee <HAL_RTC_WaitForSynchro+0x42>
 80027ea:	2303      	movs	r3, #3
 80027ec:	e007      	b.n	80027fe <HAL_RTC_WaitForSynchro+0x52>
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	685b      	ldr	r3, [r3, #4]
 80027f4:	f003 0308 	and.w	r3, r3, #8
 80027f8:	2b00      	cmp	r3, #0
 80027fa:	d0ee      	beq.n	80027da <HAL_RTC_WaitForSynchro+0x2e>
 80027fc:	2300      	movs	r3, #0
 80027fe:	4618      	mov	r0, r3
 8002800:	3710      	adds	r7, #16
 8002802:	46bd      	mov	sp, r7
 8002804:	bd80      	pop	{r7, pc}

08002806 <RTC_EnterInitMode>:
 8002806:	b580      	push	{r7, lr}
 8002808:	b084      	sub	sp, #16
 800280a:	af00      	add	r7, sp, #0
 800280c:	6078      	str	r0, [r7, #4]
 800280e:	2300      	movs	r3, #0
 8002810:	60fb      	str	r3, [r7, #12]
 8002812:	f7fe fef1 	bl	80015f8 <HAL_GetTick>
 8002816:	60f8      	str	r0, [r7, #12]
 8002818:	e009      	b.n	800282e <RTC_EnterInitMode+0x28>
 800281a:	f7fe feed 	bl	80015f8 <HAL_GetTick>
 800281e:	4602      	mov	r2, r0
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	1ad3      	subs	r3, r2, r3
 8002824:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002828:	d901      	bls.n	800282e <RTC_EnterInitMode+0x28>
 800282a:	2303      	movs	r3, #3
 800282c:	e00f      	b.n	800284e <RTC_EnterInitMode+0x48>
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	681b      	ldr	r3, [r3, #0]
 8002832:	685b      	ldr	r3, [r3, #4]
 8002834:	f003 0320 	and.w	r3, r3, #32
 8002838:	2b00      	cmp	r3, #0
 800283a:	d0ee      	beq.n	800281a <RTC_EnterInitMode+0x14>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	685a      	ldr	r2, [r3, #4]
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	f042 0210 	orr.w	r2, r2, #16
 800284a:	605a      	str	r2, [r3, #4]
 800284c:	2300      	movs	r3, #0
 800284e:	4618      	mov	r0, r3
 8002850:	3710      	adds	r7, #16
 8002852:	46bd      	mov	sp, r7
 8002854:	bd80      	pop	{r7, pc}

08002856 <RTC_ExitInitMode>:
 8002856:	b580      	push	{r7, lr}
 8002858:	b084      	sub	sp, #16
 800285a:	af00      	add	r7, sp, #0
 800285c:	6078      	str	r0, [r7, #4]
 800285e:	2300      	movs	r3, #0
 8002860:	60fb      	str	r3, [r7, #12]
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	685a      	ldr	r2, [r3, #4]
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	f022 0210 	bic.w	r2, r2, #16
 8002870:	605a      	str	r2, [r3, #4]
 8002872:	f7fe fec1 	bl	80015f8 <HAL_GetTick>
 8002876:	60f8      	str	r0, [r7, #12]
 8002878:	e009      	b.n	800288e <RTC_ExitInitMode+0x38>
 800287a:	f7fe febd 	bl	80015f8 <HAL_GetTick>
 800287e:	4602      	mov	r2, r0
 8002880:	68fb      	ldr	r3, [r7, #12]
 8002882:	1ad3      	subs	r3, r2, r3
 8002884:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002888:	d901      	bls.n	800288e <RTC_ExitInitMode+0x38>
 800288a:	2303      	movs	r3, #3
 800288c:	e007      	b.n	800289e <RTC_ExitInitMode+0x48>
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	685b      	ldr	r3, [r3, #4]
 8002894:	f003 0320 	and.w	r3, r3, #32
 8002898:	2b00      	cmp	r3, #0
 800289a:	d0ee      	beq.n	800287a <RTC_ExitInitMode+0x24>
 800289c:	2300      	movs	r3, #0
 800289e:	4618      	mov	r0, r3
 80028a0:	3710      	adds	r7, #16
 80028a2:	46bd      	mov	sp, r7
 80028a4:	bd80      	pop	{r7, pc}

080028a6 <HAL_SPI_Init>:
 80028a6:	b580      	push	{r7, lr}
 80028a8:	b082      	sub	sp, #8
 80028aa:	af00      	add	r7, sp, #0
 80028ac:	6078      	str	r0, [r7, #4]
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	d101      	bne.n	80028b8 <HAL_SPI_Init+0x12>
 80028b4:	2301      	movs	r3, #1
 80028b6:	e076      	b.n	80029a6 <HAL_SPI_Init+0x100>
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d108      	bne.n	80028d2 <HAL_SPI_Init+0x2c>
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	685b      	ldr	r3, [r3, #4]
 80028c4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80028c8:	d009      	beq.n	80028de <HAL_SPI_Init+0x38>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	2200      	movs	r2, #0
 80028ce:	61da      	str	r2, [r3, #28]
 80028d0:	e005      	b.n	80028de <HAL_SPI_Init+0x38>
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	2200      	movs	r2, #0
 80028d6:	611a      	str	r2, [r3, #16]
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	2200      	movs	r2, #0
 80028dc:	615a      	str	r2, [r3, #20]
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	2200      	movs	r2, #0
 80028e2:	629a      	str	r2, [r3, #40]	; 0x28
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80028ea:	b2db      	uxtb	r3, r3
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	d106      	bne.n	80028fe <HAL_SPI_Init+0x58>
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	2200      	movs	r2, #0
 80028f4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80028f8:	6878      	ldr	r0, [r7, #4]
 80028fa:	f7fe fbf1 	bl	80010e0 <HAL_SPI_MspInit>
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	2202      	movs	r2, #2
 8002902:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	681a      	ldr	r2, [r3, #0]
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002914:	601a      	str	r2, [r3, #0]
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	685b      	ldr	r3, [r3, #4]
 800291a:	f403 7282 	and.w	r2, r3, #260	; 0x104
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	689b      	ldr	r3, [r3, #8]
 8002922:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8002926:	431a      	orrs	r2, r3
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	68db      	ldr	r3, [r3, #12]
 800292c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002930:	431a      	orrs	r2, r3
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	691b      	ldr	r3, [r3, #16]
 8002936:	f003 0302 	and.w	r3, r3, #2
 800293a:	431a      	orrs	r2, r3
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	695b      	ldr	r3, [r3, #20]
 8002940:	f003 0301 	and.w	r3, r3, #1
 8002944:	431a      	orrs	r2, r3
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	699b      	ldr	r3, [r3, #24]
 800294a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800294e:	431a      	orrs	r2, r3
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	69db      	ldr	r3, [r3, #28]
 8002954:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002958:	431a      	orrs	r2, r3
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	6a1b      	ldr	r3, [r3, #32]
 800295e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002962:	ea42 0103 	orr.w	r1, r2, r3
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800296a:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	430a      	orrs	r2, r1
 8002974:	601a      	str	r2, [r3, #0]
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	699b      	ldr	r3, [r3, #24]
 800297a:	0c1a      	lsrs	r2, r3, #16
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	f002 0204 	and.w	r2, r2, #4
 8002984:	605a      	str	r2, [r3, #4]
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	69da      	ldr	r2, [r3, #28]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002994:	61da      	str	r2, [r3, #28]
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	2200      	movs	r2, #0
 800299a:	655a      	str	r2, [r3, #84]	; 0x54
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	2201      	movs	r2, #1
 80029a0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80029a4:	2300      	movs	r3, #0
 80029a6:	4618      	mov	r0, r3
 80029a8:	3708      	adds	r7, #8
 80029aa:	46bd      	mov	sp, r7
 80029ac:	bd80      	pop	{r7, pc}

080029ae <HAL_SPI_Transmit>:
 80029ae:	b580      	push	{r7, lr}
 80029b0:	b088      	sub	sp, #32
 80029b2:	af00      	add	r7, sp, #0
 80029b4:	60f8      	str	r0, [r7, #12]
 80029b6:	60b9      	str	r1, [r7, #8]
 80029b8:	603b      	str	r3, [r7, #0]
 80029ba:	4613      	mov	r3, r2
 80029bc:	80fb      	strh	r3, [r7, #6]
 80029be:	2300      	movs	r3, #0
 80029c0:	77fb      	strb	r3, [r7, #31]
 80029c2:	68fb      	ldr	r3, [r7, #12]
 80029c4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80029c8:	2b01      	cmp	r3, #1
 80029ca:	d101      	bne.n	80029d0 <HAL_SPI_Transmit+0x22>
 80029cc:	2302      	movs	r3, #2
 80029ce:	e12d      	b.n	8002c2c <HAL_SPI_Transmit+0x27e>
 80029d0:	68fb      	ldr	r3, [r7, #12]
 80029d2:	2201      	movs	r2, #1
 80029d4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80029d8:	f7fe fe0e 	bl	80015f8 <HAL_GetTick>
 80029dc:	61b8      	str	r0, [r7, #24]
 80029de:	88fb      	ldrh	r3, [r7, #6]
 80029e0:	82fb      	strh	r3, [r7, #22]
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80029e8:	b2db      	uxtb	r3, r3
 80029ea:	2b01      	cmp	r3, #1
 80029ec:	d002      	beq.n	80029f4 <HAL_SPI_Transmit+0x46>
 80029ee:	2302      	movs	r3, #2
 80029f0:	77fb      	strb	r3, [r7, #31]
 80029f2:	e116      	b.n	8002c22 <HAL_SPI_Transmit+0x274>
 80029f4:	68bb      	ldr	r3, [r7, #8]
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d002      	beq.n	8002a00 <HAL_SPI_Transmit+0x52>
 80029fa:	88fb      	ldrh	r3, [r7, #6]
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d102      	bne.n	8002a06 <HAL_SPI_Transmit+0x58>
 8002a00:	2301      	movs	r3, #1
 8002a02:	77fb      	strb	r3, [r7, #31]
 8002a04:	e10d      	b.n	8002c22 <HAL_SPI_Transmit+0x274>
 8002a06:	68fb      	ldr	r3, [r7, #12]
 8002a08:	2203      	movs	r2, #3
 8002a0a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002a0e:	68fb      	ldr	r3, [r7, #12]
 8002a10:	2200      	movs	r2, #0
 8002a12:	655a      	str	r2, [r3, #84]	; 0x54
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	68ba      	ldr	r2, [r7, #8]
 8002a18:	631a      	str	r2, [r3, #48]	; 0x30
 8002a1a:	68fb      	ldr	r3, [r7, #12]
 8002a1c:	88fa      	ldrh	r2, [r7, #6]
 8002a1e:	869a      	strh	r2, [r3, #52]	; 0x34
 8002a20:	68fb      	ldr	r3, [r7, #12]
 8002a22:	88fa      	ldrh	r2, [r7, #6]
 8002a24:	86da      	strh	r2, [r3, #54]	; 0x36
 8002a26:	68fb      	ldr	r3, [r7, #12]
 8002a28:	2200      	movs	r2, #0
 8002a2a:	639a      	str	r2, [r3, #56]	; 0x38
 8002a2c:	68fb      	ldr	r3, [r7, #12]
 8002a2e:	2200      	movs	r2, #0
 8002a30:	879a      	strh	r2, [r3, #60]	; 0x3c
 8002a32:	68fb      	ldr	r3, [r7, #12]
 8002a34:	2200      	movs	r2, #0
 8002a36:	87da      	strh	r2, [r3, #62]	; 0x3e
 8002a38:	68fb      	ldr	r3, [r7, #12]
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	645a      	str	r2, [r3, #68]	; 0x44
 8002a3e:	68fb      	ldr	r3, [r7, #12]
 8002a40:	2200      	movs	r2, #0
 8002a42:	641a      	str	r2, [r3, #64]	; 0x40
 8002a44:	68fb      	ldr	r3, [r7, #12]
 8002a46:	689b      	ldr	r3, [r3, #8]
 8002a48:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002a4c:	d10f      	bne.n	8002a6e <HAL_SPI_Transmit+0xc0>
 8002a4e:	68fb      	ldr	r3, [r7, #12]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	681a      	ldr	r2, [r3, #0]
 8002a54:	68fb      	ldr	r3, [r7, #12]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002a5c:	601a      	str	r2, [r3, #0]
 8002a5e:	68fb      	ldr	r3, [r7, #12]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	681a      	ldr	r2, [r3, #0]
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002a6c:	601a      	str	r2, [r3, #0]
 8002a6e:	68fb      	ldr	r3, [r7, #12]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002a78:	2b40      	cmp	r3, #64	; 0x40
 8002a7a:	d007      	beq.n	8002a8c <HAL_SPI_Transmit+0xde>
 8002a7c:	68fb      	ldr	r3, [r7, #12]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	681a      	ldr	r2, [r3, #0]
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002a8a:	601a      	str	r2, [r3, #0]
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	68db      	ldr	r3, [r3, #12]
 8002a90:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002a94:	d14f      	bne.n	8002b36 <HAL_SPI_Transmit+0x188>
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	685b      	ldr	r3, [r3, #4]
 8002a9a:	2b00      	cmp	r3, #0
 8002a9c:	d002      	beq.n	8002aa4 <HAL_SPI_Transmit+0xf6>
 8002a9e:	8afb      	ldrh	r3, [r7, #22]
 8002aa0:	2b01      	cmp	r3, #1
 8002aa2:	d142      	bne.n	8002b2a <HAL_SPI_Transmit+0x17c>
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002aa8:	881a      	ldrh	r2, [r3, #0]
 8002aaa:	68fb      	ldr	r3, [r7, #12]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	60da      	str	r2, [r3, #12]
 8002ab0:	68fb      	ldr	r3, [r7, #12]
 8002ab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ab4:	1c9a      	adds	r2, r3, #2
 8002ab6:	68fb      	ldr	r3, [r7, #12]
 8002ab8:	631a      	str	r2, [r3, #48]	; 0x30
 8002aba:	68fb      	ldr	r3, [r7, #12]
 8002abc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002abe:	b29b      	uxth	r3, r3
 8002ac0:	3b01      	subs	r3, #1
 8002ac2:	b29a      	uxth	r2, r3
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	86da      	strh	r2, [r3, #54]	; 0x36
 8002ac8:	e02f      	b.n	8002b2a <HAL_SPI_Transmit+0x17c>
 8002aca:	68fb      	ldr	r3, [r7, #12]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	689b      	ldr	r3, [r3, #8]
 8002ad0:	f003 0302 	and.w	r3, r3, #2
 8002ad4:	2b02      	cmp	r3, #2
 8002ad6:	d112      	bne.n	8002afe <HAL_SPI_Transmit+0x150>
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002adc:	881a      	ldrh	r2, [r3, #0]
 8002ade:	68fb      	ldr	r3, [r7, #12]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	60da      	str	r2, [r3, #12]
 8002ae4:	68fb      	ldr	r3, [r7, #12]
 8002ae6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ae8:	1c9a      	adds	r2, r3, #2
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	631a      	str	r2, [r3, #48]	; 0x30
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002af2:	b29b      	uxth	r3, r3
 8002af4:	3b01      	subs	r3, #1
 8002af6:	b29a      	uxth	r2, r3
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	86da      	strh	r2, [r3, #54]	; 0x36
 8002afc:	e015      	b.n	8002b2a <HAL_SPI_Transmit+0x17c>
 8002afe:	f7fe fd7b 	bl	80015f8 <HAL_GetTick>
 8002b02:	4602      	mov	r2, r0
 8002b04:	69bb      	ldr	r3, [r7, #24]
 8002b06:	1ad3      	subs	r3, r2, r3
 8002b08:	683a      	ldr	r2, [r7, #0]
 8002b0a:	429a      	cmp	r2, r3
 8002b0c:	d803      	bhi.n	8002b16 <HAL_SPI_Transmit+0x168>
 8002b0e:	683b      	ldr	r3, [r7, #0]
 8002b10:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b14:	d102      	bne.n	8002b1c <HAL_SPI_Transmit+0x16e>
 8002b16:	683b      	ldr	r3, [r7, #0]
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d106      	bne.n	8002b2a <HAL_SPI_Transmit+0x17c>
 8002b1c:	2303      	movs	r3, #3
 8002b1e:	77fb      	strb	r3, [r7, #31]
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	2201      	movs	r2, #1
 8002b24:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002b28:	e07b      	b.n	8002c22 <HAL_SPI_Transmit+0x274>
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002b2e:	b29b      	uxth	r3, r3
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d1ca      	bne.n	8002aca <HAL_SPI_Transmit+0x11c>
 8002b34:	e050      	b.n	8002bd8 <HAL_SPI_Transmit+0x22a>
 8002b36:	68fb      	ldr	r3, [r7, #12]
 8002b38:	685b      	ldr	r3, [r3, #4]
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d002      	beq.n	8002b44 <HAL_SPI_Transmit+0x196>
 8002b3e:	8afb      	ldrh	r3, [r7, #22]
 8002b40:	2b01      	cmp	r3, #1
 8002b42:	d144      	bne.n	8002bce <HAL_SPI_Transmit+0x220>
 8002b44:	68fb      	ldr	r3, [r7, #12]
 8002b46:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	330c      	adds	r3, #12
 8002b4e:	7812      	ldrb	r2, [r2, #0]
 8002b50:	701a      	strb	r2, [r3, #0]
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b56:	1c5a      	adds	r2, r3, #1
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	631a      	str	r2, [r3, #48]	; 0x30
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002b60:	b29b      	uxth	r3, r3
 8002b62:	3b01      	subs	r3, #1
 8002b64:	b29a      	uxth	r2, r3
 8002b66:	68fb      	ldr	r3, [r7, #12]
 8002b68:	86da      	strh	r2, [r3, #54]	; 0x36
 8002b6a:	e030      	b.n	8002bce <HAL_SPI_Transmit+0x220>
 8002b6c:	68fb      	ldr	r3, [r7, #12]
 8002b6e:	681b      	ldr	r3, [r3, #0]
 8002b70:	689b      	ldr	r3, [r3, #8]
 8002b72:	f003 0302 	and.w	r3, r3, #2
 8002b76:	2b02      	cmp	r3, #2
 8002b78:	d113      	bne.n	8002ba2 <HAL_SPI_Transmit+0x1f4>
 8002b7a:	68fb      	ldr	r3, [r7, #12]
 8002b7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	330c      	adds	r3, #12
 8002b84:	7812      	ldrb	r2, [r2, #0]
 8002b86:	701a      	strb	r2, [r3, #0]
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b8c:	1c5a      	adds	r2, r3, #1
 8002b8e:	68fb      	ldr	r3, [r7, #12]
 8002b90:	631a      	str	r2, [r3, #48]	; 0x30
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002b96:	b29b      	uxth	r3, r3
 8002b98:	3b01      	subs	r3, #1
 8002b9a:	b29a      	uxth	r2, r3
 8002b9c:	68fb      	ldr	r3, [r7, #12]
 8002b9e:	86da      	strh	r2, [r3, #54]	; 0x36
 8002ba0:	e015      	b.n	8002bce <HAL_SPI_Transmit+0x220>
 8002ba2:	f7fe fd29 	bl	80015f8 <HAL_GetTick>
 8002ba6:	4602      	mov	r2, r0
 8002ba8:	69bb      	ldr	r3, [r7, #24]
 8002baa:	1ad3      	subs	r3, r2, r3
 8002bac:	683a      	ldr	r2, [r7, #0]
 8002bae:	429a      	cmp	r2, r3
 8002bb0:	d803      	bhi.n	8002bba <HAL_SPI_Transmit+0x20c>
 8002bb2:	683b      	ldr	r3, [r7, #0]
 8002bb4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002bb8:	d102      	bne.n	8002bc0 <HAL_SPI_Transmit+0x212>
 8002bba:	683b      	ldr	r3, [r7, #0]
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d106      	bne.n	8002bce <HAL_SPI_Transmit+0x220>
 8002bc0:	2303      	movs	r3, #3
 8002bc2:	77fb      	strb	r3, [r7, #31]
 8002bc4:	68fb      	ldr	r3, [r7, #12]
 8002bc6:	2201      	movs	r2, #1
 8002bc8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002bcc:	e029      	b.n	8002c22 <HAL_SPI_Transmit+0x274>
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002bd2:	b29b      	uxth	r3, r3
 8002bd4:	2b00      	cmp	r3, #0
 8002bd6:	d1c9      	bne.n	8002b6c <HAL_SPI_Transmit+0x1be>
 8002bd8:	69ba      	ldr	r2, [r7, #24]
 8002bda:	6839      	ldr	r1, [r7, #0]
 8002bdc:	68f8      	ldr	r0, [r7, #12]
 8002bde:	f000 f8b1 	bl	8002d44 <SPI_EndRxTxTransaction>
 8002be2:	4603      	mov	r3, r0
 8002be4:	2b00      	cmp	r3, #0
 8002be6:	d002      	beq.n	8002bee <HAL_SPI_Transmit+0x240>
 8002be8:	68fb      	ldr	r3, [r7, #12]
 8002bea:	2220      	movs	r2, #32
 8002bec:	655a      	str	r2, [r3, #84]	; 0x54
 8002bee:	68fb      	ldr	r3, [r7, #12]
 8002bf0:	689b      	ldr	r3, [r3, #8]
 8002bf2:	2b00      	cmp	r3, #0
 8002bf4:	d10a      	bne.n	8002c0c <HAL_SPI_Transmit+0x25e>
 8002bf6:	2300      	movs	r3, #0
 8002bf8:	613b      	str	r3, [r7, #16]
 8002bfa:	68fb      	ldr	r3, [r7, #12]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	68db      	ldr	r3, [r3, #12]
 8002c00:	613b      	str	r3, [r7, #16]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	689b      	ldr	r3, [r3, #8]
 8002c08:	613b      	str	r3, [r7, #16]
 8002c0a:	693b      	ldr	r3, [r7, #16]
 8002c0c:	68fb      	ldr	r3, [r7, #12]
 8002c0e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d002      	beq.n	8002c1a <HAL_SPI_Transmit+0x26c>
 8002c14:	2301      	movs	r3, #1
 8002c16:	77fb      	strb	r3, [r7, #31]
 8002c18:	e003      	b.n	8002c22 <HAL_SPI_Transmit+0x274>
 8002c1a:	68fb      	ldr	r3, [r7, #12]
 8002c1c:	2201      	movs	r2, #1
 8002c1e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	2200      	movs	r2, #0
 8002c26:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002c2a:	7ffb      	ldrb	r3, [r7, #31]
 8002c2c:	4618      	mov	r0, r3
 8002c2e:	3720      	adds	r7, #32
 8002c30:	46bd      	mov	sp, r7
 8002c32:	bd80      	pop	{r7, pc}

08002c34 <SPI_WaitFlagStateUntilTimeout>:
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b088      	sub	sp, #32
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	60f8      	str	r0, [r7, #12]
 8002c3c:	60b9      	str	r1, [r7, #8]
 8002c3e:	603b      	str	r3, [r7, #0]
 8002c40:	4613      	mov	r3, r2
 8002c42:	71fb      	strb	r3, [r7, #7]
 8002c44:	f7fe fcd8 	bl	80015f8 <HAL_GetTick>
 8002c48:	4602      	mov	r2, r0
 8002c4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002c4c:	1a9b      	subs	r3, r3, r2
 8002c4e:	683a      	ldr	r2, [r7, #0]
 8002c50:	4413      	add	r3, r2
 8002c52:	61fb      	str	r3, [r7, #28]
 8002c54:	f7fe fcd0 	bl	80015f8 <HAL_GetTick>
 8002c58:	61b8      	str	r0, [r7, #24]
 8002c5a:	4b39      	ldr	r3, [pc, #228]	; (8002d40 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	015b      	lsls	r3, r3, #5
 8002c60:	0d1b      	lsrs	r3, r3, #20
 8002c62:	69fa      	ldr	r2, [r7, #28]
 8002c64:	fb02 f303 	mul.w	r3, r2, r3
 8002c68:	617b      	str	r3, [r7, #20]
 8002c6a:	e054      	b.n	8002d16 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002c6c:	683b      	ldr	r3, [r7, #0]
 8002c6e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002c72:	d050      	beq.n	8002d16 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002c74:	f7fe fcc0 	bl	80015f8 <HAL_GetTick>
 8002c78:	4602      	mov	r2, r0
 8002c7a:	69bb      	ldr	r3, [r7, #24]
 8002c7c:	1ad3      	subs	r3, r2, r3
 8002c7e:	69fa      	ldr	r2, [r7, #28]
 8002c80:	429a      	cmp	r2, r3
 8002c82:	d902      	bls.n	8002c8a <SPI_WaitFlagStateUntilTimeout+0x56>
 8002c84:	69fb      	ldr	r3, [r7, #28]
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d13d      	bne.n	8002d06 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8002c8a:	68fb      	ldr	r3, [r7, #12]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	685a      	ldr	r2, [r3, #4]
 8002c90:	68fb      	ldr	r3, [r7, #12]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8002c98:	605a      	str	r2, [r3, #4]
 8002c9a:	68fb      	ldr	r3, [r7, #12]
 8002c9c:	685b      	ldr	r3, [r3, #4]
 8002c9e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002ca2:	d111      	bne.n	8002cc8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002ca4:	68fb      	ldr	r3, [r7, #12]
 8002ca6:	689b      	ldr	r3, [r3, #8]
 8002ca8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002cac:	d004      	beq.n	8002cb8 <SPI_WaitFlagStateUntilTimeout+0x84>
 8002cae:	68fb      	ldr	r3, [r7, #12]
 8002cb0:	689b      	ldr	r3, [r3, #8]
 8002cb2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002cb6:	d107      	bne.n	8002cc8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002cb8:	68fb      	ldr	r3, [r7, #12]
 8002cba:	681b      	ldr	r3, [r3, #0]
 8002cbc:	681a      	ldr	r2, [r3, #0]
 8002cbe:	68fb      	ldr	r3, [r7, #12]
 8002cc0:	681b      	ldr	r3, [r3, #0]
 8002cc2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002cc6:	601a      	str	r2, [r3, #0]
 8002cc8:	68fb      	ldr	r3, [r7, #12]
 8002cca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002ccc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002cd0:	d10f      	bne.n	8002cf2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	681a      	ldr	r2, [r3, #0]
 8002cd8:	68fb      	ldr	r3, [r7, #12]
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002ce0:	601a      	str	r2, [r3, #0]
 8002ce2:	68fb      	ldr	r3, [r7, #12]
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	681a      	ldr	r2, [r3, #0]
 8002ce8:	68fb      	ldr	r3, [r7, #12]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002cf0:	601a      	str	r2, [r3, #0]
 8002cf2:	68fb      	ldr	r3, [r7, #12]
 8002cf4:	2201      	movs	r2, #1
 8002cf6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002cfa:	68fb      	ldr	r3, [r7, #12]
 8002cfc:	2200      	movs	r2, #0
 8002cfe:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002d02:	2303      	movs	r3, #3
 8002d04:	e017      	b.n	8002d36 <SPI_WaitFlagStateUntilTimeout+0x102>
 8002d06:	697b      	ldr	r3, [r7, #20]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d101      	bne.n	8002d10 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8002d0c:	2300      	movs	r3, #0
 8002d0e:	61fb      	str	r3, [r7, #28]
 8002d10:	697b      	ldr	r3, [r7, #20]
 8002d12:	3b01      	subs	r3, #1
 8002d14:	617b      	str	r3, [r7, #20]
 8002d16:	68fb      	ldr	r3, [r7, #12]
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	689a      	ldr	r2, [r3, #8]
 8002d1c:	68bb      	ldr	r3, [r7, #8]
 8002d1e:	4013      	ands	r3, r2
 8002d20:	68ba      	ldr	r2, [r7, #8]
 8002d22:	429a      	cmp	r2, r3
 8002d24:	bf0c      	ite	eq
 8002d26:	2301      	moveq	r3, #1
 8002d28:	2300      	movne	r3, #0
 8002d2a:	b2db      	uxtb	r3, r3
 8002d2c:	461a      	mov	r2, r3
 8002d2e:	79fb      	ldrb	r3, [r7, #7]
 8002d30:	429a      	cmp	r2, r3
 8002d32:	d19b      	bne.n	8002c6c <SPI_WaitFlagStateUntilTimeout+0x38>
 8002d34:	2300      	movs	r3, #0
 8002d36:	4618      	mov	r0, r3
 8002d38:	3720      	adds	r7, #32
 8002d3a:	46bd      	mov	sp, r7
 8002d3c:	bd80      	pop	{r7, pc}
 8002d3e:	bf00      	nop
 8002d40:	20000044 	.word	0x20000044

08002d44 <SPI_EndRxTxTransaction>:
 8002d44:	b580      	push	{r7, lr}
 8002d46:	b086      	sub	sp, #24
 8002d48:	af02      	add	r7, sp, #8
 8002d4a:	60f8      	str	r0, [r7, #12]
 8002d4c:	60b9      	str	r1, [r7, #8]
 8002d4e:	607a      	str	r2, [r7, #4]
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	9300      	str	r3, [sp, #0]
 8002d54:	68bb      	ldr	r3, [r7, #8]
 8002d56:	2200      	movs	r2, #0
 8002d58:	2180      	movs	r1, #128	; 0x80
 8002d5a:	68f8      	ldr	r0, [r7, #12]
 8002d5c:	f7ff ff6a 	bl	8002c34 <SPI_WaitFlagStateUntilTimeout>
 8002d60:	4603      	mov	r3, r0
 8002d62:	2b00      	cmp	r3, #0
 8002d64:	d007      	beq.n	8002d76 <SPI_EndRxTxTransaction+0x32>
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002d6a:	f043 0220 	orr.w	r2, r3, #32
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	655a      	str	r2, [r3, #84]	; 0x54
 8002d72:	2303      	movs	r3, #3
 8002d74:	e000      	b.n	8002d78 <SPI_EndRxTxTransaction+0x34>
 8002d76:	2300      	movs	r3, #0
 8002d78:	4618      	mov	r0, r3
 8002d7a:	3710      	adds	r7, #16
 8002d7c:	46bd      	mov	sp, r7
 8002d7e:	bd80      	pop	{r7, pc}

08002d80 <HAL_UART_Init>:
 8002d80:	b580      	push	{r7, lr}
 8002d82:	b082      	sub	sp, #8
 8002d84:	af00      	add	r7, sp, #0
 8002d86:	6078      	str	r0, [r7, #4]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d101      	bne.n	8002d92 <HAL_UART_Init+0x12>
 8002d8e:	2301      	movs	r3, #1
 8002d90:	e042      	b.n	8002e18 <HAL_UART_Init+0x98>
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002d98:	b2db      	uxtb	r3, r3
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	d106      	bne.n	8002dac <HAL_UART_Init+0x2c>
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	2200      	movs	r2, #0
 8002da2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002da6:	6878      	ldr	r0, [r7, #4]
 8002da8:	f7fe f9d8 	bl	800115c <HAL_UART_MspInit>
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	2224      	movs	r2, #36	; 0x24
 8002db0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	68da      	ldr	r2, [r3, #12]
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002dc2:	60da      	str	r2, [r3, #12]
 8002dc4:	6878      	ldr	r0, [r7, #4]
 8002dc6:	f000 f91d 	bl	8003004 <UART_SetConfig>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	691a      	ldr	r2, [r3, #16]
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002dd8:	611a      	str	r2, [r3, #16]
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	695a      	ldr	r2, [r3, #20]
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002de8:	615a      	str	r2, [r3, #20]
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	68da      	ldr	r2, [r3, #12]
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002df8:	60da      	str	r2, [r3, #12]
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	2200      	movs	r2, #0
 8002dfe:	645a      	str	r2, [r3, #68]	; 0x44
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	2220      	movs	r2, #32
 8002e04:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	2220      	movs	r2, #32
 8002e0c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	2200      	movs	r2, #0
 8002e14:	635a      	str	r2, [r3, #52]	; 0x34
 8002e16:	2300      	movs	r3, #0
 8002e18:	4618      	mov	r0, r3
 8002e1a:	3708      	adds	r7, #8
 8002e1c:	46bd      	mov	sp, r7
 8002e1e:	bd80      	pop	{r7, pc}

08002e20 <HAL_UART_Transmit>:
 8002e20:	b580      	push	{r7, lr}
 8002e22:	b08a      	sub	sp, #40	; 0x28
 8002e24:	af02      	add	r7, sp, #8
 8002e26:	60f8      	str	r0, [r7, #12]
 8002e28:	60b9      	str	r1, [r7, #8]
 8002e2a:	603b      	str	r3, [r7, #0]
 8002e2c:	4613      	mov	r3, r2
 8002e2e:	80fb      	strh	r3, [r7, #6]
 8002e30:	2300      	movs	r3, #0
 8002e32:	617b      	str	r3, [r7, #20]
 8002e34:	68fb      	ldr	r3, [r7, #12]
 8002e36:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002e3a:	b2db      	uxtb	r3, r3
 8002e3c:	2b20      	cmp	r3, #32
 8002e3e:	d16d      	bne.n	8002f1c <HAL_UART_Transmit+0xfc>
 8002e40:	68bb      	ldr	r3, [r7, #8]
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d002      	beq.n	8002e4c <HAL_UART_Transmit+0x2c>
 8002e46:	88fb      	ldrh	r3, [r7, #6]
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d101      	bne.n	8002e50 <HAL_UART_Transmit+0x30>
 8002e4c:	2301      	movs	r3, #1
 8002e4e:	e066      	b.n	8002f1e <HAL_UART_Transmit+0xfe>
 8002e50:	68fb      	ldr	r3, [r7, #12]
 8002e52:	2200      	movs	r2, #0
 8002e54:	645a      	str	r2, [r3, #68]	; 0x44
 8002e56:	68fb      	ldr	r3, [r7, #12]
 8002e58:	2221      	movs	r2, #33	; 0x21
 8002e5a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002e5e:	f7fe fbcb 	bl	80015f8 <HAL_GetTick>
 8002e62:	6178      	str	r0, [r7, #20]
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	88fa      	ldrh	r2, [r7, #6]
 8002e68:	849a      	strh	r2, [r3, #36]	; 0x24
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	88fa      	ldrh	r2, [r7, #6]
 8002e6e:	84da      	strh	r2, [r3, #38]	; 0x26
 8002e70:	68fb      	ldr	r3, [r7, #12]
 8002e72:	689b      	ldr	r3, [r3, #8]
 8002e74:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002e78:	d108      	bne.n	8002e8c <HAL_UART_Transmit+0x6c>
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	691b      	ldr	r3, [r3, #16]
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	d104      	bne.n	8002e8c <HAL_UART_Transmit+0x6c>
 8002e82:	2300      	movs	r3, #0
 8002e84:	61fb      	str	r3, [r7, #28]
 8002e86:	68bb      	ldr	r3, [r7, #8]
 8002e88:	61bb      	str	r3, [r7, #24]
 8002e8a:	e003      	b.n	8002e94 <HAL_UART_Transmit+0x74>
 8002e8c:	68bb      	ldr	r3, [r7, #8]
 8002e8e:	61fb      	str	r3, [r7, #28]
 8002e90:	2300      	movs	r3, #0
 8002e92:	61bb      	str	r3, [r7, #24]
 8002e94:	e02a      	b.n	8002eec <HAL_UART_Transmit+0xcc>
 8002e96:	683b      	ldr	r3, [r7, #0]
 8002e98:	9300      	str	r3, [sp, #0]
 8002e9a:	697b      	ldr	r3, [r7, #20]
 8002e9c:	2200      	movs	r2, #0
 8002e9e:	2180      	movs	r1, #128	; 0x80
 8002ea0:	68f8      	ldr	r0, [r7, #12]
 8002ea2:	f000 f840 	bl	8002f26 <UART_WaitOnFlagUntilTimeout>
 8002ea6:	4603      	mov	r3, r0
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	d001      	beq.n	8002eb0 <HAL_UART_Transmit+0x90>
 8002eac:	2303      	movs	r3, #3
 8002eae:	e036      	b.n	8002f1e <HAL_UART_Transmit+0xfe>
 8002eb0:	69fb      	ldr	r3, [r7, #28]
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d10b      	bne.n	8002ece <HAL_UART_Transmit+0xae>
 8002eb6:	69bb      	ldr	r3, [r7, #24]
 8002eb8:	881b      	ldrh	r3, [r3, #0]
 8002eba:	461a      	mov	r2, r3
 8002ebc:	68fb      	ldr	r3, [r7, #12]
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002ec4:	605a      	str	r2, [r3, #4]
 8002ec6:	69bb      	ldr	r3, [r7, #24]
 8002ec8:	3302      	adds	r3, #2
 8002eca:	61bb      	str	r3, [r7, #24]
 8002ecc:	e007      	b.n	8002ede <HAL_UART_Transmit+0xbe>
 8002ece:	69fb      	ldr	r3, [r7, #28]
 8002ed0:	781a      	ldrb	r2, [r3, #0]
 8002ed2:	68fb      	ldr	r3, [r7, #12]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	605a      	str	r2, [r3, #4]
 8002ed8:	69fb      	ldr	r3, [r7, #28]
 8002eda:	3301      	adds	r3, #1
 8002edc:	61fb      	str	r3, [r7, #28]
 8002ede:	68fb      	ldr	r3, [r7, #12]
 8002ee0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002ee2:	b29b      	uxth	r3, r3
 8002ee4:	3b01      	subs	r3, #1
 8002ee6:	b29a      	uxth	r2, r3
 8002ee8:	68fb      	ldr	r3, [r7, #12]
 8002eea:	84da      	strh	r2, [r3, #38]	; 0x26
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002ef0:	b29b      	uxth	r3, r3
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d1cf      	bne.n	8002e96 <HAL_UART_Transmit+0x76>
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	9300      	str	r3, [sp, #0]
 8002efa:	697b      	ldr	r3, [r7, #20]
 8002efc:	2200      	movs	r2, #0
 8002efe:	2140      	movs	r1, #64	; 0x40
 8002f00:	68f8      	ldr	r0, [r7, #12]
 8002f02:	f000 f810 	bl	8002f26 <UART_WaitOnFlagUntilTimeout>
 8002f06:	4603      	mov	r3, r0
 8002f08:	2b00      	cmp	r3, #0
 8002f0a:	d001      	beq.n	8002f10 <HAL_UART_Transmit+0xf0>
 8002f0c:	2303      	movs	r3, #3
 8002f0e:	e006      	b.n	8002f1e <HAL_UART_Transmit+0xfe>
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	2220      	movs	r2, #32
 8002f14:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002f18:	2300      	movs	r3, #0
 8002f1a:	e000      	b.n	8002f1e <HAL_UART_Transmit+0xfe>
 8002f1c:	2302      	movs	r3, #2
 8002f1e:	4618      	mov	r0, r3
 8002f20:	3720      	adds	r7, #32
 8002f22:	46bd      	mov	sp, r7
 8002f24:	bd80      	pop	{r7, pc}

08002f26 <UART_WaitOnFlagUntilTimeout>:
 8002f26:	b580      	push	{r7, lr}
 8002f28:	b090      	sub	sp, #64	; 0x40
 8002f2a:	af00      	add	r7, sp, #0
 8002f2c:	60f8      	str	r0, [r7, #12]
 8002f2e:	60b9      	str	r1, [r7, #8]
 8002f30:	603b      	str	r3, [r7, #0]
 8002f32:	4613      	mov	r3, r2
 8002f34:	71fb      	strb	r3, [r7, #7]
 8002f36:	e050      	b.n	8002fda <UART_WaitOnFlagUntilTimeout+0xb4>
 8002f38:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002f3a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002f3e:	d04c      	beq.n	8002fda <UART_WaitOnFlagUntilTimeout+0xb4>
 8002f40:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002f42:	2b00      	cmp	r3, #0
 8002f44:	d007      	beq.n	8002f56 <UART_WaitOnFlagUntilTimeout+0x30>
 8002f46:	f7fe fb57 	bl	80015f8 <HAL_GetTick>
 8002f4a:	4602      	mov	r2, r0
 8002f4c:	683b      	ldr	r3, [r7, #0]
 8002f4e:	1ad3      	subs	r3, r2, r3
 8002f50:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8002f52:	429a      	cmp	r2, r3
 8002f54:	d241      	bcs.n	8002fda <UART_WaitOnFlagUntilTimeout+0xb4>
 8002f56:	68fb      	ldr	r3, [r7, #12]
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	330c      	adds	r3, #12
 8002f5c:	62bb      	str	r3, [r7, #40]	; 0x28
 8002f5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002f60:	e853 3f00 	ldrex	r3, [r3]
 8002f64:	627b      	str	r3, [r7, #36]	; 0x24
 8002f66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f68:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8002f6c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002f6e:	68fb      	ldr	r3, [r7, #12]
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	330c      	adds	r3, #12
 8002f74:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002f76:	637a      	str	r2, [r7, #52]	; 0x34
 8002f78:	633b      	str	r3, [r7, #48]	; 0x30
 8002f7a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002f7c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002f7e:	e841 2300 	strex	r3, r2, [r1]
 8002f82:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002f84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d1e5      	bne.n	8002f56 <UART_WaitOnFlagUntilTimeout+0x30>
 8002f8a:	68fb      	ldr	r3, [r7, #12]
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	3314      	adds	r3, #20
 8002f90:	617b      	str	r3, [r7, #20]
 8002f92:	697b      	ldr	r3, [r7, #20]
 8002f94:	e853 3f00 	ldrex	r3, [r3]
 8002f98:	613b      	str	r3, [r7, #16]
 8002f9a:	693b      	ldr	r3, [r7, #16]
 8002f9c:	f023 0301 	bic.w	r3, r3, #1
 8002fa0:	63bb      	str	r3, [r7, #56]	; 0x38
 8002fa2:	68fb      	ldr	r3, [r7, #12]
 8002fa4:	681b      	ldr	r3, [r3, #0]
 8002fa6:	3314      	adds	r3, #20
 8002fa8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002faa:	623a      	str	r2, [r7, #32]
 8002fac:	61fb      	str	r3, [r7, #28]
 8002fae:	69f9      	ldr	r1, [r7, #28]
 8002fb0:	6a3a      	ldr	r2, [r7, #32]
 8002fb2:	e841 2300 	strex	r3, r2, [r1]
 8002fb6:	61bb      	str	r3, [r7, #24]
 8002fb8:	69bb      	ldr	r3, [r7, #24]
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d1e5      	bne.n	8002f8a <UART_WaitOnFlagUntilTimeout+0x64>
 8002fbe:	68fb      	ldr	r3, [r7, #12]
 8002fc0:	2220      	movs	r2, #32
 8002fc2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	2220      	movs	r2, #32
 8002fca:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002fce:	68fb      	ldr	r3, [r7, #12]
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002fd6:	2303      	movs	r3, #3
 8002fd8:	e00f      	b.n	8002ffa <UART_WaitOnFlagUntilTimeout+0xd4>
 8002fda:	68fb      	ldr	r3, [r7, #12]
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	681a      	ldr	r2, [r3, #0]
 8002fe0:	68bb      	ldr	r3, [r7, #8]
 8002fe2:	4013      	ands	r3, r2
 8002fe4:	68ba      	ldr	r2, [r7, #8]
 8002fe6:	429a      	cmp	r2, r3
 8002fe8:	bf0c      	ite	eq
 8002fea:	2301      	moveq	r3, #1
 8002fec:	2300      	movne	r3, #0
 8002fee:	b2db      	uxtb	r3, r3
 8002ff0:	461a      	mov	r2, r3
 8002ff2:	79fb      	ldrb	r3, [r7, #7]
 8002ff4:	429a      	cmp	r2, r3
 8002ff6:	d09f      	beq.n	8002f38 <UART_WaitOnFlagUntilTimeout+0x12>
 8002ff8:	2300      	movs	r3, #0
 8002ffa:	4618      	mov	r0, r3
 8002ffc:	3740      	adds	r7, #64	; 0x40
 8002ffe:	46bd      	mov	sp, r7
 8003000:	bd80      	pop	{r7, pc}
	...

08003004 <UART_SetConfig>:
 8003004:	b580      	push	{r7, lr}
 8003006:	b084      	sub	sp, #16
 8003008:	af00      	add	r7, sp, #0
 800300a:	6078      	str	r0, [r7, #4]
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	691b      	ldr	r3, [r3, #16]
 8003012:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	68da      	ldr	r2, [r3, #12]
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	681b      	ldr	r3, [r3, #0]
 800301e:	430a      	orrs	r2, r1
 8003020:	611a      	str	r2, [r3, #16]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	689a      	ldr	r2, [r3, #8]
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	691b      	ldr	r3, [r3, #16]
 800302a:	431a      	orrs	r2, r3
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	695b      	ldr	r3, [r3, #20]
 8003030:	4313      	orrs	r3, r2
 8003032:	60bb      	str	r3, [r7, #8]
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	68db      	ldr	r3, [r3, #12]
 800303a:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800303e:	f023 030c 	bic.w	r3, r3, #12
 8003042:	687a      	ldr	r2, [r7, #4]
 8003044:	6812      	ldr	r2, [r2, #0]
 8003046:	68b9      	ldr	r1, [r7, #8]
 8003048:	430b      	orrs	r3, r1
 800304a:	60d3      	str	r3, [r2, #12]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	695b      	ldr	r3, [r3, #20]
 8003052:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	699a      	ldr	r2, [r3, #24]
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	430a      	orrs	r2, r1
 8003060:	615a      	str	r2, [r3, #20]
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	4a2c      	ldr	r2, [pc, #176]	; (8003118 <UART_SetConfig+0x114>)
 8003068:	4293      	cmp	r3, r2
 800306a:	d103      	bne.n	8003074 <UART_SetConfig+0x70>
 800306c:	f7ff f974 	bl	8002358 <HAL_RCC_GetPCLK2Freq>
 8003070:	60f8      	str	r0, [r7, #12]
 8003072:	e002      	b.n	800307a <UART_SetConfig+0x76>
 8003074:	f7ff f95c 	bl	8002330 <HAL_RCC_GetPCLK1Freq>
 8003078:	60f8      	str	r0, [r7, #12]
 800307a:	68fa      	ldr	r2, [r7, #12]
 800307c:	4613      	mov	r3, r2
 800307e:	009b      	lsls	r3, r3, #2
 8003080:	4413      	add	r3, r2
 8003082:	009a      	lsls	r2, r3, #2
 8003084:	441a      	add	r2, r3
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	685b      	ldr	r3, [r3, #4]
 800308a:	009b      	lsls	r3, r3, #2
 800308c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003090:	4a22      	ldr	r2, [pc, #136]	; (800311c <UART_SetConfig+0x118>)
 8003092:	fba2 2303 	umull	r2, r3, r2, r3
 8003096:	095b      	lsrs	r3, r3, #5
 8003098:	0119      	lsls	r1, r3, #4
 800309a:	68fa      	ldr	r2, [r7, #12]
 800309c:	4613      	mov	r3, r2
 800309e:	009b      	lsls	r3, r3, #2
 80030a0:	4413      	add	r3, r2
 80030a2:	009a      	lsls	r2, r3, #2
 80030a4:	441a      	add	r2, r3
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	685b      	ldr	r3, [r3, #4]
 80030aa:	009b      	lsls	r3, r3, #2
 80030ac:	fbb2 f2f3 	udiv	r2, r2, r3
 80030b0:	4b1a      	ldr	r3, [pc, #104]	; (800311c <UART_SetConfig+0x118>)
 80030b2:	fba3 0302 	umull	r0, r3, r3, r2
 80030b6:	095b      	lsrs	r3, r3, #5
 80030b8:	2064      	movs	r0, #100	; 0x64
 80030ba:	fb00 f303 	mul.w	r3, r0, r3
 80030be:	1ad3      	subs	r3, r2, r3
 80030c0:	011b      	lsls	r3, r3, #4
 80030c2:	3332      	adds	r3, #50	; 0x32
 80030c4:	4a15      	ldr	r2, [pc, #84]	; (800311c <UART_SetConfig+0x118>)
 80030c6:	fba2 2303 	umull	r2, r3, r2, r3
 80030ca:	095b      	lsrs	r3, r3, #5
 80030cc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80030d0:	4419      	add	r1, r3
 80030d2:	68fa      	ldr	r2, [r7, #12]
 80030d4:	4613      	mov	r3, r2
 80030d6:	009b      	lsls	r3, r3, #2
 80030d8:	4413      	add	r3, r2
 80030da:	009a      	lsls	r2, r3, #2
 80030dc:	441a      	add	r2, r3
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	685b      	ldr	r3, [r3, #4]
 80030e2:	009b      	lsls	r3, r3, #2
 80030e4:	fbb2 f2f3 	udiv	r2, r2, r3
 80030e8:	4b0c      	ldr	r3, [pc, #48]	; (800311c <UART_SetConfig+0x118>)
 80030ea:	fba3 0302 	umull	r0, r3, r3, r2
 80030ee:	095b      	lsrs	r3, r3, #5
 80030f0:	2064      	movs	r0, #100	; 0x64
 80030f2:	fb00 f303 	mul.w	r3, r0, r3
 80030f6:	1ad3      	subs	r3, r2, r3
 80030f8:	011b      	lsls	r3, r3, #4
 80030fa:	3332      	adds	r3, #50	; 0x32
 80030fc:	4a07      	ldr	r2, [pc, #28]	; (800311c <UART_SetConfig+0x118>)
 80030fe:	fba2 2303 	umull	r2, r3, r2, r3
 8003102:	095b      	lsrs	r3, r3, #5
 8003104:	f003 020f 	and.w	r2, r3, #15
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	440a      	add	r2, r1
 800310e:	609a      	str	r2, [r3, #8]
 8003110:	bf00      	nop
 8003112:	3710      	adds	r7, #16
 8003114:	46bd      	mov	sp, r7
 8003116:	bd80      	pop	{r7, pc}
 8003118:	40013800 	.word	0x40013800
 800311c:	51eb851f 	.word	0x51eb851f

08003120 <__errno>:
 8003120:	4b01      	ldr	r3, [pc, #4]	; (8003128 <__errno+0x8>)
 8003122:	6818      	ldr	r0, [r3, #0]
 8003124:	4770      	bx	lr
 8003126:	bf00      	nop
 8003128:	20000050 	.word	0x20000050

0800312c <__libc_init_array>:
 800312c:	b570      	push	{r4, r5, r6, lr}
 800312e:	2600      	movs	r6, #0
 8003130:	4d0c      	ldr	r5, [pc, #48]	; (8003164 <__libc_init_array+0x38>)
 8003132:	4c0d      	ldr	r4, [pc, #52]	; (8003168 <__libc_init_array+0x3c>)
 8003134:	1b64      	subs	r4, r4, r5
 8003136:	10a4      	asrs	r4, r4, #2
 8003138:	42a6      	cmp	r6, r4
 800313a:	d109      	bne.n	8003150 <__libc_init_array+0x24>
 800313c:	f001 fa6a 	bl	8004614 <_init>
 8003140:	2600      	movs	r6, #0
 8003142:	4d0a      	ldr	r5, [pc, #40]	; (800316c <__libc_init_array+0x40>)
 8003144:	4c0a      	ldr	r4, [pc, #40]	; (8003170 <__libc_init_array+0x44>)
 8003146:	1b64      	subs	r4, r4, r5
 8003148:	10a4      	asrs	r4, r4, #2
 800314a:	42a6      	cmp	r6, r4
 800314c:	d105      	bne.n	800315a <__libc_init_array+0x2e>
 800314e:	bd70      	pop	{r4, r5, r6, pc}
 8003150:	f855 3b04 	ldr.w	r3, [r5], #4
 8003154:	4798      	blx	r3
 8003156:	3601      	adds	r6, #1
 8003158:	e7ee      	b.n	8003138 <__libc_init_array+0xc>
 800315a:	f855 3b04 	ldr.w	r3, [r5], #4
 800315e:	4798      	blx	r3
 8003160:	3601      	adds	r6, #1
 8003162:	e7f2      	b.n	800314a <__libc_init_array+0x1e>
 8003164:	08005050 	.word	0x08005050
 8003168:	08005050 	.word	0x08005050
 800316c:	08005050 	.word	0x08005050
 8003170:	08005054 	.word	0x08005054

08003174 <memset>:
 8003174:	4603      	mov	r3, r0
 8003176:	4402      	add	r2, r0
 8003178:	4293      	cmp	r3, r2
 800317a:	d100      	bne.n	800317e <memset+0xa>
 800317c:	4770      	bx	lr
 800317e:	f803 1b01 	strb.w	r1, [r3], #1
 8003182:	e7f9      	b.n	8003178 <memset+0x4>

08003184 <srand>:
 8003184:	b538      	push	{r3, r4, r5, lr}
 8003186:	4b10      	ldr	r3, [pc, #64]	; (80031c8 <srand+0x44>)
 8003188:	4604      	mov	r4, r0
 800318a:	681d      	ldr	r5, [r3, #0]
 800318c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800318e:	b9b3      	cbnz	r3, 80031be <srand+0x3a>
 8003190:	2018      	movs	r0, #24
 8003192:	f000 f8b3 	bl	80032fc <malloc>
 8003196:	4602      	mov	r2, r0
 8003198:	63a8      	str	r0, [r5, #56]	; 0x38
 800319a:	b920      	cbnz	r0, 80031a6 <srand+0x22>
 800319c:	2142      	movs	r1, #66	; 0x42
 800319e:	4b0b      	ldr	r3, [pc, #44]	; (80031cc <srand+0x48>)
 80031a0:	480b      	ldr	r0, [pc, #44]	; (80031d0 <srand+0x4c>)
 80031a2:	f000 f87b 	bl	800329c <__assert_func>
 80031a6:	490b      	ldr	r1, [pc, #44]	; (80031d4 <srand+0x50>)
 80031a8:	4b0b      	ldr	r3, [pc, #44]	; (80031d8 <srand+0x54>)
 80031aa:	e9c0 1300 	strd	r1, r3, [r0]
 80031ae:	4b0b      	ldr	r3, [pc, #44]	; (80031dc <srand+0x58>)
 80031b0:	2100      	movs	r1, #0
 80031b2:	6083      	str	r3, [r0, #8]
 80031b4:	230b      	movs	r3, #11
 80031b6:	8183      	strh	r3, [r0, #12]
 80031b8:	2001      	movs	r0, #1
 80031ba:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80031be:	2200      	movs	r2, #0
 80031c0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80031c2:	611c      	str	r4, [r3, #16]
 80031c4:	615a      	str	r2, [r3, #20]
 80031c6:	bd38      	pop	{r3, r4, r5, pc}
 80031c8:	20000050 	.word	0x20000050
 80031cc:	08004f0c 	.word	0x08004f0c
 80031d0:	08004f23 	.word	0x08004f23
 80031d4:	abcd330e 	.word	0xabcd330e
 80031d8:	e66d1234 	.word	0xe66d1234
 80031dc:	0005deec 	.word	0x0005deec

080031e0 <rand>:
 80031e0:	4b16      	ldr	r3, [pc, #88]	; (800323c <rand+0x5c>)
 80031e2:	b510      	push	{r4, lr}
 80031e4:	681c      	ldr	r4, [r3, #0]
 80031e6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80031e8:	b9b3      	cbnz	r3, 8003218 <rand+0x38>
 80031ea:	2018      	movs	r0, #24
 80031ec:	f000 f886 	bl	80032fc <malloc>
 80031f0:	4602      	mov	r2, r0
 80031f2:	63a0      	str	r0, [r4, #56]	; 0x38
 80031f4:	b920      	cbnz	r0, 8003200 <rand+0x20>
 80031f6:	214e      	movs	r1, #78	; 0x4e
 80031f8:	4b11      	ldr	r3, [pc, #68]	; (8003240 <rand+0x60>)
 80031fa:	4812      	ldr	r0, [pc, #72]	; (8003244 <rand+0x64>)
 80031fc:	f000 f84e 	bl	800329c <__assert_func>
 8003200:	4911      	ldr	r1, [pc, #68]	; (8003248 <rand+0x68>)
 8003202:	4b12      	ldr	r3, [pc, #72]	; (800324c <rand+0x6c>)
 8003204:	e9c0 1300 	strd	r1, r3, [r0]
 8003208:	4b11      	ldr	r3, [pc, #68]	; (8003250 <rand+0x70>)
 800320a:	2100      	movs	r1, #0
 800320c:	6083      	str	r3, [r0, #8]
 800320e:	230b      	movs	r3, #11
 8003210:	8183      	strh	r3, [r0, #12]
 8003212:	2001      	movs	r0, #1
 8003214:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8003218:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800321a:	4a0e      	ldr	r2, [pc, #56]	; (8003254 <rand+0x74>)
 800321c:	6920      	ldr	r0, [r4, #16]
 800321e:	6963      	ldr	r3, [r4, #20]
 8003220:	4342      	muls	r2, r0
 8003222:	490d      	ldr	r1, [pc, #52]	; (8003258 <rand+0x78>)
 8003224:	fb01 2203 	mla	r2, r1, r3, r2
 8003228:	fba0 0101 	umull	r0, r1, r0, r1
 800322c:	1c43      	adds	r3, r0, #1
 800322e:	eb42 0001 	adc.w	r0, r2, r1
 8003232:	e9c4 3004 	strd	r3, r0, [r4, #16]
 8003236:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 800323a:	bd10      	pop	{r4, pc}
 800323c:	20000050 	.word	0x20000050
 8003240:	08004f0c 	.word	0x08004f0c
 8003244:	08004f23 	.word	0x08004f23
 8003248:	abcd330e 	.word	0xabcd330e
 800324c:	e66d1234 	.word	0xe66d1234
 8003250:	0005deec 	.word	0x0005deec
 8003254:	5851f42d 	.word	0x5851f42d
 8003258:	4c957f2d 	.word	0x4c957f2d

0800325c <siprintf>:
 800325c:	b40e      	push	{r1, r2, r3}
 800325e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003262:	b500      	push	{lr}
 8003264:	b09c      	sub	sp, #112	; 0x70
 8003266:	ab1d      	add	r3, sp, #116	; 0x74
 8003268:	9002      	str	r0, [sp, #8]
 800326a:	9006      	str	r0, [sp, #24]
 800326c:	9107      	str	r1, [sp, #28]
 800326e:	9104      	str	r1, [sp, #16]
 8003270:	4808      	ldr	r0, [pc, #32]	; (8003294 <siprintf+0x38>)
 8003272:	4909      	ldr	r1, [pc, #36]	; (8003298 <siprintf+0x3c>)
 8003274:	f853 2b04 	ldr.w	r2, [r3], #4
 8003278:	9105      	str	r1, [sp, #20]
 800327a:	6800      	ldr	r0, [r0, #0]
 800327c:	a902      	add	r1, sp, #8
 800327e:	9301      	str	r3, [sp, #4]
 8003280:	f000 f97c 	bl	800357c <_svfiprintf_r>
 8003284:	2200      	movs	r2, #0
 8003286:	9b02      	ldr	r3, [sp, #8]
 8003288:	701a      	strb	r2, [r3, #0]
 800328a:	b01c      	add	sp, #112	; 0x70
 800328c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003290:	b003      	add	sp, #12
 8003292:	4770      	bx	lr
 8003294:	20000050 	.word	0x20000050
 8003298:	ffff0208 	.word	0xffff0208

0800329c <__assert_func>:
 800329c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800329e:	4614      	mov	r4, r2
 80032a0:	461a      	mov	r2, r3
 80032a2:	4b09      	ldr	r3, [pc, #36]	; (80032c8 <__assert_func+0x2c>)
 80032a4:	4605      	mov	r5, r0
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	68d8      	ldr	r0, [r3, #12]
 80032aa:	b14c      	cbz	r4, 80032c0 <__assert_func+0x24>
 80032ac:	4b07      	ldr	r3, [pc, #28]	; (80032cc <__assert_func+0x30>)
 80032ae:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80032b2:	9100      	str	r1, [sp, #0]
 80032b4:	462b      	mov	r3, r5
 80032b6:	4906      	ldr	r1, [pc, #24]	; (80032d0 <__assert_func+0x34>)
 80032b8:	f000 f80e 	bl	80032d8 <fiprintf>
 80032bc:	f000 fe1c 	bl	8003ef8 <abort>
 80032c0:	4b04      	ldr	r3, [pc, #16]	; (80032d4 <__assert_func+0x38>)
 80032c2:	461c      	mov	r4, r3
 80032c4:	e7f3      	b.n	80032ae <__assert_func+0x12>
 80032c6:	bf00      	nop
 80032c8:	20000050 	.word	0x20000050
 80032cc:	08004f7e 	.word	0x08004f7e
 80032d0:	08004f8b 	.word	0x08004f8b
 80032d4:	08004fb9 	.word	0x08004fb9

080032d8 <fiprintf>:
 80032d8:	b40e      	push	{r1, r2, r3}
 80032da:	b503      	push	{r0, r1, lr}
 80032dc:	4601      	mov	r1, r0
 80032de:	ab03      	add	r3, sp, #12
 80032e0:	4805      	ldr	r0, [pc, #20]	; (80032f8 <fiprintf+0x20>)
 80032e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80032e6:	6800      	ldr	r0, [r0, #0]
 80032e8:	9301      	str	r3, [sp, #4]
 80032ea:	f000 fa6f 	bl	80037cc <_vfiprintf_r>
 80032ee:	b002      	add	sp, #8
 80032f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80032f4:	b003      	add	sp, #12
 80032f6:	4770      	bx	lr
 80032f8:	20000050 	.word	0x20000050

080032fc <malloc>:
 80032fc:	4b02      	ldr	r3, [pc, #8]	; (8003308 <malloc+0xc>)
 80032fe:	4601      	mov	r1, r0
 8003300:	6818      	ldr	r0, [r3, #0]
 8003302:	f000 b86b 	b.w	80033dc <_malloc_r>
 8003306:	bf00      	nop
 8003308:	20000050 	.word	0x20000050

0800330c <_free_r>:
 800330c:	b538      	push	{r3, r4, r5, lr}
 800330e:	4605      	mov	r5, r0
 8003310:	2900      	cmp	r1, #0
 8003312:	d040      	beq.n	8003396 <_free_r+0x8a>
 8003314:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003318:	1f0c      	subs	r4, r1, #4
 800331a:	2b00      	cmp	r3, #0
 800331c:	bfb8      	it	lt
 800331e:	18e4      	addlt	r4, r4, r3
 8003320:	f001 f844 	bl	80043ac <__malloc_lock>
 8003324:	4a1c      	ldr	r2, [pc, #112]	; (8003398 <_free_r+0x8c>)
 8003326:	6813      	ldr	r3, [r2, #0]
 8003328:	b933      	cbnz	r3, 8003338 <_free_r+0x2c>
 800332a:	6063      	str	r3, [r4, #4]
 800332c:	6014      	str	r4, [r2, #0]
 800332e:	4628      	mov	r0, r5
 8003330:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003334:	f001 b840 	b.w	80043b8 <__malloc_unlock>
 8003338:	42a3      	cmp	r3, r4
 800333a:	d908      	bls.n	800334e <_free_r+0x42>
 800333c:	6820      	ldr	r0, [r4, #0]
 800333e:	1821      	adds	r1, r4, r0
 8003340:	428b      	cmp	r3, r1
 8003342:	bf01      	itttt	eq
 8003344:	6819      	ldreq	r1, [r3, #0]
 8003346:	685b      	ldreq	r3, [r3, #4]
 8003348:	1809      	addeq	r1, r1, r0
 800334a:	6021      	streq	r1, [r4, #0]
 800334c:	e7ed      	b.n	800332a <_free_r+0x1e>
 800334e:	461a      	mov	r2, r3
 8003350:	685b      	ldr	r3, [r3, #4]
 8003352:	b10b      	cbz	r3, 8003358 <_free_r+0x4c>
 8003354:	42a3      	cmp	r3, r4
 8003356:	d9fa      	bls.n	800334e <_free_r+0x42>
 8003358:	6811      	ldr	r1, [r2, #0]
 800335a:	1850      	adds	r0, r2, r1
 800335c:	42a0      	cmp	r0, r4
 800335e:	d10b      	bne.n	8003378 <_free_r+0x6c>
 8003360:	6820      	ldr	r0, [r4, #0]
 8003362:	4401      	add	r1, r0
 8003364:	1850      	adds	r0, r2, r1
 8003366:	4283      	cmp	r3, r0
 8003368:	6011      	str	r1, [r2, #0]
 800336a:	d1e0      	bne.n	800332e <_free_r+0x22>
 800336c:	6818      	ldr	r0, [r3, #0]
 800336e:	685b      	ldr	r3, [r3, #4]
 8003370:	4401      	add	r1, r0
 8003372:	6011      	str	r1, [r2, #0]
 8003374:	6053      	str	r3, [r2, #4]
 8003376:	e7da      	b.n	800332e <_free_r+0x22>
 8003378:	d902      	bls.n	8003380 <_free_r+0x74>
 800337a:	230c      	movs	r3, #12
 800337c:	602b      	str	r3, [r5, #0]
 800337e:	e7d6      	b.n	800332e <_free_r+0x22>
 8003380:	6820      	ldr	r0, [r4, #0]
 8003382:	1821      	adds	r1, r4, r0
 8003384:	428b      	cmp	r3, r1
 8003386:	bf01      	itttt	eq
 8003388:	6819      	ldreq	r1, [r3, #0]
 800338a:	685b      	ldreq	r3, [r3, #4]
 800338c:	1809      	addeq	r1, r1, r0
 800338e:	6021      	streq	r1, [r4, #0]
 8003390:	6063      	str	r3, [r4, #4]
 8003392:	6054      	str	r4, [r2, #4]
 8003394:	e7cb      	b.n	800332e <_free_r+0x22>
 8003396:	bd38      	pop	{r3, r4, r5, pc}
 8003398:	20000258 	.word	0x20000258

0800339c <sbrk_aligned>:
 800339c:	b570      	push	{r4, r5, r6, lr}
 800339e:	4e0e      	ldr	r6, [pc, #56]	; (80033d8 <sbrk_aligned+0x3c>)
 80033a0:	460c      	mov	r4, r1
 80033a2:	6831      	ldr	r1, [r6, #0]
 80033a4:	4605      	mov	r5, r0
 80033a6:	b911      	cbnz	r1, 80033ae <sbrk_aligned+0x12>
 80033a8:	f000 fcd6 	bl	8003d58 <_sbrk_r>
 80033ac:	6030      	str	r0, [r6, #0]
 80033ae:	4621      	mov	r1, r4
 80033b0:	4628      	mov	r0, r5
 80033b2:	f000 fcd1 	bl	8003d58 <_sbrk_r>
 80033b6:	1c43      	adds	r3, r0, #1
 80033b8:	d00a      	beq.n	80033d0 <sbrk_aligned+0x34>
 80033ba:	1cc4      	adds	r4, r0, #3
 80033bc:	f024 0403 	bic.w	r4, r4, #3
 80033c0:	42a0      	cmp	r0, r4
 80033c2:	d007      	beq.n	80033d4 <sbrk_aligned+0x38>
 80033c4:	1a21      	subs	r1, r4, r0
 80033c6:	4628      	mov	r0, r5
 80033c8:	f000 fcc6 	bl	8003d58 <_sbrk_r>
 80033cc:	3001      	adds	r0, #1
 80033ce:	d101      	bne.n	80033d4 <sbrk_aligned+0x38>
 80033d0:	f04f 34ff 	mov.w	r4, #4294967295
 80033d4:	4620      	mov	r0, r4
 80033d6:	bd70      	pop	{r4, r5, r6, pc}
 80033d8:	2000025c 	.word	0x2000025c

080033dc <_malloc_r>:
 80033dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80033e0:	1ccd      	adds	r5, r1, #3
 80033e2:	f025 0503 	bic.w	r5, r5, #3
 80033e6:	3508      	adds	r5, #8
 80033e8:	2d0c      	cmp	r5, #12
 80033ea:	bf38      	it	cc
 80033ec:	250c      	movcc	r5, #12
 80033ee:	2d00      	cmp	r5, #0
 80033f0:	4607      	mov	r7, r0
 80033f2:	db01      	blt.n	80033f8 <_malloc_r+0x1c>
 80033f4:	42a9      	cmp	r1, r5
 80033f6:	d905      	bls.n	8003404 <_malloc_r+0x28>
 80033f8:	230c      	movs	r3, #12
 80033fa:	2600      	movs	r6, #0
 80033fc:	603b      	str	r3, [r7, #0]
 80033fe:	4630      	mov	r0, r6
 8003400:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003404:	4e2e      	ldr	r6, [pc, #184]	; (80034c0 <_malloc_r+0xe4>)
 8003406:	f000 ffd1 	bl	80043ac <__malloc_lock>
 800340a:	6833      	ldr	r3, [r6, #0]
 800340c:	461c      	mov	r4, r3
 800340e:	bb34      	cbnz	r4, 800345e <_malloc_r+0x82>
 8003410:	4629      	mov	r1, r5
 8003412:	4638      	mov	r0, r7
 8003414:	f7ff ffc2 	bl	800339c <sbrk_aligned>
 8003418:	1c43      	adds	r3, r0, #1
 800341a:	4604      	mov	r4, r0
 800341c:	d14d      	bne.n	80034ba <_malloc_r+0xde>
 800341e:	6834      	ldr	r4, [r6, #0]
 8003420:	4626      	mov	r6, r4
 8003422:	2e00      	cmp	r6, #0
 8003424:	d140      	bne.n	80034a8 <_malloc_r+0xcc>
 8003426:	6823      	ldr	r3, [r4, #0]
 8003428:	4631      	mov	r1, r6
 800342a:	4638      	mov	r0, r7
 800342c:	eb04 0803 	add.w	r8, r4, r3
 8003430:	f000 fc92 	bl	8003d58 <_sbrk_r>
 8003434:	4580      	cmp	r8, r0
 8003436:	d13a      	bne.n	80034ae <_malloc_r+0xd2>
 8003438:	6821      	ldr	r1, [r4, #0]
 800343a:	3503      	adds	r5, #3
 800343c:	1a6d      	subs	r5, r5, r1
 800343e:	f025 0503 	bic.w	r5, r5, #3
 8003442:	3508      	adds	r5, #8
 8003444:	2d0c      	cmp	r5, #12
 8003446:	bf38      	it	cc
 8003448:	250c      	movcc	r5, #12
 800344a:	4638      	mov	r0, r7
 800344c:	4629      	mov	r1, r5
 800344e:	f7ff ffa5 	bl	800339c <sbrk_aligned>
 8003452:	3001      	adds	r0, #1
 8003454:	d02b      	beq.n	80034ae <_malloc_r+0xd2>
 8003456:	6823      	ldr	r3, [r4, #0]
 8003458:	442b      	add	r3, r5
 800345a:	6023      	str	r3, [r4, #0]
 800345c:	e00e      	b.n	800347c <_malloc_r+0xa0>
 800345e:	6822      	ldr	r2, [r4, #0]
 8003460:	1b52      	subs	r2, r2, r5
 8003462:	d41e      	bmi.n	80034a2 <_malloc_r+0xc6>
 8003464:	2a0b      	cmp	r2, #11
 8003466:	d916      	bls.n	8003496 <_malloc_r+0xba>
 8003468:	1961      	adds	r1, r4, r5
 800346a:	42a3      	cmp	r3, r4
 800346c:	6025      	str	r5, [r4, #0]
 800346e:	bf18      	it	ne
 8003470:	6059      	strne	r1, [r3, #4]
 8003472:	6863      	ldr	r3, [r4, #4]
 8003474:	bf08      	it	eq
 8003476:	6031      	streq	r1, [r6, #0]
 8003478:	5162      	str	r2, [r4, r5]
 800347a:	604b      	str	r3, [r1, #4]
 800347c:	4638      	mov	r0, r7
 800347e:	f104 060b 	add.w	r6, r4, #11
 8003482:	f000 ff99 	bl	80043b8 <__malloc_unlock>
 8003486:	f026 0607 	bic.w	r6, r6, #7
 800348a:	1d23      	adds	r3, r4, #4
 800348c:	1af2      	subs	r2, r6, r3
 800348e:	d0b6      	beq.n	80033fe <_malloc_r+0x22>
 8003490:	1b9b      	subs	r3, r3, r6
 8003492:	50a3      	str	r3, [r4, r2]
 8003494:	e7b3      	b.n	80033fe <_malloc_r+0x22>
 8003496:	6862      	ldr	r2, [r4, #4]
 8003498:	42a3      	cmp	r3, r4
 800349a:	bf0c      	ite	eq
 800349c:	6032      	streq	r2, [r6, #0]
 800349e:	605a      	strne	r2, [r3, #4]
 80034a0:	e7ec      	b.n	800347c <_malloc_r+0xa0>
 80034a2:	4623      	mov	r3, r4
 80034a4:	6864      	ldr	r4, [r4, #4]
 80034a6:	e7b2      	b.n	800340e <_malloc_r+0x32>
 80034a8:	4634      	mov	r4, r6
 80034aa:	6876      	ldr	r6, [r6, #4]
 80034ac:	e7b9      	b.n	8003422 <_malloc_r+0x46>
 80034ae:	230c      	movs	r3, #12
 80034b0:	4638      	mov	r0, r7
 80034b2:	603b      	str	r3, [r7, #0]
 80034b4:	f000 ff80 	bl	80043b8 <__malloc_unlock>
 80034b8:	e7a1      	b.n	80033fe <_malloc_r+0x22>
 80034ba:	6025      	str	r5, [r4, #0]
 80034bc:	e7de      	b.n	800347c <_malloc_r+0xa0>
 80034be:	bf00      	nop
 80034c0:	20000258 	.word	0x20000258

080034c4 <__ssputs_r>:
 80034c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80034c8:	688e      	ldr	r6, [r1, #8]
 80034ca:	4682      	mov	sl, r0
 80034cc:	429e      	cmp	r6, r3
 80034ce:	460c      	mov	r4, r1
 80034d0:	4690      	mov	r8, r2
 80034d2:	461f      	mov	r7, r3
 80034d4:	d838      	bhi.n	8003548 <__ssputs_r+0x84>
 80034d6:	898a      	ldrh	r2, [r1, #12]
 80034d8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80034dc:	d032      	beq.n	8003544 <__ssputs_r+0x80>
 80034de:	6825      	ldr	r5, [r4, #0]
 80034e0:	6909      	ldr	r1, [r1, #16]
 80034e2:	3301      	adds	r3, #1
 80034e4:	eba5 0901 	sub.w	r9, r5, r1
 80034e8:	6965      	ldr	r5, [r4, #20]
 80034ea:	444b      	add	r3, r9
 80034ec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80034f0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80034f4:	106d      	asrs	r5, r5, #1
 80034f6:	429d      	cmp	r5, r3
 80034f8:	bf38      	it	cc
 80034fa:	461d      	movcc	r5, r3
 80034fc:	0553      	lsls	r3, r2, #21
 80034fe:	d531      	bpl.n	8003564 <__ssputs_r+0xa0>
 8003500:	4629      	mov	r1, r5
 8003502:	f7ff ff6b 	bl	80033dc <_malloc_r>
 8003506:	4606      	mov	r6, r0
 8003508:	b950      	cbnz	r0, 8003520 <__ssputs_r+0x5c>
 800350a:	230c      	movs	r3, #12
 800350c:	f04f 30ff 	mov.w	r0, #4294967295
 8003510:	f8ca 3000 	str.w	r3, [sl]
 8003514:	89a3      	ldrh	r3, [r4, #12]
 8003516:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800351a:	81a3      	strh	r3, [r4, #12]
 800351c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003520:	464a      	mov	r2, r9
 8003522:	6921      	ldr	r1, [r4, #16]
 8003524:	f000 ff1a 	bl	800435c <memcpy>
 8003528:	89a3      	ldrh	r3, [r4, #12]
 800352a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800352e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003532:	81a3      	strh	r3, [r4, #12]
 8003534:	6126      	str	r6, [r4, #16]
 8003536:	444e      	add	r6, r9
 8003538:	6026      	str	r6, [r4, #0]
 800353a:	463e      	mov	r6, r7
 800353c:	6165      	str	r5, [r4, #20]
 800353e:	eba5 0509 	sub.w	r5, r5, r9
 8003542:	60a5      	str	r5, [r4, #8]
 8003544:	42be      	cmp	r6, r7
 8003546:	d900      	bls.n	800354a <__ssputs_r+0x86>
 8003548:	463e      	mov	r6, r7
 800354a:	4632      	mov	r2, r6
 800354c:	4641      	mov	r1, r8
 800354e:	6820      	ldr	r0, [r4, #0]
 8003550:	f000 ff12 	bl	8004378 <memmove>
 8003554:	68a3      	ldr	r3, [r4, #8]
 8003556:	2000      	movs	r0, #0
 8003558:	1b9b      	subs	r3, r3, r6
 800355a:	60a3      	str	r3, [r4, #8]
 800355c:	6823      	ldr	r3, [r4, #0]
 800355e:	4433      	add	r3, r6
 8003560:	6023      	str	r3, [r4, #0]
 8003562:	e7db      	b.n	800351c <__ssputs_r+0x58>
 8003564:	462a      	mov	r2, r5
 8003566:	f000 ff2d 	bl	80043c4 <_realloc_r>
 800356a:	4606      	mov	r6, r0
 800356c:	2800      	cmp	r0, #0
 800356e:	d1e1      	bne.n	8003534 <__ssputs_r+0x70>
 8003570:	4650      	mov	r0, sl
 8003572:	6921      	ldr	r1, [r4, #16]
 8003574:	f7ff feca 	bl	800330c <_free_r>
 8003578:	e7c7      	b.n	800350a <__ssputs_r+0x46>
	...

0800357c <_svfiprintf_r>:
 800357c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003580:	4698      	mov	r8, r3
 8003582:	898b      	ldrh	r3, [r1, #12]
 8003584:	4607      	mov	r7, r0
 8003586:	061b      	lsls	r3, r3, #24
 8003588:	460d      	mov	r5, r1
 800358a:	4614      	mov	r4, r2
 800358c:	b09d      	sub	sp, #116	; 0x74
 800358e:	d50e      	bpl.n	80035ae <_svfiprintf_r+0x32>
 8003590:	690b      	ldr	r3, [r1, #16]
 8003592:	b963      	cbnz	r3, 80035ae <_svfiprintf_r+0x32>
 8003594:	2140      	movs	r1, #64	; 0x40
 8003596:	f7ff ff21 	bl	80033dc <_malloc_r>
 800359a:	6028      	str	r0, [r5, #0]
 800359c:	6128      	str	r0, [r5, #16]
 800359e:	b920      	cbnz	r0, 80035aa <_svfiprintf_r+0x2e>
 80035a0:	230c      	movs	r3, #12
 80035a2:	603b      	str	r3, [r7, #0]
 80035a4:	f04f 30ff 	mov.w	r0, #4294967295
 80035a8:	e0d1      	b.n	800374e <_svfiprintf_r+0x1d2>
 80035aa:	2340      	movs	r3, #64	; 0x40
 80035ac:	616b      	str	r3, [r5, #20]
 80035ae:	2300      	movs	r3, #0
 80035b0:	9309      	str	r3, [sp, #36]	; 0x24
 80035b2:	2320      	movs	r3, #32
 80035b4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80035b8:	2330      	movs	r3, #48	; 0x30
 80035ba:	f04f 0901 	mov.w	r9, #1
 80035be:	f8cd 800c 	str.w	r8, [sp, #12]
 80035c2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003768 <_svfiprintf_r+0x1ec>
 80035c6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80035ca:	4623      	mov	r3, r4
 80035cc:	469a      	mov	sl, r3
 80035ce:	f813 2b01 	ldrb.w	r2, [r3], #1
 80035d2:	b10a      	cbz	r2, 80035d8 <_svfiprintf_r+0x5c>
 80035d4:	2a25      	cmp	r2, #37	; 0x25
 80035d6:	d1f9      	bne.n	80035cc <_svfiprintf_r+0x50>
 80035d8:	ebba 0b04 	subs.w	fp, sl, r4
 80035dc:	d00b      	beq.n	80035f6 <_svfiprintf_r+0x7a>
 80035de:	465b      	mov	r3, fp
 80035e0:	4622      	mov	r2, r4
 80035e2:	4629      	mov	r1, r5
 80035e4:	4638      	mov	r0, r7
 80035e6:	f7ff ff6d 	bl	80034c4 <__ssputs_r>
 80035ea:	3001      	adds	r0, #1
 80035ec:	f000 80aa 	beq.w	8003744 <_svfiprintf_r+0x1c8>
 80035f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80035f2:	445a      	add	r2, fp
 80035f4:	9209      	str	r2, [sp, #36]	; 0x24
 80035f6:	f89a 3000 	ldrb.w	r3, [sl]
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	f000 80a2 	beq.w	8003744 <_svfiprintf_r+0x1c8>
 8003600:	2300      	movs	r3, #0
 8003602:	f04f 32ff 	mov.w	r2, #4294967295
 8003606:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800360a:	f10a 0a01 	add.w	sl, sl, #1
 800360e:	9304      	str	r3, [sp, #16]
 8003610:	9307      	str	r3, [sp, #28]
 8003612:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003616:	931a      	str	r3, [sp, #104]	; 0x68
 8003618:	4654      	mov	r4, sl
 800361a:	2205      	movs	r2, #5
 800361c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003620:	4851      	ldr	r0, [pc, #324]	; (8003768 <_svfiprintf_r+0x1ec>)
 8003622:	f000 fe8d 	bl	8004340 <memchr>
 8003626:	9a04      	ldr	r2, [sp, #16]
 8003628:	b9d8      	cbnz	r0, 8003662 <_svfiprintf_r+0xe6>
 800362a:	06d0      	lsls	r0, r2, #27
 800362c:	bf44      	itt	mi
 800362e:	2320      	movmi	r3, #32
 8003630:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003634:	0711      	lsls	r1, r2, #28
 8003636:	bf44      	itt	mi
 8003638:	232b      	movmi	r3, #43	; 0x2b
 800363a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800363e:	f89a 3000 	ldrb.w	r3, [sl]
 8003642:	2b2a      	cmp	r3, #42	; 0x2a
 8003644:	d015      	beq.n	8003672 <_svfiprintf_r+0xf6>
 8003646:	4654      	mov	r4, sl
 8003648:	2000      	movs	r0, #0
 800364a:	f04f 0c0a 	mov.w	ip, #10
 800364e:	9a07      	ldr	r2, [sp, #28]
 8003650:	4621      	mov	r1, r4
 8003652:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003656:	3b30      	subs	r3, #48	; 0x30
 8003658:	2b09      	cmp	r3, #9
 800365a:	d94e      	bls.n	80036fa <_svfiprintf_r+0x17e>
 800365c:	b1b0      	cbz	r0, 800368c <_svfiprintf_r+0x110>
 800365e:	9207      	str	r2, [sp, #28]
 8003660:	e014      	b.n	800368c <_svfiprintf_r+0x110>
 8003662:	eba0 0308 	sub.w	r3, r0, r8
 8003666:	fa09 f303 	lsl.w	r3, r9, r3
 800366a:	4313      	orrs	r3, r2
 800366c:	46a2      	mov	sl, r4
 800366e:	9304      	str	r3, [sp, #16]
 8003670:	e7d2      	b.n	8003618 <_svfiprintf_r+0x9c>
 8003672:	9b03      	ldr	r3, [sp, #12]
 8003674:	1d19      	adds	r1, r3, #4
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	9103      	str	r1, [sp, #12]
 800367a:	2b00      	cmp	r3, #0
 800367c:	bfbb      	ittet	lt
 800367e:	425b      	neglt	r3, r3
 8003680:	f042 0202 	orrlt.w	r2, r2, #2
 8003684:	9307      	strge	r3, [sp, #28]
 8003686:	9307      	strlt	r3, [sp, #28]
 8003688:	bfb8      	it	lt
 800368a:	9204      	strlt	r2, [sp, #16]
 800368c:	7823      	ldrb	r3, [r4, #0]
 800368e:	2b2e      	cmp	r3, #46	; 0x2e
 8003690:	d10c      	bne.n	80036ac <_svfiprintf_r+0x130>
 8003692:	7863      	ldrb	r3, [r4, #1]
 8003694:	2b2a      	cmp	r3, #42	; 0x2a
 8003696:	d135      	bne.n	8003704 <_svfiprintf_r+0x188>
 8003698:	9b03      	ldr	r3, [sp, #12]
 800369a:	3402      	adds	r4, #2
 800369c:	1d1a      	adds	r2, r3, #4
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	9203      	str	r2, [sp, #12]
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	bfb8      	it	lt
 80036a6:	f04f 33ff 	movlt.w	r3, #4294967295
 80036aa:	9305      	str	r3, [sp, #20]
 80036ac:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 800376c <_svfiprintf_r+0x1f0>
 80036b0:	2203      	movs	r2, #3
 80036b2:	4650      	mov	r0, sl
 80036b4:	7821      	ldrb	r1, [r4, #0]
 80036b6:	f000 fe43 	bl	8004340 <memchr>
 80036ba:	b140      	cbz	r0, 80036ce <_svfiprintf_r+0x152>
 80036bc:	2340      	movs	r3, #64	; 0x40
 80036be:	eba0 000a 	sub.w	r0, r0, sl
 80036c2:	fa03 f000 	lsl.w	r0, r3, r0
 80036c6:	9b04      	ldr	r3, [sp, #16]
 80036c8:	3401      	adds	r4, #1
 80036ca:	4303      	orrs	r3, r0
 80036cc:	9304      	str	r3, [sp, #16]
 80036ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80036d2:	2206      	movs	r2, #6
 80036d4:	4826      	ldr	r0, [pc, #152]	; (8003770 <_svfiprintf_r+0x1f4>)
 80036d6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80036da:	f000 fe31 	bl	8004340 <memchr>
 80036de:	2800      	cmp	r0, #0
 80036e0:	d038      	beq.n	8003754 <_svfiprintf_r+0x1d8>
 80036e2:	4b24      	ldr	r3, [pc, #144]	; (8003774 <_svfiprintf_r+0x1f8>)
 80036e4:	bb1b      	cbnz	r3, 800372e <_svfiprintf_r+0x1b2>
 80036e6:	9b03      	ldr	r3, [sp, #12]
 80036e8:	3307      	adds	r3, #7
 80036ea:	f023 0307 	bic.w	r3, r3, #7
 80036ee:	3308      	adds	r3, #8
 80036f0:	9303      	str	r3, [sp, #12]
 80036f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80036f4:	4433      	add	r3, r6
 80036f6:	9309      	str	r3, [sp, #36]	; 0x24
 80036f8:	e767      	b.n	80035ca <_svfiprintf_r+0x4e>
 80036fa:	460c      	mov	r4, r1
 80036fc:	2001      	movs	r0, #1
 80036fe:	fb0c 3202 	mla	r2, ip, r2, r3
 8003702:	e7a5      	b.n	8003650 <_svfiprintf_r+0xd4>
 8003704:	2300      	movs	r3, #0
 8003706:	f04f 0c0a 	mov.w	ip, #10
 800370a:	4619      	mov	r1, r3
 800370c:	3401      	adds	r4, #1
 800370e:	9305      	str	r3, [sp, #20]
 8003710:	4620      	mov	r0, r4
 8003712:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003716:	3a30      	subs	r2, #48	; 0x30
 8003718:	2a09      	cmp	r2, #9
 800371a:	d903      	bls.n	8003724 <_svfiprintf_r+0x1a8>
 800371c:	2b00      	cmp	r3, #0
 800371e:	d0c5      	beq.n	80036ac <_svfiprintf_r+0x130>
 8003720:	9105      	str	r1, [sp, #20]
 8003722:	e7c3      	b.n	80036ac <_svfiprintf_r+0x130>
 8003724:	4604      	mov	r4, r0
 8003726:	2301      	movs	r3, #1
 8003728:	fb0c 2101 	mla	r1, ip, r1, r2
 800372c:	e7f0      	b.n	8003710 <_svfiprintf_r+0x194>
 800372e:	ab03      	add	r3, sp, #12
 8003730:	9300      	str	r3, [sp, #0]
 8003732:	462a      	mov	r2, r5
 8003734:	4638      	mov	r0, r7
 8003736:	4b10      	ldr	r3, [pc, #64]	; (8003778 <_svfiprintf_r+0x1fc>)
 8003738:	a904      	add	r1, sp, #16
 800373a:	f3af 8000 	nop.w
 800373e:	1c42      	adds	r2, r0, #1
 8003740:	4606      	mov	r6, r0
 8003742:	d1d6      	bne.n	80036f2 <_svfiprintf_r+0x176>
 8003744:	89ab      	ldrh	r3, [r5, #12]
 8003746:	065b      	lsls	r3, r3, #25
 8003748:	f53f af2c 	bmi.w	80035a4 <_svfiprintf_r+0x28>
 800374c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800374e:	b01d      	add	sp, #116	; 0x74
 8003750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003754:	ab03      	add	r3, sp, #12
 8003756:	9300      	str	r3, [sp, #0]
 8003758:	462a      	mov	r2, r5
 800375a:	4638      	mov	r0, r7
 800375c:	4b06      	ldr	r3, [pc, #24]	; (8003778 <_svfiprintf_r+0x1fc>)
 800375e:	a904      	add	r1, sp, #16
 8003760:	f000 f9d4 	bl	8003b0c <_printf_i>
 8003764:	e7eb      	b.n	800373e <_svfiprintf_r+0x1c2>
 8003766:	bf00      	nop
 8003768:	08004fba 	.word	0x08004fba
 800376c:	08004fc0 	.word	0x08004fc0
 8003770:	08004fc4 	.word	0x08004fc4
 8003774:	00000000 	.word	0x00000000
 8003778:	080034c5 	.word	0x080034c5

0800377c <__sfputc_r>:
 800377c:	6893      	ldr	r3, [r2, #8]
 800377e:	b410      	push	{r4}
 8003780:	3b01      	subs	r3, #1
 8003782:	2b00      	cmp	r3, #0
 8003784:	6093      	str	r3, [r2, #8]
 8003786:	da07      	bge.n	8003798 <__sfputc_r+0x1c>
 8003788:	6994      	ldr	r4, [r2, #24]
 800378a:	42a3      	cmp	r3, r4
 800378c:	db01      	blt.n	8003792 <__sfputc_r+0x16>
 800378e:	290a      	cmp	r1, #10
 8003790:	d102      	bne.n	8003798 <__sfputc_r+0x1c>
 8003792:	bc10      	pop	{r4}
 8003794:	f000 baf0 	b.w	8003d78 <__swbuf_r>
 8003798:	6813      	ldr	r3, [r2, #0]
 800379a:	1c58      	adds	r0, r3, #1
 800379c:	6010      	str	r0, [r2, #0]
 800379e:	7019      	strb	r1, [r3, #0]
 80037a0:	4608      	mov	r0, r1
 80037a2:	bc10      	pop	{r4}
 80037a4:	4770      	bx	lr

080037a6 <__sfputs_r>:
 80037a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037a8:	4606      	mov	r6, r0
 80037aa:	460f      	mov	r7, r1
 80037ac:	4614      	mov	r4, r2
 80037ae:	18d5      	adds	r5, r2, r3
 80037b0:	42ac      	cmp	r4, r5
 80037b2:	d101      	bne.n	80037b8 <__sfputs_r+0x12>
 80037b4:	2000      	movs	r0, #0
 80037b6:	e007      	b.n	80037c8 <__sfputs_r+0x22>
 80037b8:	463a      	mov	r2, r7
 80037ba:	4630      	mov	r0, r6
 80037bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80037c0:	f7ff ffdc 	bl	800377c <__sfputc_r>
 80037c4:	1c43      	adds	r3, r0, #1
 80037c6:	d1f3      	bne.n	80037b0 <__sfputs_r+0xa>
 80037c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080037cc <_vfiprintf_r>:
 80037cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037d0:	460d      	mov	r5, r1
 80037d2:	4614      	mov	r4, r2
 80037d4:	4698      	mov	r8, r3
 80037d6:	4606      	mov	r6, r0
 80037d8:	b09d      	sub	sp, #116	; 0x74
 80037da:	b118      	cbz	r0, 80037e4 <_vfiprintf_r+0x18>
 80037dc:	6983      	ldr	r3, [r0, #24]
 80037de:	b90b      	cbnz	r3, 80037e4 <_vfiprintf_r+0x18>
 80037e0:	f000 fca8 	bl	8004134 <__sinit>
 80037e4:	4b89      	ldr	r3, [pc, #548]	; (8003a0c <_vfiprintf_r+0x240>)
 80037e6:	429d      	cmp	r5, r3
 80037e8:	d11b      	bne.n	8003822 <_vfiprintf_r+0x56>
 80037ea:	6875      	ldr	r5, [r6, #4]
 80037ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80037ee:	07d9      	lsls	r1, r3, #31
 80037f0:	d405      	bmi.n	80037fe <_vfiprintf_r+0x32>
 80037f2:	89ab      	ldrh	r3, [r5, #12]
 80037f4:	059a      	lsls	r2, r3, #22
 80037f6:	d402      	bmi.n	80037fe <_vfiprintf_r+0x32>
 80037f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80037fa:	f000 fd39 	bl	8004270 <__retarget_lock_acquire_recursive>
 80037fe:	89ab      	ldrh	r3, [r5, #12]
 8003800:	071b      	lsls	r3, r3, #28
 8003802:	d501      	bpl.n	8003808 <_vfiprintf_r+0x3c>
 8003804:	692b      	ldr	r3, [r5, #16]
 8003806:	b9eb      	cbnz	r3, 8003844 <_vfiprintf_r+0x78>
 8003808:	4629      	mov	r1, r5
 800380a:	4630      	mov	r0, r6
 800380c:	f000 fb06 	bl	8003e1c <__swsetup_r>
 8003810:	b1c0      	cbz	r0, 8003844 <_vfiprintf_r+0x78>
 8003812:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003814:	07dc      	lsls	r4, r3, #31
 8003816:	d50e      	bpl.n	8003836 <_vfiprintf_r+0x6a>
 8003818:	f04f 30ff 	mov.w	r0, #4294967295
 800381c:	b01d      	add	sp, #116	; 0x74
 800381e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003822:	4b7b      	ldr	r3, [pc, #492]	; (8003a10 <_vfiprintf_r+0x244>)
 8003824:	429d      	cmp	r5, r3
 8003826:	d101      	bne.n	800382c <_vfiprintf_r+0x60>
 8003828:	68b5      	ldr	r5, [r6, #8]
 800382a:	e7df      	b.n	80037ec <_vfiprintf_r+0x20>
 800382c:	4b79      	ldr	r3, [pc, #484]	; (8003a14 <_vfiprintf_r+0x248>)
 800382e:	429d      	cmp	r5, r3
 8003830:	bf08      	it	eq
 8003832:	68f5      	ldreq	r5, [r6, #12]
 8003834:	e7da      	b.n	80037ec <_vfiprintf_r+0x20>
 8003836:	89ab      	ldrh	r3, [r5, #12]
 8003838:	0598      	lsls	r0, r3, #22
 800383a:	d4ed      	bmi.n	8003818 <_vfiprintf_r+0x4c>
 800383c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800383e:	f000 fd18 	bl	8004272 <__retarget_lock_release_recursive>
 8003842:	e7e9      	b.n	8003818 <_vfiprintf_r+0x4c>
 8003844:	2300      	movs	r3, #0
 8003846:	9309      	str	r3, [sp, #36]	; 0x24
 8003848:	2320      	movs	r3, #32
 800384a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800384e:	2330      	movs	r3, #48	; 0x30
 8003850:	f04f 0901 	mov.w	r9, #1
 8003854:	f8cd 800c 	str.w	r8, [sp, #12]
 8003858:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8003a18 <_vfiprintf_r+0x24c>
 800385c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003860:	4623      	mov	r3, r4
 8003862:	469a      	mov	sl, r3
 8003864:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003868:	b10a      	cbz	r2, 800386e <_vfiprintf_r+0xa2>
 800386a:	2a25      	cmp	r2, #37	; 0x25
 800386c:	d1f9      	bne.n	8003862 <_vfiprintf_r+0x96>
 800386e:	ebba 0b04 	subs.w	fp, sl, r4
 8003872:	d00b      	beq.n	800388c <_vfiprintf_r+0xc0>
 8003874:	465b      	mov	r3, fp
 8003876:	4622      	mov	r2, r4
 8003878:	4629      	mov	r1, r5
 800387a:	4630      	mov	r0, r6
 800387c:	f7ff ff93 	bl	80037a6 <__sfputs_r>
 8003880:	3001      	adds	r0, #1
 8003882:	f000 80aa 	beq.w	80039da <_vfiprintf_r+0x20e>
 8003886:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003888:	445a      	add	r2, fp
 800388a:	9209      	str	r2, [sp, #36]	; 0x24
 800388c:	f89a 3000 	ldrb.w	r3, [sl]
 8003890:	2b00      	cmp	r3, #0
 8003892:	f000 80a2 	beq.w	80039da <_vfiprintf_r+0x20e>
 8003896:	2300      	movs	r3, #0
 8003898:	f04f 32ff 	mov.w	r2, #4294967295
 800389c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80038a0:	f10a 0a01 	add.w	sl, sl, #1
 80038a4:	9304      	str	r3, [sp, #16]
 80038a6:	9307      	str	r3, [sp, #28]
 80038a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80038ac:	931a      	str	r3, [sp, #104]	; 0x68
 80038ae:	4654      	mov	r4, sl
 80038b0:	2205      	movs	r2, #5
 80038b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038b6:	4858      	ldr	r0, [pc, #352]	; (8003a18 <_vfiprintf_r+0x24c>)
 80038b8:	f000 fd42 	bl	8004340 <memchr>
 80038bc:	9a04      	ldr	r2, [sp, #16]
 80038be:	b9d8      	cbnz	r0, 80038f8 <_vfiprintf_r+0x12c>
 80038c0:	06d1      	lsls	r1, r2, #27
 80038c2:	bf44      	itt	mi
 80038c4:	2320      	movmi	r3, #32
 80038c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80038ca:	0713      	lsls	r3, r2, #28
 80038cc:	bf44      	itt	mi
 80038ce:	232b      	movmi	r3, #43	; 0x2b
 80038d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80038d4:	f89a 3000 	ldrb.w	r3, [sl]
 80038d8:	2b2a      	cmp	r3, #42	; 0x2a
 80038da:	d015      	beq.n	8003908 <_vfiprintf_r+0x13c>
 80038dc:	4654      	mov	r4, sl
 80038de:	2000      	movs	r0, #0
 80038e0:	f04f 0c0a 	mov.w	ip, #10
 80038e4:	9a07      	ldr	r2, [sp, #28]
 80038e6:	4621      	mov	r1, r4
 80038e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80038ec:	3b30      	subs	r3, #48	; 0x30
 80038ee:	2b09      	cmp	r3, #9
 80038f0:	d94e      	bls.n	8003990 <_vfiprintf_r+0x1c4>
 80038f2:	b1b0      	cbz	r0, 8003922 <_vfiprintf_r+0x156>
 80038f4:	9207      	str	r2, [sp, #28]
 80038f6:	e014      	b.n	8003922 <_vfiprintf_r+0x156>
 80038f8:	eba0 0308 	sub.w	r3, r0, r8
 80038fc:	fa09 f303 	lsl.w	r3, r9, r3
 8003900:	4313      	orrs	r3, r2
 8003902:	46a2      	mov	sl, r4
 8003904:	9304      	str	r3, [sp, #16]
 8003906:	e7d2      	b.n	80038ae <_vfiprintf_r+0xe2>
 8003908:	9b03      	ldr	r3, [sp, #12]
 800390a:	1d19      	adds	r1, r3, #4
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	9103      	str	r1, [sp, #12]
 8003910:	2b00      	cmp	r3, #0
 8003912:	bfbb      	ittet	lt
 8003914:	425b      	neglt	r3, r3
 8003916:	f042 0202 	orrlt.w	r2, r2, #2
 800391a:	9307      	strge	r3, [sp, #28]
 800391c:	9307      	strlt	r3, [sp, #28]
 800391e:	bfb8      	it	lt
 8003920:	9204      	strlt	r2, [sp, #16]
 8003922:	7823      	ldrb	r3, [r4, #0]
 8003924:	2b2e      	cmp	r3, #46	; 0x2e
 8003926:	d10c      	bne.n	8003942 <_vfiprintf_r+0x176>
 8003928:	7863      	ldrb	r3, [r4, #1]
 800392a:	2b2a      	cmp	r3, #42	; 0x2a
 800392c:	d135      	bne.n	800399a <_vfiprintf_r+0x1ce>
 800392e:	9b03      	ldr	r3, [sp, #12]
 8003930:	3402      	adds	r4, #2
 8003932:	1d1a      	adds	r2, r3, #4
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	9203      	str	r2, [sp, #12]
 8003938:	2b00      	cmp	r3, #0
 800393a:	bfb8      	it	lt
 800393c:	f04f 33ff 	movlt.w	r3, #4294967295
 8003940:	9305      	str	r3, [sp, #20]
 8003942:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8003a1c <_vfiprintf_r+0x250>
 8003946:	2203      	movs	r2, #3
 8003948:	4650      	mov	r0, sl
 800394a:	7821      	ldrb	r1, [r4, #0]
 800394c:	f000 fcf8 	bl	8004340 <memchr>
 8003950:	b140      	cbz	r0, 8003964 <_vfiprintf_r+0x198>
 8003952:	2340      	movs	r3, #64	; 0x40
 8003954:	eba0 000a 	sub.w	r0, r0, sl
 8003958:	fa03 f000 	lsl.w	r0, r3, r0
 800395c:	9b04      	ldr	r3, [sp, #16]
 800395e:	3401      	adds	r4, #1
 8003960:	4303      	orrs	r3, r0
 8003962:	9304      	str	r3, [sp, #16]
 8003964:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003968:	2206      	movs	r2, #6
 800396a:	482d      	ldr	r0, [pc, #180]	; (8003a20 <_vfiprintf_r+0x254>)
 800396c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003970:	f000 fce6 	bl	8004340 <memchr>
 8003974:	2800      	cmp	r0, #0
 8003976:	d03f      	beq.n	80039f8 <_vfiprintf_r+0x22c>
 8003978:	4b2a      	ldr	r3, [pc, #168]	; (8003a24 <_vfiprintf_r+0x258>)
 800397a:	bb1b      	cbnz	r3, 80039c4 <_vfiprintf_r+0x1f8>
 800397c:	9b03      	ldr	r3, [sp, #12]
 800397e:	3307      	adds	r3, #7
 8003980:	f023 0307 	bic.w	r3, r3, #7
 8003984:	3308      	adds	r3, #8
 8003986:	9303      	str	r3, [sp, #12]
 8003988:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800398a:	443b      	add	r3, r7
 800398c:	9309      	str	r3, [sp, #36]	; 0x24
 800398e:	e767      	b.n	8003860 <_vfiprintf_r+0x94>
 8003990:	460c      	mov	r4, r1
 8003992:	2001      	movs	r0, #1
 8003994:	fb0c 3202 	mla	r2, ip, r2, r3
 8003998:	e7a5      	b.n	80038e6 <_vfiprintf_r+0x11a>
 800399a:	2300      	movs	r3, #0
 800399c:	f04f 0c0a 	mov.w	ip, #10
 80039a0:	4619      	mov	r1, r3
 80039a2:	3401      	adds	r4, #1
 80039a4:	9305      	str	r3, [sp, #20]
 80039a6:	4620      	mov	r0, r4
 80039a8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80039ac:	3a30      	subs	r2, #48	; 0x30
 80039ae:	2a09      	cmp	r2, #9
 80039b0:	d903      	bls.n	80039ba <_vfiprintf_r+0x1ee>
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	d0c5      	beq.n	8003942 <_vfiprintf_r+0x176>
 80039b6:	9105      	str	r1, [sp, #20]
 80039b8:	e7c3      	b.n	8003942 <_vfiprintf_r+0x176>
 80039ba:	4604      	mov	r4, r0
 80039bc:	2301      	movs	r3, #1
 80039be:	fb0c 2101 	mla	r1, ip, r1, r2
 80039c2:	e7f0      	b.n	80039a6 <_vfiprintf_r+0x1da>
 80039c4:	ab03      	add	r3, sp, #12
 80039c6:	9300      	str	r3, [sp, #0]
 80039c8:	462a      	mov	r2, r5
 80039ca:	4630      	mov	r0, r6
 80039cc:	4b16      	ldr	r3, [pc, #88]	; (8003a28 <_vfiprintf_r+0x25c>)
 80039ce:	a904      	add	r1, sp, #16
 80039d0:	f3af 8000 	nop.w
 80039d4:	4607      	mov	r7, r0
 80039d6:	1c78      	adds	r0, r7, #1
 80039d8:	d1d6      	bne.n	8003988 <_vfiprintf_r+0x1bc>
 80039da:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80039dc:	07d9      	lsls	r1, r3, #31
 80039de:	d405      	bmi.n	80039ec <_vfiprintf_r+0x220>
 80039e0:	89ab      	ldrh	r3, [r5, #12]
 80039e2:	059a      	lsls	r2, r3, #22
 80039e4:	d402      	bmi.n	80039ec <_vfiprintf_r+0x220>
 80039e6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80039e8:	f000 fc43 	bl	8004272 <__retarget_lock_release_recursive>
 80039ec:	89ab      	ldrh	r3, [r5, #12]
 80039ee:	065b      	lsls	r3, r3, #25
 80039f0:	f53f af12 	bmi.w	8003818 <_vfiprintf_r+0x4c>
 80039f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80039f6:	e711      	b.n	800381c <_vfiprintf_r+0x50>
 80039f8:	ab03      	add	r3, sp, #12
 80039fa:	9300      	str	r3, [sp, #0]
 80039fc:	462a      	mov	r2, r5
 80039fe:	4630      	mov	r0, r6
 8003a00:	4b09      	ldr	r3, [pc, #36]	; (8003a28 <_vfiprintf_r+0x25c>)
 8003a02:	a904      	add	r1, sp, #16
 8003a04:	f000 f882 	bl	8003b0c <_printf_i>
 8003a08:	e7e4      	b.n	80039d4 <_vfiprintf_r+0x208>
 8003a0a:	bf00      	nop
 8003a0c:	08005010 	.word	0x08005010
 8003a10:	08005030 	.word	0x08005030
 8003a14:	08004ff0 	.word	0x08004ff0
 8003a18:	08004fba 	.word	0x08004fba
 8003a1c:	08004fc0 	.word	0x08004fc0
 8003a20:	08004fc4 	.word	0x08004fc4
 8003a24:	00000000 	.word	0x00000000
 8003a28:	080037a7 	.word	0x080037a7

08003a2c <_printf_common>:
 8003a2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a30:	4616      	mov	r6, r2
 8003a32:	4699      	mov	r9, r3
 8003a34:	688a      	ldr	r2, [r1, #8]
 8003a36:	690b      	ldr	r3, [r1, #16]
 8003a38:	4607      	mov	r7, r0
 8003a3a:	4293      	cmp	r3, r2
 8003a3c:	bfb8      	it	lt
 8003a3e:	4613      	movlt	r3, r2
 8003a40:	6033      	str	r3, [r6, #0]
 8003a42:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003a46:	460c      	mov	r4, r1
 8003a48:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003a4c:	b10a      	cbz	r2, 8003a52 <_printf_common+0x26>
 8003a4e:	3301      	adds	r3, #1
 8003a50:	6033      	str	r3, [r6, #0]
 8003a52:	6823      	ldr	r3, [r4, #0]
 8003a54:	0699      	lsls	r1, r3, #26
 8003a56:	bf42      	ittt	mi
 8003a58:	6833      	ldrmi	r3, [r6, #0]
 8003a5a:	3302      	addmi	r3, #2
 8003a5c:	6033      	strmi	r3, [r6, #0]
 8003a5e:	6825      	ldr	r5, [r4, #0]
 8003a60:	f015 0506 	ands.w	r5, r5, #6
 8003a64:	d106      	bne.n	8003a74 <_printf_common+0x48>
 8003a66:	f104 0a19 	add.w	sl, r4, #25
 8003a6a:	68e3      	ldr	r3, [r4, #12]
 8003a6c:	6832      	ldr	r2, [r6, #0]
 8003a6e:	1a9b      	subs	r3, r3, r2
 8003a70:	42ab      	cmp	r3, r5
 8003a72:	dc28      	bgt.n	8003ac6 <_printf_common+0x9a>
 8003a74:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003a78:	1e13      	subs	r3, r2, #0
 8003a7a:	6822      	ldr	r2, [r4, #0]
 8003a7c:	bf18      	it	ne
 8003a7e:	2301      	movne	r3, #1
 8003a80:	0692      	lsls	r2, r2, #26
 8003a82:	d42d      	bmi.n	8003ae0 <_printf_common+0xb4>
 8003a84:	4649      	mov	r1, r9
 8003a86:	4638      	mov	r0, r7
 8003a88:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003a8c:	47c0      	blx	r8
 8003a8e:	3001      	adds	r0, #1
 8003a90:	d020      	beq.n	8003ad4 <_printf_common+0xa8>
 8003a92:	6823      	ldr	r3, [r4, #0]
 8003a94:	68e5      	ldr	r5, [r4, #12]
 8003a96:	f003 0306 	and.w	r3, r3, #6
 8003a9a:	2b04      	cmp	r3, #4
 8003a9c:	bf18      	it	ne
 8003a9e:	2500      	movne	r5, #0
 8003aa0:	6832      	ldr	r2, [r6, #0]
 8003aa2:	f04f 0600 	mov.w	r6, #0
 8003aa6:	68a3      	ldr	r3, [r4, #8]
 8003aa8:	bf08      	it	eq
 8003aaa:	1aad      	subeq	r5, r5, r2
 8003aac:	6922      	ldr	r2, [r4, #16]
 8003aae:	bf08      	it	eq
 8003ab0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003ab4:	4293      	cmp	r3, r2
 8003ab6:	bfc4      	itt	gt
 8003ab8:	1a9b      	subgt	r3, r3, r2
 8003aba:	18ed      	addgt	r5, r5, r3
 8003abc:	341a      	adds	r4, #26
 8003abe:	42b5      	cmp	r5, r6
 8003ac0:	d11a      	bne.n	8003af8 <_printf_common+0xcc>
 8003ac2:	2000      	movs	r0, #0
 8003ac4:	e008      	b.n	8003ad8 <_printf_common+0xac>
 8003ac6:	2301      	movs	r3, #1
 8003ac8:	4652      	mov	r2, sl
 8003aca:	4649      	mov	r1, r9
 8003acc:	4638      	mov	r0, r7
 8003ace:	47c0      	blx	r8
 8003ad0:	3001      	adds	r0, #1
 8003ad2:	d103      	bne.n	8003adc <_printf_common+0xb0>
 8003ad4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ad8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003adc:	3501      	adds	r5, #1
 8003ade:	e7c4      	b.n	8003a6a <_printf_common+0x3e>
 8003ae0:	2030      	movs	r0, #48	; 0x30
 8003ae2:	18e1      	adds	r1, r4, r3
 8003ae4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003ae8:	1c5a      	adds	r2, r3, #1
 8003aea:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003aee:	4422      	add	r2, r4
 8003af0:	3302      	adds	r3, #2
 8003af2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003af6:	e7c5      	b.n	8003a84 <_printf_common+0x58>
 8003af8:	2301      	movs	r3, #1
 8003afa:	4622      	mov	r2, r4
 8003afc:	4649      	mov	r1, r9
 8003afe:	4638      	mov	r0, r7
 8003b00:	47c0      	blx	r8
 8003b02:	3001      	adds	r0, #1
 8003b04:	d0e6      	beq.n	8003ad4 <_printf_common+0xa8>
 8003b06:	3601      	adds	r6, #1
 8003b08:	e7d9      	b.n	8003abe <_printf_common+0x92>
	...

08003b0c <_printf_i>:
 8003b0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003b10:	7e0f      	ldrb	r7, [r1, #24]
 8003b12:	4691      	mov	r9, r2
 8003b14:	2f78      	cmp	r7, #120	; 0x78
 8003b16:	4680      	mov	r8, r0
 8003b18:	460c      	mov	r4, r1
 8003b1a:	469a      	mov	sl, r3
 8003b1c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003b1e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003b22:	d807      	bhi.n	8003b34 <_printf_i+0x28>
 8003b24:	2f62      	cmp	r7, #98	; 0x62
 8003b26:	d80a      	bhi.n	8003b3e <_printf_i+0x32>
 8003b28:	2f00      	cmp	r7, #0
 8003b2a:	f000 80d9 	beq.w	8003ce0 <_printf_i+0x1d4>
 8003b2e:	2f58      	cmp	r7, #88	; 0x58
 8003b30:	f000 80a4 	beq.w	8003c7c <_printf_i+0x170>
 8003b34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003b38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003b3c:	e03a      	b.n	8003bb4 <_printf_i+0xa8>
 8003b3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003b42:	2b15      	cmp	r3, #21
 8003b44:	d8f6      	bhi.n	8003b34 <_printf_i+0x28>
 8003b46:	a101      	add	r1, pc, #4	; (adr r1, 8003b4c <_printf_i+0x40>)
 8003b48:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003b4c:	08003ba5 	.word	0x08003ba5
 8003b50:	08003bb9 	.word	0x08003bb9
 8003b54:	08003b35 	.word	0x08003b35
 8003b58:	08003b35 	.word	0x08003b35
 8003b5c:	08003b35 	.word	0x08003b35
 8003b60:	08003b35 	.word	0x08003b35
 8003b64:	08003bb9 	.word	0x08003bb9
 8003b68:	08003b35 	.word	0x08003b35
 8003b6c:	08003b35 	.word	0x08003b35
 8003b70:	08003b35 	.word	0x08003b35
 8003b74:	08003b35 	.word	0x08003b35
 8003b78:	08003cc7 	.word	0x08003cc7
 8003b7c:	08003be9 	.word	0x08003be9
 8003b80:	08003ca9 	.word	0x08003ca9
 8003b84:	08003b35 	.word	0x08003b35
 8003b88:	08003b35 	.word	0x08003b35
 8003b8c:	08003ce9 	.word	0x08003ce9
 8003b90:	08003b35 	.word	0x08003b35
 8003b94:	08003be9 	.word	0x08003be9
 8003b98:	08003b35 	.word	0x08003b35
 8003b9c:	08003b35 	.word	0x08003b35
 8003ba0:	08003cb1 	.word	0x08003cb1
 8003ba4:	682b      	ldr	r3, [r5, #0]
 8003ba6:	1d1a      	adds	r2, r3, #4
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	602a      	str	r2, [r5, #0]
 8003bac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003bb0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003bb4:	2301      	movs	r3, #1
 8003bb6:	e0a4      	b.n	8003d02 <_printf_i+0x1f6>
 8003bb8:	6820      	ldr	r0, [r4, #0]
 8003bba:	6829      	ldr	r1, [r5, #0]
 8003bbc:	0606      	lsls	r6, r0, #24
 8003bbe:	f101 0304 	add.w	r3, r1, #4
 8003bc2:	d50a      	bpl.n	8003bda <_printf_i+0xce>
 8003bc4:	680e      	ldr	r6, [r1, #0]
 8003bc6:	602b      	str	r3, [r5, #0]
 8003bc8:	2e00      	cmp	r6, #0
 8003bca:	da03      	bge.n	8003bd4 <_printf_i+0xc8>
 8003bcc:	232d      	movs	r3, #45	; 0x2d
 8003bce:	4276      	negs	r6, r6
 8003bd0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003bd4:	230a      	movs	r3, #10
 8003bd6:	485e      	ldr	r0, [pc, #376]	; (8003d50 <_printf_i+0x244>)
 8003bd8:	e019      	b.n	8003c0e <_printf_i+0x102>
 8003bda:	680e      	ldr	r6, [r1, #0]
 8003bdc:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003be0:	602b      	str	r3, [r5, #0]
 8003be2:	bf18      	it	ne
 8003be4:	b236      	sxthne	r6, r6
 8003be6:	e7ef      	b.n	8003bc8 <_printf_i+0xbc>
 8003be8:	682b      	ldr	r3, [r5, #0]
 8003bea:	6820      	ldr	r0, [r4, #0]
 8003bec:	1d19      	adds	r1, r3, #4
 8003bee:	6029      	str	r1, [r5, #0]
 8003bf0:	0601      	lsls	r1, r0, #24
 8003bf2:	d501      	bpl.n	8003bf8 <_printf_i+0xec>
 8003bf4:	681e      	ldr	r6, [r3, #0]
 8003bf6:	e002      	b.n	8003bfe <_printf_i+0xf2>
 8003bf8:	0646      	lsls	r6, r0, #25
 8003bfa:	d5fb      	bpl.n	8003bf4 <_printf_i+0xe8>
 8003bfc:	881e      	ldrh	r6, [r3, #0]
 8003bfe:	2f6f      	cmp	r7, #111	; 0x6f
 8003c00:	bf0c      	ite	eq
 8003c02:	2308      	moveq	r3, #8
 8003c04:	230a      	movne	r3, #10
 8003c06:	4852      	ldr	r0, [pc, #328]	; (8003d50 <_printf_i+0x244>)
 8003c08:	2100      	movs	r1, #0
 8003c0a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003c0e:	6865      	ldr	r5, [r4, #4]
 8003c10:	2d00      	cmp	r5, #0
 8003c12:	bfa8      	it	ge
 8003c14:	6821      	ldrge	r1, [r4, #0]
 8003c16:	60a5      	str	r5, [r4, #8]
 8003c18:	bfa4      	itt	ge
 8003c1a:	f021 0104 	bicge.w	r1, r1, #4
 8003c1e:	6021      	strge	r1, [r4, #0]
 8003c20:	b90e      	cbnz	r6, 8003c26 <_printf_i+0x11a>
 8003c22:	2d00      	cmp	r5, #0
 8003c24:	d04d      	beq.n	8003cc2 <_printf_i+0x1b6>
 8003c26:	4615      	mov	r5, r2
 8003c28:	fbb6 f1f3 	udiv	r1, r6, r3
 8003c2c:	fb03 6711 	mls	r7, r3, r1, r6
 8003c30:	5dc7      	ldrb	r7, [r0, r7]
 8003c32:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003c36:	4637      	mov	r7, r6
 8003c38:	42bb      	cmp	r3, r7
 8003c3a:	460e      	mov	r6, r1
 8003c3c:	d9f4      	bls.n	8003c28 <_printf_i+0x11c>
 8003c3e:	2b08      	cmp	r3, #8
 8003c40:	d10b      	bne.n	8003c5a <_printf_i+0x14e>
 8003c42:	6823      	ldr	r3, [r4, #0]
 8003c44:	07de      	lsls	r6, r3, #31
 8003c46:	d508      	bpl.n	8003c5a <_printf_i+0x14e>
 8003c48:	6923      	ldr	r3, [r4, #16]
 8003c4a:	6861      	ldr	r1, [r4, #4]
 8003c4c:	4299      	cmp	r1, r3
 8003c4e:	bfde      	ittt	le
 8003c50:	2330      	movle	r3, #48	; 0x30
 8003c52:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003c56:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003c5a:	1b52      	subs	r2, r2, r5
 8003c5c:	6122      	str	r2, [r4, #16]
 8003c5e:	464b      	mov	r3, r9
 8003c60:	4621      	mov	r1, r4
 8003c62:	4640      	mov	r0, r8
 8003c64:	f8cd a000 	str.w	sl, [sp]
 8003c68:	aa03      	add	r2, sp, #12
 8003c6a:	f7ff fedf 	bl	8003a2c <_printf_common>
 8003c6e:	3001      	adds	r0, #1
 8003c70:	d14c      	bne.n	8003d0c <_printf_i+0x200>
 8003c72:	f04f 30ff 	mov.w	r0, #4294967295
 8003c76:	b004      	add	sp, #16
 8003c78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c7c:	4834      	ldr	r0, [pc, #208]	; (8003d50 <_printf_i+0x244>)
 8003c7e:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8003c82:	6829      	ldr	r1, [r5, #0]
 8003c84:	6823      	ldr	r3, [r4, #0]
 8003c86:	f851 6b04 	ldr.w	r6, [r1], #4
 8003c8a:	6029      	str	r1, [r5, #0]
 8003c8c:	061d      	lsls	r5, r3, #24
 8003c8e:	d514      	bpl.n	8003cba <_printf_i+0x1ae>
 8003c90:	07df      	lsls	r7, r3, #31
 8003c92:	bf44      	itt	mi
 8003c94:	f043 0320 	orrmi.w	r3, r3, #32
 8003c98:	6023      	strmi	r3, [r4, #0]
 8003c9a:	b91e      	cbnz	r6, 8003ca4 <_printf_i+0x198>
 8003c9c:	6823      	ldr	r3, [r4, #0]
 8003c9e:	f023 0320 	bic.w	r3, r3, #32
 8003ca2:	6023      	str	r3, [r4, #0]
 8003ca4:	2310      	movs	r3, #16
 8003ca6:	e7af      	b.n	8003c08 <_printf_i+0xfc>
 8003ca8:	6823      	ldr	r3, [r4, #0]
 8003caa:	f043 0320 	orr.w	r3, r3, #32
 8003cae:	6023      	str	r3, [r4, #0]
 8003cb0:	2378      	movs	r3, #120	; 0x78
 8003cb2:	4828      	ldr	r0, [pc, #160]	; (8003d54 <_printf_i+0x248>)
 8003cb4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003cb8:	e7e3      	b.n	8003c82 <_printf_i+0x176>
 8003cba:	0659      	lsls	r1, r3, #25
 8003cbc:	bf48      	it	mi
 8003cbe:	b2b6      	uxthmi	r6, r6
 8003cc0:	e7e6      	b.n	8003c90 <_printf_i+0x184>
 8003cc2:	4615      	mov	r5, r2
 8003cc4:	e7bb      	b.n	8003c3e <_printf_i+0x132>
 8003cc6:	682b      	ldr	r3, [r5, #0]
 8003cc8:	6826      	ldr	r6, [r4, #0]
 8003cca:	1d18      	adds	r0, r3, #4
 8003ccc:	6961      	ldr	r1, [r4, #20]
 8003cce:	6028      	str	r0, [r5, #0]
 8003cd0:	0635      	lsls	r5, r6, #24
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	d501      	bpl.n	8003cda <_printf_i+0x1ce>
 8003cd6:	6019      	str	r1, [r3, #0]
 8003cd8:	e002      	b.n	8003ce0 <_printf_i+0x1d4>
 8003cda:	0670      	lsls	r0, r6, #25
 8003cdc:	d5fb      	bpl.n	8003cd6 <_printf_i+0x1ca>
 8003cde:	8019      	strh	r1, [r3, #0]
 8003ce0:	2300      	movs	r3, #0
 8003ce2:	4615      	mov	r5, r2
 8003ce4:	6123      	str	r3, [r4, #16]
 8003ce6:	e7ba      	b.n	8003c5e <_printf_i+0x152>
 8003ce8:	682b      	ldr	r3, [r5, #0]
 8003cea:	2100      	movs	r1, #0
 8003cec:	1d1a      	adds	r2, r3, #4
 8003cee:	602a      	str	r2, [r5, #0]
 8003cf0:	681d      	ldr	r5, [r3, #0]
 8003cf2:	6862      	ldr	r2, [r4, #4]
 8003cf4:	4628      	mov	r0, r5
 8003cf6:	f000 fb23 	bl	8004340 <memchr>
 8003cfa:	b108      	cbz	r0, 8003d00 <_printf_i+0x1f4>
 8003cfc:	1b40      	subs	r0, r0, r5
 8003cfe:	6060      	str	r0, [r4, #4]
 8003d00:	6863      	ldr	r3, [r4, #4]
 8003d02:	6123      	str	r3, [r4, #16]
 8003d04:	2300      	movs	r3, #0
 8003d06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003d0a:	e7a8      	b.n	8003c5e <_printf_i+0x152>
 8003d0c:	462a      	mov	r2, r5
 8003d0e:	4649      	mov	r1, r9
 8003d10:	4640      	mov	r0, r8
 8003d12:	6923      	ldr	r3, [r4, #16]
 8003d14:	47d0      	blx	sl
 8003d16:	3001      	adds	r0, #1
 8003d18:	d0ab      	beq.n	8003c72 <_printf_i+0x166>
 8003d1a:	6823      	ldr	r3, [r4, #0]
 8003d1c:	079b      	lsls	r3, r3, #30
 8003d1e:	d413      	bmi.n	8003d48 <_printf_i+0x23c>
 8003d20:	68e0      	ldr	r0, [r4, #12]
 8003d22:	9b03      	ldr	r3, [sp, #12]
 8003d24:	4298      	cmp	r0, r3
 8003d26:	bfb8      	it	lt
 8003d28:	4618      	movlt	r0, r3
 8003d2a:	e7a4      	b.n	8003c76 <_printf_i+0x16a>
 8003d2c:	2301      	movs	r3, #1
 8003d2e:	4632      	mov	r2, r6
 8003d30:	4649      	mov	r1, r9
 8003d32:	4640      	mov	r0, r8
 8003d34:	47d0      	blx	sl
 8003d36:	3001      	adds	r0, #1
 8003d38:	d09b      	beq.n	8003c72 <_printf_i+0x166>
 8003d3a:	3501      	adds	r5, #1
 8003d3c:	68e3      	ldr	r3, [r4, #12]
 8003d3e:	9903      	ldr	r1, [sp, #12]
 8003d40:	1a5b      	subs	r3, r3, r1
 8003d42:	42ab      	cmp	r3, r5
 8003d44:	dcf2      	bgt.n	8003d2c <_printf_i+0x220>
 8003d46:	e7eb      	b.n	8003d20 <_printf_i+0x214>
 8003d48:	2500      	movs	r5, #0
 8003d4a:	f104 0619 	add.w	r6, r4, #25
 8003d4e:	e7f5      	b.n	8003d3c <_printf_i+0x230>
 8003d50:	08004fcb 	.word	0x08004fcb
 8003d54:	08004fdc 	.word	0x08004fdc

08003d58 <_sbrk_r>:
 8003d58:	b538      	push	{r3, r4, r5, lr}
 8003d5a:	2300      	movs	r3, #0
 8003d5c:	4d05      	ldr	r5, [pc, #20]	; (8003d74 <_sbrk_r+0x1c>)
 8003d5e:	4604      	mov	r4, r0
 8003d60:	4608      	mov	r0, r1
 8003d62:	602b      	str	r3, [r5, #0]
 8003d64:	f7fd faf8 	bl	8001358 <_sbrk>
 8003d68:	1c43      	adds	r3, r0, #1
 8003d6a:	d102      	bne.n	8003d72 <_sbrk_r+0x1a>
 8003d6c:	682b      	ldr	r3, [r5, #0]
 8003d6e:	b103      	cbz	r3, 8003d72 <_sbrk_r+0x1a>
 8003d70:	6023      	str	r3, [r4, #0]
 8003d72:	bd38      	pop	{r3, r4, r5, pc}
 8003d74:	20000264 	.word	0x20000264

08003d78 <__swbuf_r>:
 8003d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d7a:	460e      	mov	r6, r1
 8003d7c:	4614      	mov	r4, r2
 8003d7e:	4605      	mov	r5, r0
 8003d80:	b118      	cbz	r0, 8003d8a <__swbuf_r+0x12>
 8003d82:	6983      	ldr	r3, [r0, #24]
 8003d84:	b90b      	cbnz	r3, 8003d8a <__swbuf_r+0x12>
 8003d86:	f000 f9d5 	bl	8004134 <__sinit>
 8003d8a:	4b21      	ldr	r3, [pc, #132]	; (8003e10 <__swbuf_r+0x98>)
 8003d8c:	429c      	cmp	r4, r3
 8003d8e:	d12b      	bne.n	8003de8 <__swbuf_r+0x70>
 8003d90:	686c      	ldr	r4, [r5, #4]
 8003d92:	69a3      	ldr	r3, [r4, #24]
 8003d94:	60a3      	str	r3, [r4, #8]
 8003d96:	89a3      	ldrh	r3, [r4, #12]
 8003d98:	071a      	lsls	r2, r3, #28
 8003d9a:	d52f      	bpl.n	8003dfc <__swbuf_r+0x84>
 8003d9c:	6923      	ldr	r3, [r4, #16]
 8003d9e:	b36b      	cbz	r3, 8003dfc <__swbuf_r+0x84>
 8003da0:	6923      	ldr	r3, [r4, #16]
 8003da2:	6820      	ldr	r0, [r4, #0]
 8003da4:	b2f6      	uxtb	r6, r6
 8003da6:	1ac0      	subs	r0, r0, r3
 8003da8:	6963      	ldr	r3, [r4, #20]
 8003daa:	4637      	mov	r7, r6
 8003dac:	4283      	cmp	r3, r0
 8003dae:	dc04      	bgt.n	8003dba <__swbuf_r+0x42>
 8003db0:	4621      	mov	r1, r4
 8003db2:	4628      	mov	r0, r5
 8003db4:	f000 f92a 	bl	800400c <_fflush_r>
 8003db8:	bb30      	cbnz	r0, 8003e08 <__swbuf_r+0x90>
 8003dba:	68a3      	ldr	r3, [r4, #8]
 8003dbc:	3001      	adds	r0, #1
 8003dbe:	3b01      	subs	r3, #1
 8003dc0:	60a3      	str	r3, [r4, #8]
 8003dc2:	6823      	ldr	r3, [r4, #0]
 8003dc4:	1c5a      	adds	r2, r3, #1
 8003dc6:	6022      	str	r2, [r4, #0]
 8003dc8:	701e      	strb	r6, [r3, #0]
 8003dca:	6963      	ldr	r3, [r4, #20]
 8003dcc:	4283      	cmp	r3, r0
 8003dce:	d004      	beq.n	8003dda <__swbuf_r+0x62>
 8003dd0:	89a3      	ldrh	r3, [r4, #12]
 8003dd2:	07db      	lsls	r3, r3, #31
 8003dd4:	d506      	bpl.n	8003de4 <__swbuf_r+0x6c>
 8003dd6:	2e0a      	cmp	r6, #10
 8003dd8:	d104      	bne.n	8003de4 <__swbuf_r+0x6c>
 8003dda:	4621      	mov	r1, r4
 8003ddc:	4628      	mov	r0, r5
 8003dde:	f000 f915 	bl	800400c <_fflush_r>
 8003de2:	b988      	cbnz	r0, 8003e08 <__swbuf_r+0x90>
 8003de4:	4638      	mov	r0, r7
 8003de6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003de8:	4b0a      	ldr	r3, [pc, #40]	; (8003e14 <__swbuf_r+0x9c>)
 8003dea:	429c      	cmp	r4, r3
 8003dec:	d101      	bne.n	8003df2 <__swbuf_r+0x7a>
 8003dee:	68ac      	ldr	r4, [r5, #8]
 8003df0:	e7cf      	b.n	8003d92 <__swbuf_r+0x1a>
 8003df2:	4b09      	ldr	r3, [pc, #36]	; (8003e18 <__swbuf_r+0xa0>)
 8003df4:	429c      	cmp	r4, r3
 8003df6:	bf08      	it	eq
 8003df8:	68ec      	ldreq	r4, [r5, #12]
 8003dfa:	e7ca      	b.n	8003d92 <__swbuf_r+0x1a>
 8003dfc:	4621      	mov	r1, r4
 8003dfe:	4628      	mov	r0, r5
 8003e00:	f000 f80c 	bl	8003e1c <__swsetup_r>
 8003e04:	2800      	cmp	r0, #0
 8003e06:	d0cb      	beq.n	8003da0 <__swbuf_r+0x28>
 8003e08:	f04f 37ff 	mov.w	r7, #4294967295
 8003e0c:	e7ea      	b.n	8003de4 <__swbuf_r+0x6c>
 8003e0e:	bf00      	nop
 8003e10:	08005010 	.word	0x08005010
 8003e14:	08005030 	.word	0x08005030
 8003e18:	08004ff0 	.word	0x08004ff0

08003e1c <__swsetup_r>:
 8003e1c:	4b32      	ldr	r3, [pc, #200]	; (8003ee8 <__swsetup_r+0xcc>)
 8003e1e:	b570      	push	{r4, r5, r6, lr}
 8003e20:	681d      	ldr	r5, [r3, #0]
 8003e22:	4606      	mov	r6, r0
 8003e24:	460c      	mov	r4, r1
 8003e26:	b125      	cbz	r5, 8003e32 <__swsetup_r+0x16>
 8003e28:	69ab      	ldr	r3, [r5, #24]
 8003e2a:	b913      	cbnz	r3, 8003e32 <__swsetup_r+0x16>
 8003e2c:	4628      	mov	r0, r5
 8003e2e:	f000 f981 	bl	8004134 <__sinit>
 8003e32:	4b2e      	ldr	r3, [pc, #184]	; (8003eec <__swsetup_r+0xd0>)
 8003e34:	429c      	cmp	r4, r3
 8003e36:	d10f      	bne.n	8003e58 <__swsetup_r+0x3c>
 8003e38:	686c      	ldr	r4, [r5, #4]
 8003e3a:	89a3      	ldrh	r3, [r4, #12]
 8003e3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003e40:	0719      	lsls	r1, r3, #28
 8003e42:	d42c      	bmi.n	8003e9e <__swsetup_r+0x82>
 8003e44:	06dd      	lsls	r5, r3, #27
 8003e46:	d411      	bmi.n	8003e6c <__swsetup_r+0x50>
 8003e48:	2309      	movs	r3, #9
 8003e4a:	6033      	str	r3, [r6, #0]
 8003e4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003e50:	f04f 30ff 	mov.w	r0, #4294967295
 8003e54:	81a3      	strh	r3, [r4, #12]
 8003e56:	e03e      	b.n	8003ed6 <__swsetup_r+0xba>
 8003e58:	4b25      	ldr	r3, [pc, #148]	; (8003ef0 <__swsetup_r+0xd4>)
 8003e5a:	429c      	cmp	r4, r3
 8003e5c:	d101      	bne.n	8003e62 <__swsetup_r+0x46>
 8003e5e:	68ac      	ldr	r4, [r5, #8]
 8003e60:	e7eb      	b.n	8003e3a <__swsetup_r+0x1e>
 8003e62:	4b24      	ldr	r3, [pc, #144]	; (8003ef4 <__swsetup_r+0xd8>)
 8003e64:	429c      	cmp	r4, r3
 8003e66:	bf08      	it	eq
 8003e68:	68ec      	ldreq	r4, [r5, #12]
 8003e6a:	e7e6      	b.n	8003e3a <__swsetup_r+0x1e>
 8003e6c:	0758      	lsls	r0, r3, #29
 8003e6e:	d512      	bpl.n	8003e96 <__swsetup_r+0x7a>
 8003e70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003e72:	b141      	cbz	r1, 8003e86 <__swsetup_r+0x6a>
 8003e74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003e78:	4299      	cmp	r1, r3
 8003e7a:	d002      	beq.n	8003e82 <__swsetup_r+0x66>
 8003e7c:	4630      	mov	r0, r6
 8003e7e:	f7ff fa45 	bl	800330c <_free_r>
 8003e82:	2300      	movs	r3, #0
 8003e84:	6363      	str	r3, [r4, #52]	; 0x34
 8003e86:	89a3      	ldrh	r3, [r4, #12]
 8003e88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003e8c:	81a3      	strh	r3, [r4, #12]
 8003e8e:	2300      	movs	r3, #0
 8003e90:	6063      	str	r3, [r4, #4]
 8003e92:	6923      	ldr	r3, [r4, #16]
 8003e94:	6023      	str	r3, [r4, #0]
 8003e96:	89a3      	ldrh	r3, [r4, #12]
 8003e98:	f043 0308 	orr.w	r3, r3, #8
 8003e9c:	81a3      	strh	r3, [r4, #12]
 8003e9e:	6923      	ldr	r3, [r4, #16]
 8003ea0:	b94b      	cbnz	r3, 8003eb6 <__swsetup_r+0x9a>
 8003ea2:	89a3      	ldrh	r3, [r4, #12]
 8003ea4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003ea8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003eac:	d003      	beq.n	8003eb6 <__swsetup_r+0x9a>
 8003eae:	4621      	mov	r1, r4
 8003eb0:	4630      	mov	r0, r6
 8003eb2:	f000 fa05 	bl	80042c0 <__smakebuf_r>
 8003eb6:	89a0      	ldrh	r0, [r4, #12]
 8003eb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003ebc:	f010 0301 	ands.w	r3, r0, #1
 8003ec0:	d00a      	beq.n	8003ed8 <__swsetup_r+0xbc>
 8003ec2:	2300      	movs	r3, #0
 8003ec4:	60a3      	str	r3, [r4, #8]
 8003ec6:	6963      	ldr	r3, [r4, #20]
 8003ec8:	425b      	negs	r3, r3
 8003eca:	61a3      	str	r3, [r4, #24]
 8003ecc:	6923      	ldr	r3, [r4, #16]
 8003ece:	b943      	cbnz	r3, 8003ee2 <__swsetup_r+0xc6>
 8003ed0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003ed4:	d1ba      	bne.n	8003e4c <__swsetup_r+0x30>
 8003ed6:	bd70      	pop	{r4, r5, r6, pc}
 8003ed8:	0781      	lsls	r1, r0, #30
 8003eda:	bf58      	it	pl
 8003edc:	6963      	ldrpl	r3, [r4, #20]
 8003ede:	60a3      	str	r3, [r4, #8]
 8003ee0:	e7f4      	b.n	8003ecc <__swsetup_r+0xb0>
 8003ee2:	2000      	movs	r0, #0
 8003ee4:	e7f7      	b.n	8003ed6 <__swsetup_r+0xba>
 8003ee6:	bf00      	nop
 8003ee8:	20000050 	.word	0x20000050
 8003eec:	08005010 	.word	0x08005010
 8003ef0:	08005030 	.word	0x08005030
 8003ef4:	08004ff0 	.word	0x08004ff0

08003ef8 <abort>:
 8003ef8:	2006      	movs	r0, #6
 8003efa:	b508      	push	{r3, lr}
 8003efc:	f000 faba 	bl	8004474 <raise>
 8003f00:	2001      	movs	r0, #1
 8003f02:	f7fd f9b5 	bl	8001270 <_exit>
	...

08003f08 <__sflush_r>:
 8003f08:	898a      	ldrh	r2, [r1, #12]
 8003f0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f0c:	4605      	mov	r5, r0
 8003f0e:	0710      	lsls	r0, r2, #28
 8003f10:	460c      	mov	r4, r1
 8003f12:	d457      	bmi.n	8003fc4 <__sflush_r+0xbc>
 8003f14:	684b      	ldr	r3, [r1, #4]
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	dc04      	bgt.n	8003f24 <__sflush_r+0x1c>
 8003f1a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	dc01      	bgt.n	8003f24 <__sflush_r+0x1c>
 8003f20:	2000      	movs	r0, #0
 8003f22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003f24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003f26:	2e00      	cmp	r6, #0
 8003f28:	d0fa      	beq.n	8003f20 <__sflush_r+0x18>
 8003f2a:	2300      	movs	r3, #0
 8003f2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003f30:	682f      	ldr	r7, [r5, #0]
 8003f32:	602b      	str	r3, [r5, #0]
 8003f34:	d032      	beq.n	8003f9c <__sflush_r+0x94>
 8003f36:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003f38:	89a3      	ldrh	r3, [r4, #12]
 8003f3a:	075a      	lsls	r2, r3, #29
 8003f3c:	d505      	bpl.n	8003f4a <__sflush_r+0x42>
 8003f3e:	6863      	ldr	r3, [r4, #4]
 8003f40:	1ac0      	subs	r0, r0, r3
 8003f42:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003f44:	b10b      	cbz	r3, 8003f4a <__sflush_r+0x42>
 8003f46:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003f48:	1ac0      	subs	r0, r0, r3
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	4602      	mov	r2, r0
 8003f4e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003f50:	4628      	mov	r0, r5
 8003f52:	6a21      	ldr	r1, [r4, #32]
 8003f54:	47b0      	blx	r6
 8003f56:	1c43      	adds	r3, r0, #1
 8003f58:	89a3      	ldrh	r3, [r4, #12]
 8003f5a:	d106      	bne.n	8003f6a <__sflush_r+0x62>
 8003f5c:	6829      	ldr	r1, [r5, #0]
 8003f5e:	291d      	cmp	r1, #29
 8003f60:	d82c      	bhi.n	8003fbc <__sflush_r+0xb4>
 8003f62:	4a29      	ldr	r2, [pc, #164]	; (8004008 <__sflush_r+0x100>)
 8003f64:	40ca      	lsrs	r2, r1
 8003f66:	07d6      	lsls	r6, r2, #31
 8003f68:	d528      	bpl.n	8003fbc <__sflush_r+0xb4>
 8003f6a:	2200      	movs	r2, #0
 8003f6c:	6062      	str	r2, [r4, #4]
 8003f6e:	6922      	ldr	r2, [r4, #16]
 8003f70:	04d9      	lsls	r1, r3, #19
 8003f72:	6022      	str	r2, [r4, #0]
 8003f74:	d504      	bpl.n	8003f80 <__sflush_r+0x78>
 8003f76:	1c42      	adds	r2, r0, #1
 8003f78:	d101      	bne.n	8003f7e <__sflush_r+0x76>
 8003f7a:	682b      	ldr	r3, [r5, #0]
 8003f7c:	b903      	cbnz	r3, 8003f80 <__sflush_r+0x78>
 8003f7e:	6560      	str	r0, [r4, #84]	; 0x54
 8003f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003f82:	602f      	str	r7, [r5, #0]
 8003f84:	2900      	cmp	r1, #0
 8003f86:	d0cb      	beq.n	8003f20 <__sflush_r+0x18>
 8003f88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003f8c:	4299      	cmp	r1, r3
 8003f8e:	d002      	beq.n	8003f96 <__sflush_r+0x8e>
 8003f90:	4628      	mov	r0, r5
 8003f92:	f7ff f9bb 	bl	800330c <_free_r>
 8003f96:	2000      	movs	r0, #0
 8003f98:	6360      	str	r0, [r4, #52]	; 0x34
 8003f9a:	e7c2      	b.n	8003f22 <__sflush_r+0x1a>
 8003f9c:	6a21      	ldr	r1, [r4, #32]
 8003f9e:	2301      	movs	r3, #1
 8003fa0:	4628      	mov	r0, r5
 8003fa2:	47b0      	blx	r6
 8003fa4:	1c41      	adds	r1, r0, #1
 8003fa6:	d1c7      	bne.n	8003f38 <__sflush_r+0x30>
 8003fa8:	682b      	ldr	r3, [r5, #0]
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d0c4      	beq.n	8003f38 <__sflush_r+0x30>
 8003fae:	2b1d      	cmp	r3, #29
 8003fb0:	d001      	beq.n	8003fb6 <__sflush_r+0xae>
 8003fb2:	2b16      	cmp	r3, #22
 8003fb4:	d101      	bne.n	8003fba <__sflush_r+0xb2>
 8003fb6:	602f      	str	r7, [r5, #0]
 8003fb8:	e7b2      	b.n	8003f20 <__sflush_r+0x18>
 8003fba:	89a3      	ldrh	r3, [r4, #12]
 8003fbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003fc0:	81a3      	strh	r3, [r4, #12]
 8003fc2:	e7ae      	b.n	8003f22 <__sflush_r+0x1a>
 8003fc4:	690f      	ldr	r7, [r1, #16]
 8003fc6:	2f00      	cmp	r7, #0
 8003fc8:	d0aa      	beq.n	8003f20 <__sflush_r+0x18>
 8003fca:	0793      	lsls	r3, r2, #30
 8003fcc:	bf18      	it	ne
 8003fce:	2300      	movne	r3, #0
 8003fd0:	680e      	ldr	r6, [r1, #0]
 8003fd2:	bf08      	it	eq
 8003fd4:	694b      	ldreq	r3, [r1, #20]
 8003fd6:	1bf6      	subs	r6, r6, r7
 8003fd8:	600f      	str	r7, [r1, #0]
 8003fda:	608b      	str	r3, [r1, #8]
 8003fdc:	2e00      	cmp	r6, #0
 8003fde:	dd9f      	ble.n	8003f20 <__sflush_r+0x18>
 8003fe0:	4633      	mov	r3, r6
 8003fe2:	463a      	mov	r2, r7
 8003fe4:	4628      	mov	r0, r5
 8003fe6:	6a21      	ldr	r1, [r4, #32]
 8003fe8:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8003fec:	47e0      	blx	ip
 8003fee:	2800      	cmp	r0, #0
 8003ff0:	dc06      	bgt.n	8004000 <__sflush_r+0xf8>
 8003ff2:	89a3      	ldrh	r3, [r4, #12]
 8003ff4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ff8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003ffc:	81a3      	strh	r3, [r4, #12]
 8003ffe:	e790      	b.n	8003f22 <__sflush_r+0x1a>
 8004000:	4407      	add	r7, r0
 8004002:	1a36      	subs	r6, r6, r0
 8004004:	e7ea      	b.n	8003fdc <__sflush_r+0xd4>
 8004006:	bf00      	nop
 8004008:	20400001 	.word	0x20400001

0800400c <_fflush_r>:
 800400c:	b538      	push	{r3, r4, r5, lr}
 800400e:	690b      	ldr	r3, [r1, #16]
 8004010:	4605      	mov	r5, r0
 8004012:	460c      	mov	r4, r1
 8004014:	b913      	cbnz	r3, 800401c <_fflush_r+0x10>
 8004016:	2500      	movs	r5, #0
 8004018:	4628      	mov	r0, r5
 800401a:	bd38      	pop	{r3, r4, r5, pc}
 800401c:	b118      	cbz	r0, 8004026 <_fflush_r+0x1a>
 800401e:	6983      	ldr	r3, [r0, #24]
 8004020:	b90b      	cbnz	r3, 8004026 <_fflush_r+0x1a>
 8004022:	f000 f887 	bl	8004134 <__sinit>
 8004026:	4b14      	ldr	r3, [pc, #80]	; (8004078 <_fflush_r+0x6c>)
 8004028:	429c      	cmp	r4, r3
 800402a:	d11b      	bne.n	8004064 <_fflush_r+0x58>
 800402c:	686c      	ldr	r4, [r5, #4]
 800402e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004032:	2b00      	cmp	r3, #0
 8004034:	d0ef      	beq.n	8004016 <_fflush_r+0xa>
 8004036:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004038:	07d0      	lsls	r0, r2, #31
 800403a:	d404      	bmi.n	8004046 <_fflush_r+0x3a>
 800403c:	0599      	lsls	r1, r3, #22
 800403e:	d402      	bmi.n	8004046 <_fflush_r+0x3a>
 8004040:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004042:	f000 f915 	bl	8004270 <__retarget_lock_acquire_recursive>
 8004046:	4628      	mov	r0, r5
 8004048:	4621      	mov	r1, r4
 800404a:	f7ff ff5d 	bl	8003f08 <__sflush_r>
 800404e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004050:	4605      	mov	r5, r0
 8004052:	07da      	lsls	r2, r3, #31
 8004054:	d4e0      	bmi.n	8004018 <_fflush_r+0xc>
 8004056:	89a3      	ldrh	r3, [r4, #12]
 8004058:	059b      	lsls	r3, r3, #22
 800405a:	d4dd      	bmi.n	8004018 <_fflush_r+0xc>
 800405c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800405e:	f000 f908 	bl	8004272 <__retarget_lock_release_recursive>
 8004062:	e7d9      	b.n	8004018 <_fflush_r+0xc>
 8004064:	4b05      	ldr	r3, [pc, #20]	; (800407c <_fflush_r+0x70>)
 8004066:	429c      	cmp	r4, r3
 8004068:	d101      	bne.n	800406e <_fflush_r+0x62>
 800406a:	68ac      	ldr	r4, [r5, #8]
 800406c:	e7df      	b.n	800402e <_fflush_r+0x22>
 800406e:	4b04      	ldr	r3, [pc, #16]	; (8004080 <_fflush_r+0x74>)
 8004070:	429c      	cmp	r4, r3
 8004072:	bf08      	it	eq
 8004074:	68ec      	ldreq	r4, [r5, #12]
 8004076:	e7da      	b.n	800402e <_fflush_r+0x22>
 8004078:	08005010 	.word	0x08005010
 800407c:	08005030 	.word	0x08005030
 8004080:	08004ff0 	.word	0x08004ff0

08004084 <std>:
 8004084:	2300      	movs	r3, #0
 8004086:	b510      	push	{r4, lr}
 8004088:	4604      	mov	r4, r0
 800408a:	e9c0 3300 	strd	r3, r3, [r0]
 800408e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004092:	6083      	str	r3, [r0, #8]
 8004094:	8181      	strh	r1, [r0, #12]
 8004096:	6643      	str	r3, [r0, #100]	; 0x64
 8004098:	81c2      	strh	r2, [r0, #14]
 800409a:	6183      	str	r3, [r0, #24]
 800409c:	4619      	mov	r1, r3
 800409e:	2208      	movs	r2, #8
 80040a0:	305c      	adds	r0, #92	; 0x5c
 80040a2:	f7ff f867 	bl	8003174 <memset>
 80040a6:	4b05      	ldr	r3, [pc, #20]	; (80040bc <std+0x38>)
 80040a8:	6224      	str	r4, [r4, #32]
 80040aa:	6263      	str	r3, [r4, #36]	; 0x24
 80040ac:	4b04      	ldr	r3, [pc, #16]	; (80040c0 <std+0x3c>)
 80040ae:	62a3      	str	r3, [r4, #40]	; 0x28
 80040b0:	4b04      	ldr	r3, [pc, #16]	; (80040c4 <std+0x40>)
 80040b2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80040b4:	4b04      	ldr	r3, [pc, #16]	; (80040c8 <std+0x44>)
 80040b6:	6323      	str	r3, [r4, #48]	; 0x30
 80040b8:	bd10      	pop	{r4, pc}
 80040ba:	bf00      	nop
 80040bc:	080044ad 	.word	0x080044ad
 80040c0:	080044cf 	.word	0x080044cf
 80040c4:	08004507 	.word	0x08004507
 80040c8:	0800452b 	.word	0x0800452b

080040cc <_cleanup_r>:
 80040cc:	4901      	ldr	r1, [pc, #4]	; (80040d4 <_cleanup_r+0x8>)
 80040ce:	f000 b8af 	b.w	8004230 <_fwalk_reent>
 80040d2:	bf00      	nop
 80040d4:	0800400d 	.word	0x0800400d

080040d8 <__sfmoreglue>:
 80040d8:	2268      	movs	r2, #104	; 0x68
 80040da:	b570      	push	{r4, r5, r6, lr}
 80040dc:	1e4d      	subs	r5, r1, #1
 80040de:	4355      	muls	r5, r2
 80040e0:	460e      	mov	r6, r1
 80040e2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80040e6:	f7ff f979 	bl	80033dc <_malloc_r>
 80040ea:	4604      	mov	r4, r0
 80040ec:	b140      	cbz	r0, 8004100 <__sfmoreglue+0x28>
 80040ee:	2100      	movs	r1, #0
 80040f0:	e9c0 1600 	strd	r1, r6, [r0]
 80040f4:	300c      	adds	r0, #12
 80040f6:	60a0      	str	r0, [r4, #8]
 80040f8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80040fc:	f7ff f83a 	bl	8003174 <memset>
 8004100:	4620      	mov	r0, r4
 8004102:	bd70      	pop	{r4, r5, r6, pc}

08004104 <__sfp_lock_acquire>:
 8004104:	4801      	ldr	r0, [pc, #4]	; (800410c <__sfp_lock_acquire+0x8>)
 8004106:	f000 b8b3 	b.w	8004270 <__retarget_lock_acquire_recursive>
 800410a:	bf00      	nop
 800410c:	20000261 	.word	0x20000261

08004110 <__sfp_lock_release>:
 8004110:	4801      	ldr	r0, [pc, #4]	; (8004118 <__sfp_lock_release+0x8>)
 8004112:	f000 b8ae 	b.w	8004272 <__retarget_lock_release_recursive>
 8004116:	bf00      	nop
 8004118:	20000261 	.word	0x20000261

0800411c <__sinit_lock_acquire>:
 800411c:	4801      	ldr	r0, [pc, #4]	; (8004124 <__sinit_lock_acquire+0x8>)
 800411e:	f000 b8a7 	b.w	8004270 <__retarget_lock_acquire_recursive>
 8004122:	bf00      	nop
 8004124:	20000262 	.word	0x20000262

08004128 <__sinit_lock_release>:
 8004128:	4801      	ldr	r0, [pc, #4]	; (8004130 <__sinit_lock_release+0x8>)
 800412a:	f000 b8a2 	b.w	8004272 <__retarget_lock_release_recursive>
 800412e:	bf00      	nop
 8004130:	20000262 	.word	0x20000262

08004134 <__sinit>:
 8004134:	b510      	push	{r4, lr}
 8004136:	4604      	mov	r4, r0
 8004138:	f7ff fff0 	bl	800411c <__sinit_lock_acquire>
 800413c:	69a3      	ldr	r3, [r4, #24]
 800413e:	b11b      	cbz	r3, 8004148 <__sinit+0x14>
 8004140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004144:	f7ff bff0 	b.w	8004128 <__sinit_lock_release>
 8004148:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800414c:	6523      	str	r3, [r4, #80]	; 0x50
 800414e:	4b13      	ldr	r3, [pc, #76]	; (800419c <__sinit+0x68>)
 8004150:	4a13      	ldr	r2, [pc, #76]	; (80041a0 <__sinit+0x6c>)
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	62a2      	str	r2, [r4, #40]	; 0x28
 8004156:	42a3      	cmp	r3, r4
 8004158:	bf08      	it	eq
 800415a:	2301      	moveq	r3, #1
 800415c:	4620      	mov	r0, r4
 800415e:	bf08      	it	eq
 8004160:	61a3      	streq	r3, [r4, #24]
 8004162:	f000 f81f 	bl	80041a4 <__sfp>
 8004166:	6060      	str	r0, [r4, #4]
 8004168:	4620      	mov	r0, r4
 800416a:	f000 f81b 	bl	80041a4 <__sfp>
 800416e:	60a0      	str	r0, [r4, #8]
 8004170:	4620      	mov	r0, r4
 8004172:	f000 f817 	bl	80041a4 <__sfp>
 8004176:	2200      	movs	r2, #0
 8004178:	2104      	movs	r1, #4
 800417a:	60e0      	str	r0, [r4, #12]
 800417c:	6860      	ldr	r0, [r4, #4]
 800417e:	f7ff ff81 	bl	8004084 <std>
 8004182:	2201      	movs	r2, #1
 8004184:	2109      	movs	r1, #9
 8004186:	68a0      	ldr	r0, [r4, #8]
 8004188:	f7ff ff7c 	bl	8004084 <std>
 800418c:	2202      	movs	r2, #2
 800418e:	2112      	movs	r1, #18
 8004190:	68e0      	ldr	r0, [r4, #12]
 8004192:	f7ff ff77 	bl	8004084 <std>
 8004196:	2301      	movs	r3, #1
 8004198:	61a3      	str	r3, [r4, #24]
 800419a:	e7d1      	b.n	8004140 <__sinit+0xc>
 800419c:	08004f08 	.word	0x08004f08
 80041a0:	080040cd 	.word	0x080040cd

080041a4 <__sfp>:
 80041a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80041a6:	4607      	mov	r7, r0
 80041a8:	f7ff ffac 	bl	8004104 <__sfp_lock_acquire>
 80041ac:	4b1e      	ldr	r3, [pc, #120]	; (8004228 <__sfp+0x84>)
 80041ae:	681e      	ldr	r6, [r3, #0]
 80041b0:	69b3      	ldr	r3, [r6, #24]
 80041b2:	b913      	cbnz	r3, 80041ba <__sfp+0x16>
 80041b4:	4630      	mov	r0, r6
 80041b6:	f7ff ffbd 	bl	8004134 <__sinit>
 80041ba:	3648      	adds	r6, #72	; 0x48
 80041bc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80041c0:	3b01      	subs	r3, #1
 80041c2:	d503      	bpl.n	80041cc <__sfp+0x28>
 80041c4:	6833      	ldr	r3, [r6, #0]
 80041c6:	b30b      	cbz	r3, 800420c <__sfp+0x68>
 80041c8:	6836      	ldr	r6, [r6, #0]
 80041ca:	e7f7      	b.n	80041bc <__sfp+0x18>
 80041cc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80041d0:	b9d5      	cbnz	r5, 8004208 <__sfp+0x64>
 80041d2:	4b16      	ldr	r3, [pc, #88]	; (800422c <__sfp+0x88>)
 80041d4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80041d8:	60e3      	str	r3, [r4, #12]
 80041da:	6665      	str	r5, [r4, #100]	; 0x64
 80041dc:	f000 f847 	bl	800426e <__retarget_lock_init_recursive>
 80041e0:	f7ff ff96 	bl	8004110 <__sfp_lock_release>
 80041e4:	2208      	movs	r2, #8
 80041e6:	4629      	mov	r1, r5
 80041e8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80041ec:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80041f0:	6025      	str	r5, [r4, #0]
 80041f2:	61a5      	str	r5, [r4, #24]
 80041f4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80041f8:	f7fe ffbc 	bl	8003174 <memset>
 80041fc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004200:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004204:	4620      	mov	r0, r4
 8004206:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004208:	3468      	adds	r4, #104	; 0x68
 800420a:	e7d9      	b.n	80041c0 <__sfp+0x1c>
 800420c:	2104      	movs	r1, #4
 800420e:	4638      	mov	r0, r7
 8004210:	f7ff ff62 	bl	80040d8 <__sfmoreglue>
 8004214:	4604      	mov	r4, r0
 8004216:	6030      	str	r0, [r6, #0]
 8004218:	2800      	cmp	r0, #0
 800421a:	d1d5      	bne.n	80041c8 <__sfp+0x24>
 800421c:	f7ff ff78 	bl	8004110 <__sfp_lock_release>
 8004220:	230c      	movs	r3, #12
 8004222:	603b      	str	r3, [r7, #0]
 8004224:	e7ee      	b.n	8004204 <__sfp+0x60>
 8004226:	bf00      	nop
 8004228:	08004f08 	.word	0x08004f08
 800422c:	ffff0001 	.word	0xffff0001

08004230 <_fwalk_reent>:
 8004230:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004234:	4606      	mov	r6, r0
 8004236:	4688      	mov	r8, r1
 8004238:	2700      	movs	r7, #0
 800423a:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800423e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004242:	f1b9 0901 	subs.w	r9, r9, #1
 8004246:	d505      	bpl.n	8004254 <_fwalk_reent+0x24>
 8004248:	6824      	ldr	r4, [r4, #0]
 800424a:	2c00      	cmp	r4, #0
 800424c:	d1f7      	bne.n	800423e <_fwalk_reent+0xe>
 800424e:	4638      	mov	r0, r7
 8004250:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004254:	89ab      	ldrh	r3, [r5, #12]
 8004256:	2b01      	cmp	r3, #1
 8004258:	d907      	bls.n	800426a <_fwalk_reent+0x3a>
 800425a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800425e:	3301      	adds	r3, #1
 8004260:	d003      	beq.n	800426a <_fwalk_reent+0x3a>
 8004262:	4629      	mov	r1, r5
 8004264:	4630      	mov	r0, r6
 8004266:	47c0      	blx	r8
 8004268:	4307      	orrs	r7, r0
 800426a:	3568      	adds	r5, #104	; 0x68
 800426c:	e7e9      	b.n	8004242 <_fwalk_reent+0x12>

0800426e <__retarget_lock_init_recursive>:
 800426e:	4770      	bx	lr

08004270 <__retarget_lock_acquire_recursive>:
 8004270:	4770      	bx	lr

08004272 <__retarget_lock_release_recursive>:
 8004272:	4770      	bx	lr

08004274 <__swhatbuf_r>:
 8004274:	b570      	push	{r4, r5, r6, lr}
 8004276:	460e      	mov	r6, r1
 8004278:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800427c:	4614      	mov	r4, r2
 800427e:	2900      	cmp	r1, #0
 8004280:	461d      	mov	r5, r3
 8004282:	b096      	sub	sp, #88	; 0x58
 8004284:	da08      	bge.n	8004298 <__swhatbuf_r+0x24>
 8004286:	2200      	movs	r2, #0
 8004288:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800428c:	602a      	str	r2, [r5, #0]
 800428e:	061a      	lsls	r2, r3, #24
 8004290:	d410      	bmi.n	80042b4 <__swhatbuf_r+0x40>
 8004292:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004296:	e00e      	b.n	80042b6 <__swhatbuf_r+0x42>
 8004298:	466a      	mov	r2, sp
 800429a:	f000 f96d 	bl	8004578 <_fstat_r>
 800429e:	2800      	cmp	r0, #0
 80042a0:	dbf1      	blt.n	8004286 <__swhatbuf_r+0x12>
 80042a2:	9a01      	ldr	r2, [sp, #4]
 80042a4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80042a8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80042ac:	425a      	negs	r2, r3
 80042ae:	415a      	adcs	r2, r3
 80042b0:	602a      	str	r2, [r5, #0]
 80042b2:	e7ee      	b.n	8004292 <__swhatbuf_r+0x1e>
 80042b4:	2340      	movs	r3, #64	; 0x40
 80042b6:	2000      	movs	r0, #0
 80042b8:	6023      	str	r3, [r4, #0]
 80042ba:	b016      	add	sp, #88	; 0x58
 80042bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080042c0 <__smakebuf_r>:
 80042c0:	898b      	ldrh	r3, [r1, #12]
 80042c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80042c4:	079d      	lsls	r5, r3, #30
 80042c6:	4606      	mov	r6, r0
 80042c8:	460c      	mov	r4, r1
 80042ca:	d507      	bpl.n	80042dc <__smakebuf_r+0x1c>
 80042cc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80042d0:	6023      	str	r3, [r4, #0]
 80042d2:	6123      	str	r3, [r4, #16]
 80042d4:	2301      	movs	r3, #1
 80042d6:	6163      	str	r3, [r4, #20]
 80042d8:	b002      	add	sp, #8
 80042da:	bd70      	pop	{r4, r5, r6, pc}
 80042dc:	466a      	mov	r2, sp
 80042de:	ab01      	add	r3, sp, #4
 80042e0:	f7ff ffc8 	bl	8004274 <__swhatbuf_r>
 80042e4:	9900      	ldr	r1, [sp, #0]
 80042e6:	4605      	mov	r5, r0
 80042e8:	4630      	mov	r0, r6
 80042ea:	f7ff f877 	bl	80033dc <_malloc_r>
 80042ee:	b948      	cbnz	r0, 8004304 <__smakebuf_r+0x44>
 80042f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042f4:	059a      	lsls	r2, r3, #22
 80042f6:	d4ef      	bmi.n	80042d8 <__smakebuf_r+0x18>
 80042f8:	f023 0303 	bic.w	r3, r3, #3
 80042fc:	f043 0302 	orr.w	r3, r3, #2
 8004300:	81a3      	strh	r3, [r4, #12]
 8004302:	e7e3      	b.n	80042cc <__smakebuf_r+0xc>
 8004304:	4b0d      	ldr	r3, [pc, #52]	; (800433c <__smakebuf_r+0x7c>)
 8004306:	62b3      	str	r3, [r6, #40]	; 0x28
 8004308:	89a3      	ldrh	r3, [r4, #12]
 800430a:	6020      	str	r0, [r4, #0]
 800430c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004310:	81a3      	strh	r3, [r4, #12]
 8004312:	9b00      	ldr	r3, [sp, #0]
 8004314:	6120      	str	r0, [r4, #16]
 8004316:	6163      	str	r3, [r4, #20]
 8004318:	9b01      	ldr	r3, [sp, #4]
 800431a:	b15b      	cbz	r3, 8004334 <__smakebuf_r+0x74>
 800431c:	4630      	mov	r0, r6
 800431e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004322:	f000 f93b 	bl	800459c <_isatty_r>
 8004326:	b128      	cbz	r0, 8004334 <__smakebuf_r+0x74>
 8004328:	89a3      	ldrh	r3, [r4, #12]
 800432a:	f023 0303 	bic.w	r3, r3, #3
 800432e:	f043 0301 	orr.w	r3, r3, #1
 8004332:	81a3      	strh	r3, [r4, #12]
 8004334:	89a0      	ldrh	r0, [r4, #12]
 8004336:	4305      	orrs	r5, r0
 8004338:	81a5      	strh	r5, [r4, #12]
 800433a:	e7cd      	b.n	80042d8 <__smakebuf_r+0x18>
 800433c:	080040cd 	.word	0x080040cd

08004340 <memchr>:
 8004340:	4603      	mov	r3, r0
 8004342:	b510      	push	{r4, lr}
 8004344:	b2c9      	uxtb	r1, r1
 8004346:	4402      	add	r2, r0
 8004348:	4293      	cmp	r3, r2
 800434a:	4618      	mov	r0, r3
 800434c:	d101      	bne.n	8004352 <memchr+0x12>
 800434e:	2000      	movs	r0, #0
 8004350:	e003      	b.n	800435a <memchr+0x1a>
 8004352:	7804      	ldrb	r4, [r0, #0]
 8004354:	3301      	adds	r3, #1
 8004356:	428c      	cmp	r4, r1
 8004358:	d1f6      	bne.n	8004348 <memchr+0x8>
 800435a:	bd10      	pop	{r4, pc}

0800435c <memcpy>:
 800435c:	440a      	add	r2, r1
 800435e:	4291      	cmp	r1, r2
 8004360:	f100 33ff 	add.w	r3, r0, #4294967295
 8004364:	d100      	bne.n	8004368 <memcpy+0xc>
 8004366:	4770      	bx	lr
 8004368:	b510      	push	{r4, lr}
 800436a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800436e:	4291      	cmp	r1, r2
 8004370:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004374:	d1f9      	bne.n	800436a <memcpy+0xe>
 8004376:	bd10      	pop	{r4, pc}

08004378 <memmove>:
 8004378:	4288      	cmp	r0, r1
 800437a:	b510      	push	{r4, lr}
 800437c:	eb01 0402 	add.w	r4, r1, r2
 8004380:	d902      	bls.n	8004388 <memmove+0x10>
 8004382:	4284      	cmp	r4, r0
 8004384:	4623      	mov	r3, r4
 8004386:	d807      	bhi.n	8004398 <memmove+0x20>
 8004388:	1e43      	subs	r3, r0, #1
 800438a:	42a1      	cmp	r1, r4
 800438c:	d008      	beq.n	80043a0 <memmove+0x28>
 800438e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004392:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004396:	e7f8      	b.n	800438a <memmove+0x12>
 8004398:	4601      	mov	r1, r0
 800439a:	4402      	add	r2, r0
 800439c:	428a      	cmp	r2, r1
 800439e:	d100      	bne.n	80043a2 <memmove+0x2a>
 80043a0:	bd10      	pop	{r4, pc}
 80043a2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80043a6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80043aa:	e7f7      	b.n	800439c <memmove+0x24>

080043ac <__malloc_lock>:
 80043ac:	4801      	ldr	r0, [pc, #4]	; (80043b4 <__malloc_lock+0x8>)
 80043ae:	f7ff bf5f 	b.w	8004270 <__retarget_lock_acquire_recursive>
 80043b2:	bf00      	nop
 80043b4:	20000260 	.word	0x20000260

080043b8 <__malloc_unlock>:
 80043b8:	4801      	ldr	r0, [pc, #4]	; (80043c0 <__malloc_unlock+0x8>)
 80043ba:	f7ff bf5a 	b.w	8004272 <__retarget_lock_release_recursive>
 80043be:	bf00      	nop
 80043c0:	20000260 	.word	0x20000260

080043c4 <_realloc_r>:
 80043c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043c8:	4680      	mov	r8, r0
 80043ca:	4614      	mov	r4, r2
 80043cc:	460e      	mov	r6, r1
 80043ce:	b921      	cbnz	r1, 80043da <_realloc_r+0x16>
 80043d0:	4611      	mov	r1, r2
 80043d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80043d6:	f7ff b801 	b.w	80033dc <_malloc_r>
 80043da:	b92a      	cbnz	r2, 80043e8 <_realloc_r+0x24>
 80043dc:	f7fe ff96 	bl	800330c <_free_r>
 80043e0:	4625      	mov	r5, r4
 80043e2:	4628      	mov	r0, r5
 80043e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043e8:	f000 f8fa 	bl	80045e0 <_malloc_usable_size_r>
 80043ec:	4284      	cmp	r4, r0
 80043ee:	4607      	mov	r7, r0
 80043f0:	d802      	bhi.n	80043f8 <_realloc_r+0x34>
 80043f2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80043f6:	d812      	bhi.n	800441e <_realloc_r+0x5a>
 80043f8:	4621      	mov	r1, r4
 80043fa:	4640      	mov	r0, r8
 80043fc:	f7fe ffee 	bl	80033dc <_malloc_r>
 8004400:	4605      	mov	r5, r0
 8004402:	2800      	cmp	r0, #0
 8004404:	d0ed      	beq.n	80043e2 <_realloc_r+0x1e>
 8004406:	42bc      	cmp	r4, r7
 8004408:	4622      	mov	r2, r4
 800440a:	4631      	mov	r1, r6
 800440c:	bf28      	it	cs
 800440e:	463a      	movcs	r2, r7
 8004410:	f7ff ffa4 	bl	800435c <memcpy>
 8004414:	4631      	mov	r1, r6
 8004416:	4640      	mov	r0, r8
 8004418:	f7fe ff78 	bl	800330c <_free_r>
 800441c:	e7e1      	b.n	80043e2 <_realloc_r+0x1e>
 800441e:	4635      	mov	r5, r6
 8004420:	e7df      	b.n	80043e2 <_realloc_r+0x1e>

08004422 <_raise_r>:
 8004422:	291f      	cmp	r1, #31
 8004424:	b538      	push	{r3, r4, r5, lr}
 8004426:	4604      	mov	r4, r0
 8004428:	460d      	mov	r5, r1
 800442a:	d904      	bls.n	8004436 <_raise_r+0x14>
 800442c:	2316      	movs	r3, #22
 800442e:	6003      	str	r3, [r0, #0]
 8004430:	f04f 30ff 	mov.w	r0, #4294967295
 8004434:	bd38      	pop	{r3, r4, r5, pc}
 8004436:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004438:	b112      	cbz	r2, 8004440 <_raise_r+0x1e>
 800443a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800443e:	b94b      	cbnz	r3, 8004454 <_raise_r+0x32>
 8004440:	4620      	mov	r0, r4
 8004442:	f000 f831 	bl	80044a8 <_getpid_r>
 8004446:	462a      	mov	r2, r5
 8004448:	4601      	mov	r1, r0
 800444a:	4620      	mov	r0, r4
 800444c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004450:	f000 b818 	b.w	8004484 <_kill_r>
 8004454:	2b01      	cmp	r3, #1
 8004456:	d00a      	beq.n	800446e <_raise_r+0x4c>
 8004458:	1c59      	adds	r1, r3, #1
 800445a:	d103      	bne.n	8004464 <_raise_r+0x42>
 800445c:	2316      	movs	r3, #22
 800445e:	6003      	str	r3, [r0, #0]
 8004460:	2001      	movs	r0, #1
 8004462:	e7e7      	b.n	8004434 <_raise_r+0x12>
 8004464:	2400      	movs	r4, #0
 8004466:	4628      	mov	r0, r5
 8004468:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800446c:	4798      	blx	r3
 800446e:	2000      	movs	r0, #0
 8004470:	e7e0      	b.n	8004434 <_raise_r+0x12>
	...

08004474 <raise>:
 8004474:	4b02      	ldr	r3, [pc, #8]	; (8004480 <raise+0xc>)
 8004476:	4601      	mov	r1, r0
 8004478:	6818      	ldr	r0, [r3, #0]
 800447a:	f7ff bfd2 	b.w	8004422 <_raise_r>
 800447e:	bf00      	nop
 8004480:	20000050 	.word	0x20000050

08004484 <_kill_r>:
 8004484:	b538      	push	{r3, r4, r5, lr}
 8004486:	2300      	movs	r3, #0
 8004488:	4d06      	ldr	r5, [pc, #24]	; (80044a4 <_kill_r+0x20>)
 800448a:	4604      	mov	r4, r0
 800448c:	4608      	mov	r0, r1
 800448e:	4611      	mov	r1, r2
 8004490:	602b      	str	r3, [r5, #0]
 8004492:	f7fc fedd 	bl	8001250 <_kill>
 8004496:	1c43      	adds	r3, r0, #1
 8004498:	d102      	bne.n	80044a0 <_kill_r+0x1c>
 800449a:	682b      	ldr	r3, [r5, #0]
 800449c:	b103      	cbz	r3, 80044a0 <_kill_r+0x1c>
 800449e:	6023      	str	r3, [r4, #0]
 80044a0:	bd38      	pop	{r3, r4, r5, pc}
 80044a2:	bf00      	nop
 80044a4:	20000264 	.word	0x20000264

080044a8 <_getpid_r>:
 80044a8:	f7fc becb 	b.w	8001242 <_getpid>

080044ac <__sread>:
 80044ac:	b510      	push	{r4, lr}
 80044ae:	460c      	mov	r4, r1
 80044b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80044b4:	f000 f89c 	bl	80045f0 <_read_r>
 80044b8:	2800      	cmp	r0, #0
 80044ba:	bfab      	itete	ge
 80044bc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80044be:	89a3      	ldrhlt	r3, [r4, #12]
 80044c0:	181b      	addge	r3, r3, r0
 80044c2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80044c6:	bfac      	ite	ge
 80044c8:	6563      	strge	r3, [r4, #84]	; 0x54
 80044ca:	81a3      	strhlt	r3, [r4, #12]
 80044cc:	bd10      	pop	{r4, pc}

080044ce <__swrite>:
 80044ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044d2:	461f      	mov	r7, r3
 80044d4:	898b      	ldrh	r3, [r1, #12]
 80044d6:	4605      	mov	r5, r0
 80044d8:	05db      	lsls	r3, r3, #23
 80044da:	460c      	mov	r4, r1
 80044dc:	4616      	mov	r6, r2
 80044de:	d505      	bpl.n	80044ec <__swrite+0x1e>
 80044e0:	2302      	movs	r3, #2
 80044e2:	2200      	movs	r2, #0
 80044e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80044e8:	f000 f868 	bl	80045bc <_lseek_r>
 80044ec:	89a3      	ldrh	r3, [r4, #12]
 80044ee:	4632      	mov	r2, r6
 80044f0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80044f4:	81a3      	strh	r3, [r4, #12]
 80044f6:	4628      	mov	r0, r5
 80044f8:	463b      	mov	r3, r7
 80044fa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80044fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004502:	f000 b817 	b.w	8004534 <_write_r>

08004506 <__sseek>:
 8004506:	b510      	push	{r4, lr}
 8004508:	460c      	mov	r4, r1
 800450a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800450e:	f000 f855 	bl	80045bc <_lseek_r>
 8004512:	1c43      	adds	r3, r0, #1
 8004514:	89a3      	ldrh	r3, [r4, #12]
 8004516:	bf15      	itete	ne
 8004518:	6560      	strne	r0, [r4, #84]	; 0x54
 800451a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800451e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004522:	81a3      	strheq	r3, [r4, #12]
 8004524:	bf18      	it	ne
 8004526:	81a3      	strhne	r3, [r4, #12]
 8004528:	bd10      	pop	{r4, pc}

0800452a <__sclose>:
 800452a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800452e:	f000 b813 	b.w	8004558 <_close_r>
	...

08004534 <_write_r>:
 8004534:	b538      	push	{r3, r4, r5, lr}
 8004536:	4604      	mov	r4, r0
 8004538:	4608      	mov	r0, r1
 800453a:	4611      	mov	r1, r2
 800453c:	2200      	movs	r2, #0
 800453e:	4d05      	ldr	r5, [pc, #20]	; (8004554 <_write_r+0x20>)
 8004540:	602a      	str	r2, [r5, #0]
 8004542:	461a      	mov	r2, r3
 8004544:	f7fc febb 	bl	80012be <_write>
 8004548:	1c43      	adds	r3, r0, #1
 800454a:	d102      	bne.n	8004552 <_write_r+0x1e>
 800454c:	682b      	ldr	r3, [r5, #0]
 800454e:	b103      	cbz	r3, 8004552 <_write_r+0x1e>
 8004550:	6023      	str	r3, [r4, #0]
 8004552:	bd38      	pop	{r3, r4, r5, pc}
 8004554:	20000264 	.word	0x20000264

08004558 <_close_r>:
 8004558:	b538      	push	{r3, r4, r5, lr}
 800455a:	2300      	movs	r3, #0
 800455c:	4d05      	ldr	r5, [pc, #20]	; (8004574 <_close_r+0x1c>)
 800455e:	4604      	mov	r4, r0
 8004560:	4608      	mov	r0, r1
 8004562:	602b      	str	r3, [r5, #0]
 8004564:	f7fc fec7 	bl	80012f6 <_close>
 8004568:	1c43      	adds	r3, r0, #1
 800456a:	d102      	bne.n	8004572 <_close_r+0x1a>
 800456c:	682b      	ldr	r3, [r5, #0]
 800456e:	b103      	cbz	r3, 8004572 <_close_r+0x1a>
 8004570:	6023      	str	r3, [r4, #0]
 8004572:	bd38      	pop	{r3, r4, r5, pc}
 8004574:	20000264 	.word	0x20000264

08004578 <_fstat_r>:
 8004578:	b538      	push	{r3, r4, r5, lr}
 800457a:	2300      	movs	r3, #0
 800457c:	4d06      	ldr	r5, [pc, #24]	; (8004598 <_fstat_r+0x20>)
 800457e:	4604      	mov	r4, r0
 8004580:	4608      	mov	r0, r1
 8004582:	4611      	mov	r1, r2
 8004584:	602b      	str	r3, [r5, #0]
 8004586:	f7fc fec1 	bl	800130c <_fstat>
 800458a:	1c43      	adds	r3, r0, #1
 800458c:	d102      	bne.n	8004594 <_fstat_r+0x1c>
 800458e:	682b      	ldr	r3, [r5, #0]
 8004590:	b103      	cbz	r3, 8004594 <_fstat_r+0x1c>
 8004592:	6023      	str	r3, [r4, #0]
 8004594:	bd38      	pop	{r3, r4, r5, pc}
 8004596:	bf00      	nop
 8004598:	20000264 	.word	0x20000264

0800459c <_isatty_r>:
 800459c:	b538      	push	{r3, r4, r5, lr}
 800459e:	2300      	movs	r3, #0
 80045a0:	4d05      	ldr	r5, [pc, #20]	; (80045b8 <_isatty_r+0x1c>)
 80045a2:	4604      	mov	r4, r0
 80045a4:	4608      	mov	r0, r1
 80045a6:	602b      	str	r3, [r5, #0]
 80045a8:	f7fc febf 	bl	800132a <_isatty>
 80045ac:	1c43      	adds	r3, r0, #1
 80045ae:	d102      	bne.n	80045b6 <_isatty_r+0x1a>
 80045b0:	682b      	ldr	r3, [r5, #0]
 80045b2:	b103      	cbz	r3, 80045b6 <_isatty_r+0x1a>
 80045b4:	6023      	str	r3, [r4, #0]
 80045b6:	bd38      	pop	{r3, r4, r5, pc}
 80045b8:	20000264 	.word	0x20000264

080045bc <_lseek_r>:
 80045bc:	b538      	push	{r3, r4, r5, lr}
 80045be:	4604      	mov	r4, r0
 80045c0:	4608      	mov	r0, r1
 80045c2:	4611      	mov	r1, r2
 80045c4:	2200      	movs	r2, #0
 80045c6:	4d05      	ldr	r5, [pc, #20]	; (80045dc <_lseek_r+0x20>)
 80045c8:	602a      	str	r2, [r5, #0]
 80045ca:	461a      	mov	r2, r3
 80045cc:	f7fc feb7 	bl	800133e <_lseek>
 80045d0:	1c43      	adds	r3, r0, #1
 80045d2:	d102      	bne.n	80045da <_lseek_r+0x1e>
 80045d4:	682b      	ldr	r3, [r5, #0]
 80045d6:	b103      	cbz	r3, 80045da <_lseek_r+0x1e>
 80045d8:	6023      	str	r3, [r4, #0]
 80045da:	bd38      	pop	{r3, r4, r5, pc}
 80045dc:	20000264 	.word	0x20000264

080045e0 <_malloc_usable_size_r>:
 80045e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80045e4:	1f18      	subs	r0, r3, #4
 80045e6:	2b00      	cmp	r3, #0
 80045e8:	bfbc      	itt	lt
 80045ea:	580b      	ldrlt	r3, [r1, r0]
 80045ec:	18c0      	addlt	r0, r0, r3
 80045ee:	4770      	bx	lr

080045f0 <_read_r>:
 80045f0:	b538      	push	{r3, r4, r5, lr}
 80045f2:	4604      	mov	r4, r0
 80045f4:	4608      	mov	r0, r1
 80045f6:	4611      	mov	r1, r2
 80045f8:	2200      	movs	r2, #0
 80045fa:	4d05      	ldr	r5, [pc, #20]	; (8004610 <_read_r+0x20>)
 80045fc:	602a      	str	r2, [r5, #0]
 80045fe:	461a      	mov	r2, r3
 8004600:	f7fc fe40 	bl	8001284 <_read>
 8004604:	1c43      	adds	r3, r0, #1
 8004606:	d102      	bne.n	800460e <_read_r+0x1e>
 8004608:	682b      	ldr	r3, [r5, #0]
 800460a:	b103      	cbz	r3, 800460e <_read_r+0x1e>
 800460c:	6023      	str	r3, [r4, #0]
 800460e:	bd38      	pop	{r3, r4, r5, pc}
 8004610:	20000264 	.word	0x20000264

08004614 <_init>:
 8004614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004616:	bf00      	nop
 8004618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800461a:	bc08      	pop	{r3}
 800461c:	469e      	mov	lr, r3
 800461e:	4770      	bx	lr

08004620 <_fini>:
 8004620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004622:	bf00      	nop
 8004624:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004626:	bc08      	pop	{r3}
 8004628:	469e      	mov	lr, r3
 800462a:	4770      	bx	lr
